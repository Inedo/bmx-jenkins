<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BuildMasterCore</name>
    </assembly>
    <members>
        <member name="T:Inedo.BuildMaster.Artifacts.Artifact">
            <summary>
            Represents a BuildMaster artifact.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Artifacts.Artifact.#ctor(Inedo.BuildMaster.Data.Tables.BuildArtifacts_Extended)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Artifacts.Artifact"/> class.
            </summary>
            <param name="artifact">The artifact database row.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Artifacts.Artifact.#ctor(Inedo.BuildMaster.Data.Tables.BuildArtifacts_Slim)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Artifacts.Artifact"/> class.
            </summary>
            <param name="artifact">The artifact database row.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Artifacts.Artifact.op_Equality(Inedo.BuildMaster.Artifacts.Artifact,Inedo.BuildMaster.Artifacts.Artifact)">
            <summary>
            Tests for equality.
            </summary>
            <param name="a1">The first artifact.</param>
            <param name="a2">The second artifact.</param>
            <returns>True if artifacts are equivalent; otherwise false.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Artifacts.Artifact.op_Inequality(Inedo.BuildMaster.Artifacts.Artifact,Inedo.BuildMaster.Artifacts.Artifact)">
            <summary>
            Tests for inequality.
            </summary>
            <param name="a1">The first artifact.</param>
            <param name="a2">The second artifact.</param>
            <returns>True if artifacts are not equivalent; otherwise false.</returns>
        </member>
        <member name="P:Inedo.BuildMaster.Artifacts.Artifact.ApplicationId">
            <summary>
            Gets the application ID.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Artifacts.Artifact.ReleaseId">
            <summary>
            Gets the release ID.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Artifacts.Artifact.BuildId">
            <summary>
            Gets the build ID.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Artifacts.Artifact.DeployableId">
            <summary>
            Gets the deployable ID associated with the artifact, if any.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Artifacts.Artifact.Created">
            <summary>
            Gets the UTC time when the artifact was created.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Artifacts.Artifact.ApplicationName">
            <summary>
            Gets the application name.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Artifacts.Artifact.ReleaseNumber">
            <summary>
            Gets the release number.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Artifacts.Artifact.BuildNumber">
            <summary>
            Gets the build number.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Artifacts.Artifact.DeployableName">
            <summary>
            Gets the name of the deployable associated with the artifact, if any.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Artifacts.Artifact.Name">
            <summary>
            Gets the artifact name.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Artifacts.Artifact.RelativePath">
            <summary>
            Gets the relative path on disk of the artifact file on the BuildMaster server.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Artifacts.Artifact.FullPath">
            <summary>
            Gets the absolute path of the artifact file on the BuildMaster server.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Artifacts.Artifact.FileExists">
            <summary>
            Gets a value indicating whether the artifact file actually exists at the location specified by <see cref="P:Inedo.BuildMaster.Artifacts.Artifact.FullPath"/>.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Artifacts.Artifact.Open">
            <summary>
            Opens the artifact file.
            </summary>
            <returns>Stream backed by the artifact.</returns>
            <remarks>
            The stream returned by this method is optimized for synchronous reading.
            </remarks>
        </member>
        <member name="M:Inedo.BuildMaster.Artifacts.Artifact.OpenAsync">
            <summary>
            Opens the artifact file.
            </summary>
            <returns>Stream backed by the artifact.</returns>
            <remarks>
            The stream returned by this method is optimized for asynchronous reading.
            </remarks>
        </member>
        <member name="M:Inedo.BuildMaster.Artifacts.Artifact.Delete">
            <summary>
            Deletes the artifact from disk and the database.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Artifacts.Artifact.DeleteAsync">
            <summary>
            Deletes the artifact from disk and the database.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Artifacts.Artifact.Equals(Inedo.BuildMaster.Artifacts.Artifact,Inedo.BuildMaster.Artifacts.Artifact)">
            <summary>
            Returns a value indicating whether the specified artifacts are equivalent.
            </summary>
            <param name="a1">The first artifact.</param>
            <param name="a2">The second artifact.</param>
            <returns>True if artifacts are identical; otherwise false.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Artifacts.Artifact.Equals(Inedo.BuildMaster.Artifacts.Artifact)">
            <summary>
            Returns a value indicating whether this artifact is equivalent to another artifact.
            </summary>
            <param name="other">Other artifact to compare to.</param>
            <returns>True if artifacts are identical; otherwise false.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Artifacts.Artifact.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this artifact is equivalent to another artifact.
            </summary>
            <param name="obj">Other artifact to compare to.</param>
            <returns>True if artifacts are identical; otherwise false.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Artifacts.Artifact.GetHashCode">
            <summary>
            Returns a hash code for the artifact.
            </summary>
            <returns>Hash code for the artifact.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Artifacts.Artifact.ToString">
            <summary>
            Returns the artifact name.
            </summary>
            <returns>The artifact name.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Artifacts.Artifact.GetArtifact(System.Int32,System.String,System.String,System.String)">
            <summary>
            Returns the specified artifact if it exists; otherwise returns null.
            </summary>
            <param name="applicationId">The ID of the application which contains the artifact.</param>
            <param name="releaseNumber">The release number which contains the artifact.</param>
            <param name="buildNumber">The build number which contains the artifact.</param>
            <param name="artifactName">The name of the artifact.</param>
            <returns>Specified artifact if it exists; otherwise null.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Artifacts.Artifact.GetArtifactAsync(System.Int32,System.String,System.String,System.String)">
            <summary>
            Returns the specified artifact if it exists; otherwise returns null.
            </summary>
            <param name="applicationId">The ID of the application which contains the artifact.</param>
            <param name="releaseNumber">The release number which contains the artifact.</param>
            <param name="buildNumber">The build number which contains the artifact.</param>
            <param name="artifactName">The name of the artifact.</param>
            <returns>Specified artifact if it exists; otherwise null.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Artifacts.Artifact.GetArtifacts(System.Int32,System.String)">
            <summary>
            Returns all of the artifacts in the specified release of the specified application.
            </summary>
            <param name="applicationId">The ID of the application.</param>
            <param name="releaseNumber">The release number.</param>
            <returns>Artifacts contained in the specified release.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Artifacts.Artifact.GetArtifacts(System.Int32,System.String,System.String)">
            <summary>
            Returns all of the artifacts in the specified build of the specified application.
            </summary>
            <param name="applicationId">The ID of the application.</param>
            <param name="releaseNumber">The release number.</param>
            <param name="buildNumber">The build number.</param>
            <returns>Artifacts contained in the specified build.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Artifacts.Artifact.GetArtifacts(System.Int32,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Returns all of the artifacts in the specified build of the specified application
            that are associated with the specified deployable.
            </summary>
            <param name="applicationId">The ID of the application.</param>
            <param name="releaseNumber">The release number.</param>
            <param name="buildNumber">The build number.</param>
            <param name="deployableId">The deployable ID. A value of null will include all deployables.</param>
            <returns>Artifacts contained in the specified build.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Artifacts.Artifact.CreateArtifact(System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.IO.Stream,System.Boolean)">
            <summary>
            Creates or overwrites an artifact.
            </summary>
            <param name="applicationId">The ID of the containing application.</param>
            <param name="releaseNumber">The containing release number.</param>
            <param name="buildNumber">The containing build number.</param>
            <param name="deployableId">The associated deployable ID, or null for no deployable.</param>
            <param name="executionId">The associated execution ID, or null for not applicable.</param>
            <param name="artifactName">The name of the artifact. This must be unique to the build.</param>
            <param name="artifactData">Stream containing artifact data to copy to the library; this should be a zip file.</param>
            <param name="overwrite">Value indicating whether an existing artifact can be overwritten.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="releaseNumber"/>, <paramref name="buildNumber"/>, or <paramref name="artifactName"/> are null or empty, or <paramref name="artifactData"/> is null.</exception>
            <exception cref="T:System.ArgumentException">The specified build, release, or application does not exist.</exception>
            <exception cref="T:System.InvalidOperationException">The artifact already exists and <paramref name="overwrite"/> is false.</exception>
        </member>
        <member name="M:Inedo.BuildMaster.Artifacts.Artifact.CreateArtifact(System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.IO.Stream,System.Boolean,System.Boolean)">
            <summary>
            Creates or overwrites an artifact.
            </summary>
            <param name="applicationId">The ID of the containing application.</param>
            <param name="releaseNumber">The containing release number.</param>
            <param name="buildNumber">The containing build number.</param>
            <param name="deployableId">The associated deployable ID, or null for no deployable.</param>
            <param name="executionId">The associated execution ID, or null for not applicable.</param>
            <param name="artifactName">The name of the artifact. This must be unique to the build.</param>
            <param name="artifactData">Stream containing artifact data to copy to the library; this should be a zip file.</param>
            <param name="overwrite">Value indicating whether an existing artifact can be overwritten.</param>
            <param name="useLegacyPath">Value indicating whether to create the artifact using the legacy path format.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="releaseNumber"/>, <paramref name="buildNumber"/>, or <paramref name="artifactName"/> are null or empty, or <paramref name="artifactData"/> is null.</exception>
            <exception cref="T:System.ArgumentException">The specified build, release, or application does not exist.</exception>
            <exception cref="T:System.InvalidOperationException">The artifact already exists and <paramref name="overwrite"/> is false.</exception>
        </member>
        <member name="M:Inedo.BuildMaster.Artifacts.Artifact.CreateArtifactAsync(System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.IO.Stream,System.Boolean)">
            <summary>
            Creates or overwrites an artifact.
            </summary>
            <param name="applicationId">The ID of the containing application.</param>
            <param name="releaseNumber">The containing release number.</param>
            <param name="buildNumber">The containing build number.</param>
            <param name="deployableId">The associated deployable ID, or null for no deployable.</param>
            <param name="executionId">The associated execution ID, or null for not applicable.</param>
            <param name="artifactName">The name of the artifact. This must be unique to the build.</param>
            <param name="artifactData">Stream containing artifact data to copy to the library; this should be a zip file.</param>
            <param name="overwrite">Value indicating whether an existing artifact can be overwritten.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="releaseNumber"/>, <paramref name="buildNumber"/>, or <paramref name="artifactName"/> are null or empty, or <paramref name="artifactData"/> is null.</exception>
            <exception cref="T:System.ArgumentException">The specified build, release, or application does not exist.</exception>
            <exception cref="T:System.InvalidOperationException">The artifact already exists and <paramref name="overwrite"/> is false.</exception>
        </member>
        <member name="M:Inedo.BuildMaster.Artifacts.Artifact.CreateArtifactAsync(System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.IO.Stream,System.Boolean,System.Boolean)">
            <summary>
            Creates or overwrites an artifact.
            </summary>
            <param name="applicationId">The ID of the containing application.</param>
            <param name="releaseNumber">The containing release number.</param>
            <param name="buildNumber">The containing build number.</param>
            <param name="deployableId">The associated deployable ID, or null for no deployable.</param>
            <param name="executionId">The associated execution ID, or null for not applicable.</param>
            <param name="artifactName">The name of the artifact. This must be unique to the build.</param>
            <param name="artifactData">Stream containing artifact data to copy to the library; this should be a zip file.</param>
            <param name="overwrite">Value indicating whether an existing artifact can be overwritten.</param>
            <param name="useLegacyPath">Value indicating whether to create the artifact using the legacy path format.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="releaseNumber"/>, <paramref name="buildNumber"/>, or <paramref name="artifactName"/> are null or empty, or <paramref name="artifactData"/> is null.</exception>
            <exception cref="T:System.ArgumentException">The specified build, release, or application does not exist.</exception>
            <exception cref="T:System.InvalidOperationException">The artifact already exists and <paramref name="overwrite"/> is false.</exception>
        </member>
        <member name="T:Inedo.BuildMaster.Artifacts.ArtifactBuilder">
            <summary>
            Facilitates creating a BuildMaster artifact from files in a disk path.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Artifacts.ArtifactBuilder.#ctor(Inedo.BuildMaster.Artifacts.ArtifactIdentifier)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Artifacts.ArtifactBuilder"/> class.
            </summary>
            <param name="artifact">The artifact to create.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="artifact"/> is null.</exception>
        </member>
        <member name="M:Inedo.BuildMaster.Artifacts.ArtifactBuilder.#ctor(Inedo.BuildMaster.Artifacts.ArtifactIdentifier,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Artifacts.ArtifactBuilder"/> class.
            </summary>
            <param name="artifact">The artifact to create.</param>
            <param name="executionId">The ID of the associated execution.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="artifact"/> is null.</exception>
        </member>
        <member name="P:Inedo.BuildMaster.Artifacts.ArtifactBuilder.Artifact">
            <summary>
            Gets the artifact being created.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Artifacts.ArtifactBuilder.RootPath">
            <summary>
            Gets or sets the root path for adding entries to the artifact.
            </summary>
            <remarks>
            This value is only used when adding files to the artifact with an absolute path.
            </remarks>
        </member>
        <member name="M:Inedo.BuildMaster.Artifacts.ArtifactBuilder.AddFile(System.String,System.DateTime,System.IO.Stream)">
            <summary>
            Adds a file to the artifact.
            </summary>
            <param name="path">The relative (or absolute, if contained by the path specified in <see cref="P:Inedo.BuildMaster.Artifacts.ArtifactBuilder.RootPath"/>) path of the file to add to the artifact.</param>
            <param name="lastWriteTimeUtc">The last write time (in UTC) of the file.</param>
            <param name="stream">Contents of the file.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is null or empty, or <paramref name="stream"/> is null.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="path"/> is an absolute path that is not contained by <see cref="P:Inedo.BuildMaster.Artifacts.ArtifactBuilder.RootPath"/>.</exception>
            <exception cref="T:System.InvalidOperationException"><paramref name="path"/> is an absolute path but <see name="RootPath"/> has not been initialized.</exception>
        </member>
        <member name="M:Inedo.BuildMaster.Artifacts.ArtifactBuilder.AddFile(System.String,System.DateTime,Inedo.Agents.IFileOperationsExecuter)">
            <summary>
            Adds a file to the artifact.
            </summary>
            <param name="path">The absolute path of the file to add to the artifact.</param>
            <param name="lastWriteTimeUtc">The last write time (in UTC) of the file.</param>
            <param name="fileOps">The <see cref="T:Inedo.Agents.IFileOperationsExecuter"/> which will be used to open the file.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is null or empty, or <paramref name="fileOps"/> is null.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="path"/> is not contained by <see cref="P:Inedo.BuildMaster.Artifacts.ArtifactBuilder.RootPath"/>.</exception>
            <exception cref="T:System.InvalidOperationException"><see name="RootPath"/> has not been initialized.</exception>
        </member>
        <member name="M:Inedo.BuildMaster.Artifacts.ArtifactBuilder.AddFileAsync(System.String,System.DateTime,System.IO.Stream)">
            <summary>
            Adds a file to the artifact.
            </summary>
            <param name="path">The relative (or absolute, if contained by the path specified in <see cref="P:Inedo.BuildMaster.Artifacts.ArtifactBuilder.RootPath"/>) path of the file to add to the artifact.</param>
            <param name="lastWriteTimeUtc">The last write time (in UTC) of the file.</param>
            <param name="stream">Contents of the file.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is null or empty, or <paramref name="stream"/> is null.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="path"/> is an absolute path that is not contained by <see cref="P:Inedo.BuildMaster.Artifacts.ArtifactBuilder.RootPath"/>.</exception>
            <exception cref="T:System.InvalidOperationException"><paramref name="path"/> is an absolute path but <see name="RootPath"/> has not been initialized.</exception>
        </member>
        <member name="M:Inedo.BuildMaster.Artifacts.ArtifactBuilder.AddFileAsync(System.String,System.DateTime,Inedo.Agents.IFileOperationsExecuter)">
            <summary>
            Adds a file to the artifact.
            </summary>
            <param name="path">The absolute path of the file to add to the artifact.</param>
            <param name="lastWriteTimeUtc">The last write time (in UTC) of the file.</param>
            <param name="fileOps">The <see cref="T:Inedo.Agents.IFileOperationsExecuter"/> which will be used to open the file.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is null or empty, or <paramref name="fileOps"/> is null.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="path"/> is not contained by <see cref="P:Inedo.BuildMaster.Artifacts.ArtifactBuilder.RootPath"/>.</exception>
            <exception cref="T:System.InvalidOperationException"><see name="RootPath"/> has not been initialized.</exception>
        </member>
        <member name="M:Inedo.BuildMaster.Artifacts.ArtifactBuilder.AddDirectory(System.String)">
            <summary>
            Adds a directory to the artifact.
            </summary>
            <param name="path">The relative (or absolute, if contained by the path specified in <see cref="P:Inedo.BuildMaster.Artifacts.ArtifactBuilder.RootPath"/>) path of the directory to add to the artifact.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Artifacts.ArtifactBuilder.Add(Inedo.BuildMaster.Files.FileEntryInfo,Inedo.Agents.IFileOperationsExecuter)">
            <summary>
            Adds a file to the artifact.
            </summary>
            <param name="fileEntry">The file to add.</param>
            <param name="fileOps">The <see cref="T:Inedo.Agents.IFileOperationsExecuter"/> to read the file from.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="fileEntry"/> or <paramref name="fileOps"/> is null.</exception>
        </member>
        <member name="M:Inedo.BuildMaster.Artifacts.ArtifactBuilder.Add(Inedo.BuildMaster.Files.DirectoryEntryInfo)">
            <summary>
            Adds an empty directory to the artifact.
            </summary>
            <param name="directoryEntry">The directory to add.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="directoryEntry"/> is null.</exception>
        </member>
        <member name="M:Inedo.BuildMaster.Artifacts.ArtifactBuilder.Add(Inedo.BuildMaster.Files.SystemEntryInfo,Inedo.Agents.IFileOperationsExecuter)">
            <summary>
            Adds a file or directory to the artifact.
            </summary>
            <param name="entry">The entry to add.</param>
            <param name="fileOps">The <see cref="T:Inedo.Agents.IFileOperationsExecuter"/> to read the file from.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="entry"/> or <paramref name="fileOps"/> is null.</exception>
        </member>
        <member name="M:Inedo.BuildMaster.Artifacts.ArtifactBuilder.Commit">
            <summary>
            Saves the artifact and records it in the database.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Artifacts.ArtifactBuilder.Dispose">
            <summary>
            Releases resources used by the instance.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Artifacts.ArtifactBuilder.ImportZip(Inedo.BuildMaster.Artifacts.ArtifactIdentifier,Inedo.Agents.IFileOperationsExecuter,Inedo.BuildMaster.Files.FileEntryInfo,System.Nullable{System.Int32})">
            <summary>
            Imports a zip file into the BuildMaster artifact library.
            </summary>
            <param name="artifact">The artifact to import.</param>
            <param name="fileOps">The <see cref="T:Inedo.Agents.IFileOperationsExecuter"/> to import the zip file from.</param>
            <param name="fileEntry">The zip file to import.</param>
            <param name="executionId">The ID of the associated execution.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="artifact"/>, <paramref name="fileOps"/>, or <paramref name="fileEntry"/> is null.</exception>
        </member>
        <member name="M:Inedo.BuildMaster.Artifacts.ArtifactBuilder.ImportZip(Inedo.BuildMaster.Artifacts.ArtifactIdentifier,Inedo.Agents.IFileOperationsExecuter,Inedo.BuildMaster.Files.FileEntryInfo)">
            <summary>
            Imports a zip file into the BuildMaster artifact library.
            </summary>
            <param name="artifact">The artifact to import.</param>
            <param name="fileOps">The <see cref="T:Inedo.Agents.IFileOperationsExecuter"/> to import the zip file from.</param>
            <param name="fileEntry">The zip file to import.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="artifact"/>, <paramref name="fileOps"/>, or <paramref name="fileEntry"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">File is not a zip file.</exception>
        </member>
        <member name="M:Inedo.BuildMaster.Artifacts.ArtifactBuilder.ImportZip(Inedo.BuildMaster.Artifacts.ArtifactIdentifier,System.IO.Stream)">
            <summary>
            Imports the zip file into the BuildMaster artifact library from a stream.
            </summary>
            <param name="artifact">The artifact to import.</param>
            <param name="stream">The stream of the zip file to import.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="artifact"/> or <paramref name="stream"/> is null.</exception>
        </member>
        <member name="T:Inedo.BuildMaster.Artifacts.ArtifactIdentifier">
            <summary>
            Uniquely identifies a build artifact.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Artifacts.ArtifactIdentifier.#ctor(System.Int32,System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Artifacts.ArtifactIdentifier"/> class.
            </summary>
            <param name="applicationId">The application ID of the artifact.</param>
            <param name="releaseNumber">The release number of the artifact.</param>
            <param name="buildNumber">The build number of the artifact.</param>
            <param name="deployableId">The deployable ID of the artifact if applicable.</param>
            <param name="artifactName">The name of the artifact.</param>
            <exception cref="T:System.ArgumentException"><paramref name="applicationId"/> or <paramref name="deployableId"/> is invalid.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="releaseNumber"/>, <paramref name="buildNumber"/>, or <paramref name="artifactName"/> is null, empty, or contains only whitespace.</exception>
        </member>
        <member name="P:Inedo.BuildMaster.Artifacts.ArtifactIdentifier.ApplicationId">
            <summary>
            Gets the application ID of the artifact.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Artifacts.ArtifactIdentifier.ReleaseNumber">
            <summary>
            Gets the release number of the artifact.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Artifacts.ArtifactIdentifier.BuildNumber">
            <summary>
            Gets the build number of the artifact.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Artifacts.ArtifactIdentifier.DeployableId">
            <summary>
            Gets the deployable ID of the artifact if applicable.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Artifacts.ArtifactIdentifier.ArtifactName">
            <summary>
            Gets the name of the artifact.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Artifacts.ArtifactIdentifier.Equals(Inedo.BuildMaster.Artifacts.ArtifactIdentifier)">
            <summary>
            Returns a value indicating whether this identifier is equivalent to another.
            </summary>
            <param name="other">The other identifier.</param>
            <returns>True if identifiers refer to the same artifact; otherwise false.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Artifacts.ArtifactIdentifier.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this identifier is equivalent to another.
            </summary>
            <param name="obj">The other identifier.</param>
            <returns>True if identifiers refer to the same artifact; otherwise false.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Artifacts.ArtifactIdentifier.GetHashCode">
            <summary>
            Returns a hash code for the instance.
            </summary>
            <returns>Hash code for the instance.</returns>
        </member>
        <member name="T:Inedo.BuildMaster.ConfigurationFiles.ConfigurationFileDeployer">
            <summary>
            Facilitates deploying a configuration file to an agent.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.ConfigurationFiles.ConfigurationFileDeployer.#ctor(Inedo.BuildMaster.ConfigurationFiles.ConfigurationFileDeploymentOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.ConfigurationFiles.ConfigurationFileDeployer"/> class.
            </summary>
            <param name="settings">Object containing information about the configuration file to deploy.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="settings"/> is null.</exception>
        </member>
        <member name="E:Inedo.BuildMaster.ConfigurationFiles.ConfigurationFileDeployer.MessageLogged">
            <summary>
            Occurs when a message has been logged.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.ConfigurationFiles.ConfigurationFileDeployer.TryGetVariableValue">
            <summary>
            Sets a handler for resolving runtime values; this is intended for use by Operations
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.ConfigurationFiles.ConfigurationFileDeployer.Settings">
            <summary>
            Settings used to deploy the configuration file.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.ConfigurationFiles.ConfigurationFileDeployer.Deploy(Inedo.BuildMaster.Extensibility.IGenericBuildMasterContext,Inedo.BuildMaster.Extensibility.Agents.BuildMasterAgent)">
            <summary>
            Deploys the configuration file to the specified agent.
            </summary>
            <param name="context">The context used for deployment.</param>
            <param name="agent">The agent to deploy the configuration file to.</param>
            <returns>True if configuration file deployment succeeded or was not necessary; false if there was an error.</returns>
            <remarks>
            For details about the deployment, including any errors, subscribe to the <see cref="E:Inedo.BuildMaster.ConfigurationFiles.ConfigurationFileDeployer.MessageLogged"/> event
            before calling <see cref="M:Inedo.BuildMaster.ConfigurationFiles.ConfigurationFileDeployer.Deploy(Inedo.BuildMaster.Extensibility.IGenericBuildMasterContext,Inedo.BuildMaster.Extensibility.Agents.BuildMasterAgent)"/>.
            </remarks>
            <exception cref="T:System.ArgumentNullException"><paramref name="context"/> is null or <paramref name="agent"/> is null.</exception>
        </member>
        <member name="M:Inedo.BuildMaster.ConfigurationFiles.ConfigurationFileDeployer.Write(Inedo.BuildMaster.Extensibility.IGenericBuildMasterContext,System.IO.TextWriter)">
            <summary>
            Writes the configuration file to the specified <see cref="T:System.IO.TextWriter"/>.
            </summary>
            <param name="context">The context used for deployment.</param>
            <param name="writer">The <see cref="T:System.IO.TextWriter"/> to write the configuration file to.</param>
            <returns>True if configuration file was successfully written; false if there was an error.</returns>
            <remarks>
            For details, including any errors, subscribe to the <see cref="E:Inedo.BuildMaster.ConfigurationFiles.ConfigurationFileDeployer.MessageLogged"/> event
            before calling <see cref="M:Inedo.BuildMaster.ConfigurationFiles.ConfigurationFileDeployer.Write(Inedo.BuildMaster.Extensibility.IGenericBuildMasterContext,System.IO.TextWriter)"/>.
            </remarks>
            <exception cref="T:System.ArgumentNullException"><paramref name="context"/> is null or <paramref name="writer"/> is null.</exception>
        </member>
        <member name="M:Inedo.BuildMaster.ConfigurationFiles.ConfigurationFileDeployer.Log(Inedo.Diagnostics.MessageLevel,System.String)">
            <summary>
            Writes the specified message to the corresponding log.
            </summary>
            <param name="logLevel">Log level of the message.</param>
            <param name="message">Message to log.</param>
        </member>
        <member name="T:Inedo.BuildMaster.ConfigurationFiles.ConfigurationFileDeploymentOptions">
            <summary>
            Contains options for deploying a configuration file.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.ConfigurationFiles.ConfigurationFileDeploymentOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.ConfigurationFiles.ConfigurationFileDeploymentOptions"/> class.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.ConfigurationFiles.ConfigurationFileDeploymentOptions.ConfigurationFileId">
            <summary>
            Gets or sets the ID of the configuration file to deploy.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.ConfigurationFiles.ConfigurationFileDeploymentOptions.InstanceName">
            <summary>
            Gets or sets the name of the configuration file instance to deploy.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.ConfigurationFiles.ConfigurationFileDeploymentOptions.VersionNumber">
            <summary>
            Gets or sets the version number of the configuration file to deploy.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.ConfigurationFiles.ConfigurationFileDeploymentOptions.TargetDirectory">
            <summary>
            Gets or sets the directory into which the configuration file will be deployed.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.ConfigurationFiles.ConfigurationFileDeploymentOptions.FileName">
            <summary>
            Gets or sets the configuration file name to deploy; null indicates that the default name is used.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.ConfigurationFiles.ConfigurationFileDeploymentOptions.UserName">
            <summary>
            Gets or sets the name of the user to use when recording this deployment.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.DB">
            <summary>
            Provides strongly typed wrapper methods for stored procedures.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.DB.Context">
            <summary>
            Provides a strongly typed context wrapper to allow for transactions and row enumeration.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Data.DB.Context"/> class.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Data.DB.Context"/> class.
            </summary>
            <param name="keepConnection">Value indicating whether to maintain an open connection between commands.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.AdminEdit_PurgeArtifact(System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Purges an artifact from the specified build.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.AdminEdit_PurgeArtifactAsync(System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Purges an artifact from the specified build.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.AdminEdit_PurgeBuild(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Purges an entire build and all associated data from the system.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.AdminEdit_PurgeBuildAsync(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Purges an entire build and all associated data from the system.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.AdminEdit_UpdateBuildStatus(System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Updates the status of a build.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.AdminEdit_UpdateBuildStatusAsync(System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Updates the status of a build.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.AdminEdit_UpdateExecutionStatus(System.Nullable{System.Int32},System.String)">
            <summary>
            Updates the status of an execution.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.AdminEdit_UpdateExecutionStatusAsync(System.Nullable{System.Int32},System.String)">
            <summary>
            Updates the status of an execution.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.AdminEdit_UpdatePromotionStatus(System.Nullable{System.Int32},System.String)">
            <summary>
            Updates the status of a promotion.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.AdminEdit_UpdatePromotionStatusAsync(System.Nullable{System.Int32},System.String)">
            <summary>
            Updates the status of a promotion.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.AdminEdit_UpdateReleaseStatus(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Updates the status of a release.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.AdminEdit_UpdateReleaseStatusAsync(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Updates the status of a release.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ApiKeys_CreateOrUpdateApiKey(System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Creates or updates the specified API key.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ApiKeys_CreateOrUpdateApiKeyAsync(System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Creates or updates the specified API key.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ApiKeys_DeleteApiKey(System.Nullable{System.Int32})">
            <summary>
            Deletes the specified API key.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ApiKeys_DeleteApiKeyAsync(System.Nullable{System.Int32})">
            <summary>
            Deletes the specified API key.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ApiKeys_GetAccessLog(System.Nullable{System.Int32})">
            <summary>
            Gets the details of a specific API access log.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ApiKeys_GetAccessLogAsync(System.Nullable{System.Int32})">
            <summary>
            Gets the details of a specific API access log.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ApiKeys_GetAccessLogs(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets all API access logs.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ApiKeys_GetAccessLogsAsync(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets all API access logs.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ApiKeys_GetApiKey(System.Nullable{System.Int32})">
            <summary>
            Gets the specified API key by ID.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ApiKeys_GetApiKeyAsync(System.Nullable{System.Int32})">
            <summary>
            Gets the specified API key by ID.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ApiKeys_GetApiKeyByName(System.String)">
            <summary>
            Gets the specified API key by the API key.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ApiKeys_GetApiKeyByNameAsync(System.String)">
            <summary>
            Gets the specified API key by the API key.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ApiKeys_GetApiKeys">
            <summary>
            Gets all API keys in the system.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ApiKeys_GetApiKeysAsync">
            <summary>
            Gets all API keys in the system.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ApiKeys_LogRequest(System.String,System.Nullable{System.DateTime},System.String,System.String,System.String,System.Nullable{System.Int32},System.Byte[],System.Byte[])">
            <summary>
            Logs a request made with an API key.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ApiKeys_LogRequestAsync(System.String,System.Nullable{System.DateTime},System.String,System.String,System.String,System.Nullable{System.Int32},System.Byte[],System.Byte[])">
            <summary>
            Logs a request made with an API key.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ApplicationGroups_CreateOrUpdateApplicationGroup(System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Creates or updates a new application group
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ApplicationGroups_CreateOrUpdateApplicationGroupAsync(System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Creates or updates a new application group
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ApplicationGroups_DeleteApplicationGroup(System.Nullable{System.Int32})">
            <summary>
            Deletes an application group
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ApplicationGroups_DeleteApplicationGroupAsync(System.Nullable{System.Int32})">
            <summary>
            Deletes an application group
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ApplicationGroups_GetApplicationGroup(System.Nullable{System.Int32})">
            <summary>
            Gets an application group by ID.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ApplicationGroups_GetApplicationGroupAsync(System.Nullable{System.Int32})">
            <summary>
            Gets an application group by ID.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ApplicationGroups_GetApplicationGroups">
            <summary>
            Gets all the application groups
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ApplicationGroups_GetApplicationGroupsAsync">
            <summary>
            Gets all the application groups
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ApplicationGroups_GetOrCreateApplicationGroup(System.String,System.Nullable{System.Int32})">
            <summary>
            Gets or creates a new application group using the name
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ApplicationGroups_GetOrCreateApplicationGroupAsync(System.String,System.Nullable{System.Int32})">
            <summary>
            Gets or creates a new application group using the name
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Applications_AddImportedDeployable(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Adds an imported deployable to an application
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Applications_AddImportedDeployableAsync(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Adds an imported deployable to an application
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Applications_CreateApplication(System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{Inedo.Data.YNIndicator},System.Nullable{Inedo.Data.YNIndicator},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Creates a new application.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Applications_CreateApplicationAsync(System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{Inedo.Data.YNIndicator},System.Nullable{Inedo.Data.YNIndicator},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Creates a new application.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Applications_CreateOrUpdateDeployable(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Creates a deployable for a specified application, or updates an existing one
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Applications_CreateOrUpdateDeployableAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Creates a deployable for a specified application, or updates an existing one
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Applications_DeactivateApplication(System.Nullable{System.Int32})">
            <summary>
            Deactivates an application, removing it from menu options but preserves data.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Applications_DeactivateApplicationAsync(System.Nullable{System.Int32})">
            <summary>
            Deactivates an application, removing it from menu options but preserves data.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Applications_DeleteImportedDeployable(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Deletes an existing imported deployable relation, but does not delete the deployable from the host application
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Applications_DeleteImportedDeployableAsync(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Deletes an existing imported deployable relation, but does not delete the deployable from the host application
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Applications_EditApplication(System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{Inedo.Data.YNIndicator},System.Nullable{Inedo.Data.YNIndicator},System.String,System.String,System.String)">
            <summary>
            Edits an existing application.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Applications_EditApplicationAsync(System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{Inedo.Data.YNIndicator},System.Nullable{Inedo.Data.YNIndicator},System.String,System.String,System.String)">
            <summary>
            Edits an existing application.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Applications_FindDeployables(System.String,System.Nullable{System.Int32})">
            <summary>
            Searches for deployables in the system.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Applications_FindDeployablesAsync(System.String,System.Nullable{System.Int32})">
            <summary>
            Searches for deployables in the system.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Applications_GetApplication(System.Nullable{System.Int32})">
            <summary>
            Gets the details of an application along with the associated deployables
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Applications_GetApplicationAsync(System.Nullable{System.Int32})">
            <summary>
            Gets the details of an application along with the associated deployables
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Applications_GetApplications(System.Nullable{System.Int32},System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Gets the specified number of applications in the system, or all if null is passed in
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Applications_GetApplicationsAsync(System.Nullable{System.Int32},System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Gets the specified number of applications in the system, or all if null is passed in
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Applications_GetDependentApplications(System.Nullable{System.Int32})">
            <summary>
            Gets all applications with imported deployables from a specified application
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Applications_GetDependentApplicationsAsync(System.Nullable{System.Int32})">
            <summary>
            Gets all applications with imported deployables from a specified application
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Applications_GetDeployable(System.Nullable{System.Int32})">
            <summary>
            Gets the specified deployable
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Applications_GetDeployableAsync(System.Nullable{System.Int32})">
            <summary>
            Gets the specified deployable
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Applications_GetDeployableDependencies(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets a set of dependencies for the deployables in a given application or a specific deployable if one is specified
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Applications_GetDeployableDependenciesAsync(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets a set of dependencies for the deployables in a given application or a specific deployable if one is specified
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Applications_GetDeployables(System.Nullable{System.Int32})">
            <summary>
            Gets the deployables for a specific application or for all applications.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Applications_GetDeployablesAsync(System.Nullable{System.Int32})">
            <summary>
            Gets the deployables for a specific application or for all applications.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Applications_GetImportedDeployables(System.Nullable{System.Int32})">
            <summary>
            Gets a set a imported deployables for a specified application
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Applications_GetImportedDeployablesAsync(System.Nullable{System.Int32})">
            <summary>
            Gets a set a imported deployables for a specified application
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Applications_GetLatestEnvironmentExecutions(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets a view of all the latest executions grouped by application and environment, optionally filtered by application or application group.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Applications_GetLatestEnvironmentExecutionsAsync(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets a view of all the latest executions grouped by application and environment, optionally filtered by application or application group.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Applications_GetNavigationData(System.Nullable{System.Int32})">
            <summary>
            Gets the information required to display the application navigation bar.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Applications_GetNavigationDataAsync(System.Nullable{System.Int32})">
            <summary>
            Gets the information required to display the application navigation bar.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Applications_GetSpecifiedApplications(System.String)">
            <summary>
            Gets only the active applications in the specified CSV string.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Applications_GetSpecifiedApplicationsAsync(System.String)">
            <summary>
            Gets only the active applications in the specified CSV string.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Applications_PurgeApplicationData(System.Nullable{System.Int32})">
            <summary>
            Purges an entire application and all associated data from the system.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Applications_PurgeApplicationDataAsync(System.Nullable{System.Int32})">
            <summary>
            Purges an entire application and all associated data from the system.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Applications_PurgeDeployableData(System.Nullable{System.Int32})">
            <summary>
            Purges a deployable and all its associations from the system.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Applications_PurgeDeployableDataAsync(System.Nullable{System.Int32})">
            <summary>
            Purges a deployable and all its associations from the system.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Applications_ReactivateApplication(System.Nullable{System.Int32})">
            <summary>
            Reactivates an application that has been deactivated.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Applications_ReactivateApplicationAsync(System.Nullable{System.Int32})">
            <summary>
            Reactivates an application that has been deactivated.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Applications_SearchApplications(System.String)">
            <summary>
            Searches for applications by application name and group name that contain the search term.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Applications_SearchApplicationsAsync(System.String)">
            <summary>
            Searches for applications by application name and group name that contain the search term.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Applications_SetDashboard(System.Nullable{System.Int32},System.String)">
            <summary>
            Sets the dashboard text for an application
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Applications_SetDashboardAsync(System.Nullable{System.Int32},System.String)">
            <summary>
            Sets the dashboard text for an application
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Applications_SetDeployableDependencies(System.Nullable{System.Int32},System.String)">
            <summary>
            Sets the dependency relationships between the specified deployable and its dependents
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Applications_SetDeployableDependenciesAsync(System.Nullable{System.Int32},System.String)">
            <summary>
            Sets the dependency relationships between the specified deployable and its dependents
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Applications_SetIssueTracker(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Sets the issue tracking provider of a specified application.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Applications_SetIssueTrackerAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Sets the issue tracking provider of a specified application.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Applications_ValidateHealth(System.Nullable{System.Int32})">
            <summary>
            Gets data relevant to the Application Health page.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Applications_ValidateHealthAsync(System.Nullable{System.Int32})">
            <summary>
            Gets data relevant to the Application Health page.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Artifacts_CreateOrReplaceArtifact(System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Creates a reference to an artifact in the artifact library.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Artifacts_CreateOrReplaceArtifactAsync(System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Creates a reference to an artifact in the artifact library.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Artifacts_GetArtifact(System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Gets an artifact based on the specified criteria.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Artifacts_GetArtifactAsync(System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Gets an artifact based on the specified criteria.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Artifacts_GetArtifacts(System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets a set of artifacts based on the specified criteria.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Artifacts_GetArtifactsAsync(System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets a set of artifacts based on the specified criteria.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Artifacts_GetArtifactsByBuildStatus(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Gets a set of artifacts that are associated with a specified build status, optionally filtered by application and release.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Artifacts_GetArtifactsByBuildStatusAsync(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Gets a set of artifacts that are associated with a specified build status, optionally filtered by application and release.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.BuildExecutions_GetPipelineStageNames">
            <summary>
            Gets all stage names based on the target of an execution.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.BuildExecutions_GetPipelineStageNamesAsync">
            <summary>
            Gets all stage names based on the target of an execution.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.BuildMaster_GetAlerts(System.String)">
            <summary>
            Gets the alerts.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.BuildMaster_GetAlertsAsync(System.String)">
            <summary>
            Gets the alerts.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.BuildMaster_GetCurrentDateTime(System.Nullable{System.DateTime})">
            <summary>
            Stored procedure for internal use only.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.BuildMaster_GetCurrentDateTimeAsync(System.Nullable{System.DateTime})">
            <summary>
            Stored procedure for internal use only.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.BuildMaster_GetUsageInfo">
            <summary>
            Gets miscellaneous usage data from the system.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.BuildMaster_GetUsageInfoAsync">
            <summary>
            Gets miscellaneous usage data from the system.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.BuildOutputs_AddOutput(System.Nullable{System.Int32},System.String,System.Byte[],System.String)">
            <summary>
            Adds a build output report to a specified build execution
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.BuildOutputs_AddOutputAsync(System.Nullable{System.Int32},System.String,System.Byte[],System.String)">
            <summary>
            Adds a build output report to a specified build execution
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.BuildOutputs_GetOutput(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets the build output report for a specified build and sequence number
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.BuildOutputs_GetOutputAsync(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets the build output report for a specified build and sequence number
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.BuildOutputs_GetOutputs(System.Nullable{System.Int32})">
            <summary>
            Gets the build output reports for a specified build
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.BuildOutputs_GetOutputsAsync(System.Nullable{System.Int32})">
            <summary>
            Gets the build output reports for a specified build
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Builds_CompletePromotion(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Completes a build promotion.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Builds_CompletePromotionAsync(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Completes a build promotion.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Builds_CreateBuild(System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Creates a new build of an application.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Builds_CreateBuildAsync(System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Creates a new build of an application.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Builds_DeployBuild(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Marks a build and its associated release as deployed based on the settings in its workflow.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Builds_DeployBuildAsync(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Marks a build and its associated release as deployed based on the settings in its workflow.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Builds_GetBuild(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Gets the details for a specified build.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Builds_GetBuildAsync(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Gets the details for a specified build.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Builds_GetBuildById(System.Nullable{System.Int32})">
            <summary>
            Gets the details for a specified build by ID.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Builds_GetBuildByIdAsync(System.Nullable{System.Int32})">
            <summary>
            Gets the details for a specified build by ID.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Builds_GetBuilds(System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Gets the details for all builds that match the specified criteria.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Builds_GetBuildsAsync(System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Gets the details for all builds that match the specified criteria.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Builds_GetExecution(System.Nullable{System.Int32})">
            <summary>
            Gets all details regarding a specific build execution
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Builds_GetExecutionAsync(System.Nullable{System.Int32})">
            <summary>
            Gets all details regarding a specific build execution
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Builds_GetExecutionExtended(System.Nullable{System.Int32})">
            <summary>
            Gets all details regarding a specific build execution.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Builds_GetExecutionExtendedAsync(System.Nullable{System.Int32})">
            <summary>
            Gets all details regarding a specific build execution.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Builds_GetExecutions(System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Gets all the build executions for the specified build
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Builds_GetExecutionsAsync(System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Gets all the build executions for the specified build
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Builds_GetExecutionsByServer(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets recent build executions for the specified server.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Builds_GetExecutionsByServerAsync(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets recent build executions for the specified server.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Builds_GetExecutionsInProgress(System.Nullable{System.Int32})">
            <summary>
            Gets all executions in the executing state optionally filtered by application.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Builds_GetExecutionsInProgressAsync(System.Nullable{System.Int32})">
            <summary>
            Gets all executions in the executing state optionally filtered by application.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Builds_GetPromotion(System.Nullable{System.Int32})">
            <summary>
            Gets a build promotion.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Builds_GetPromotionAsync(System.Nullable{System.Int32})">
            <summary>
            Gets a build promotion.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Builds_GetPromotions(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Gets all of the promotions that have occurred.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Builds_GetPromotionsAsync(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Gets all of the promotions that have occurred.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Builds_InitiateBuildExecution(System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Initiates a new build execution.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Builds_InitiateBuildExecutionAsync(System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Initiates a new build execution.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Builds_PromoteBuild(System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{Inedo.Data.YNIndicator},System.String,System.Nullable{Inedo.Data.YNIndicator},System.Nullable{System.Int32})">
            <summary>
            Promotes a build to to a pipeline stage.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Builds_PromoteBuildAsync(System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{Inedo.Data.YNIndicator},System.String,System.Nullable{Inedo.Data.YNIndicator},System.Nullable{System.Int32})">
            <summary>
            Promotes a build to to a pipeline stage.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Builds_PurgeBuildData(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Purges an entire build and all associated data from the system.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Builds_PurgeBuildDataAsync(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Purges an entire build and all associated data from the system.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Builds_PurgeExecutionLogs(System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.Int64})">
            <summary>
            Purges execution logs in a specific build before a specified time.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Builds_PurgeExecutionLogsAsync(System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.Int64})">
            <summary>
            Purges execution logs in a specific build before a specified time.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Builds_RejectBuild(System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Rejects the specified build.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Builds_RejectBuildAsync(System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Rejects the specified build.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Builds_SetBuildNumber(System.Nullable{System.Int32},System.String)">
            <summary>
            Sets the build number of a build.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Builds_SetBuildNumberAsync(System.Nullable{System.Int32},System.String)">
            <summary>
            Sets the build number of a build.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.BuildSchedules_CreateOrUpdateRecurring(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Creates a recurring build based on the specified parameters, or updates an existing schedule if one with the given ID already exists.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.BuildSchedules_CreateOrUpdateRecurringAsync(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Creates a recurring build based on the specified parameters, or updates an existing schedule if one with the given ID already exists.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.BuildSchedules_CreateOrUpdateSchedule(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{Inedo.Data.YNIndicator},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Creates a scheduled build based on the specified parameters, or updates an existing scheduled build if one with the given ID already exists.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.BuildSchedules_CreateOrUpdateScheduleAsync(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{Inedo.Data.YNIndicator},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Creates a scheduled build based on the specified parameters, or updates an existing scheduled build if one with the given ID already exists.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.BuildSchedules_CreateOrUpdateSCMTriggered(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Creates a source control triggered automated build based on the specified parameters, or updates an existing one if one with a given ID already exists.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.BuildSchedules_CreateOrUpdateSCMTriggeredAsync(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Creates a source control triggered automated build based on the specified parameters, or updates an existing one if one with a given ID already exists.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.BuildSchedules_CreateOrUpdateURLTriggered(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Creates a URL-triggered build based on the specified parameters, or updates an existing schedule if one with the given ID already exists.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.BuildSchedules_CreateOrUpdateURLTriggeredAsync(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Creates a URL-triggered build based on the specified parameters, or updates an existing schedule if one with the given ID already exists.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.BuildSchedules_DeleteBuildSchedule(System.Nullable{System.Int32})">
            <summary>
            Deletes the specified build schedule
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.BuildSchedules_DeleteBuildScheduleAsync(System.Nullable{System.Int32})">
            <summary>
            Deletes the specified build schedule
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.BuildSchedules_GetBuildSchedule(System.Nullable{System.Int32})">
            <summary>
            Gets the specified build schedule
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.BuildSchedules_GetBuildScheduleAsync(System.Nullable{System.Int32})">
            <summary>
            Gets the specified build schedule
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.BuildSchedules_GetBuildSchedules(System.Nullable{System.Int32},System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Gets a set of builds schedules for the specified application and active indicator, or all if null is supplied
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.BuildSchedules_GetBuildSchedulesAsync(System.Nullable{System.Int32},System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Gets a set of builds schedules for the specified application and active indicator, or all if null is supplied
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.BuildSchedules_SetLastExecutionDate(System.Nullable{System.Int32},System.Nullable{System.DateTime})">
            <summary>
            Sets the last execution date for a scheduled build.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.BuildSchedules_SetLastExecutionDateAsync(System.Nullable{System.Int32},System.Nullable{System.DateTime})">
            <summary>
            Sets the last execution date for a scheduled build.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.BuildSchedules_SetVariableDefinition(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Updates a variable definition to use with a scheduled build
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.BuildSchedules_SetVariableDefinitionAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Updates a variable definition to use with a scheduled build
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.BuildTestResults_GetAllGroups">
            <summary>
            Gets all of the test result groups in the system.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.BuildTestResults_GetAllGroupsAsync">
            <summary>
            Gets all of the test result groups in the system.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.BuildTestResults_GetTestGroupResults(System.Nullable{System.Int32})">
            <summary>
            Gets the unit test results for a specified build execution.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.BuildTestResults_GetTestGroupResultsAsync(System.Nullable{System.Int32})">
            <summary>
            Gets the unit test results for a specified build execution.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.BuildTestResults_GetTestGroupResultsForBuild(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Gets the unit test results for the specified build.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.BuildTestResults_GetTestGroupResultsForBuildAsync(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Gets the unit test results for the specified build.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.BuildTestResults_GetTestHistory(System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Gets this history of a test by its name, and optionally filtered by test group and application.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.BuildTestResults_GetTestHistoryAsync(System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Gets this history of a test by its name, and optionally filtered by test group and application.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.BuildTestResults_GetTestLog(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Gets the results of a specific unit test
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.BuildTestResults_GetTestLogAsync(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Gets the results of a specific unit test
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.BuildTestResults_GetTestResults(System.Nullable{System.Int32},System.String)">
            <summary>
            Gets the build test results based on the specified criteria.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.BuildTestResults_GetTestResultsAsync(System.Nullable{System.Int32},System.String)">
            <summary>
            Gets the build test results based on the specified criteria.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.BuildTestResults_RecordTestResult(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Logs the result of an individual unit test.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.BuildTestResults_RecordTestResultAsync(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Logs the result of an individual unit test.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ChangeControlPerformances_GetReleaseSummary(System.Nullable{System.Int32})">
            <summary>
            Gets a summary of the change control performances for a specified change control.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ChangeControlPerformances_GetReleaseSummaryAsync(System.Nullable{System.Int32})">
            <summary>
            Gets a summary of the change control performances for a specified change control.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ChangeControls_CreateOrUpdateChangeControl(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{Inedo.Data.YNIndicator},System.String)">
            <summary>
            Creates a new change control, or updates an existing one.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ChangeControls_CreateOrUpdateChangeControlAsync(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{Inedo.Data.YNIndicator},System.String)">
            <summary>
            Creates a new change control, or updates an existing one.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ChangeControls_DeleteChangeControl(System.Nullable{System.Int32})">
            <summary>
            Deletes the specified change control
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ChangeControls_DeleteChangeControlAsync(System.Nullable{System.Int32})">
            <summary>
            Deletes the specified change control
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ChangeControls_GetChangeControl(System.Nullable{System.Int32})">
            <summary>
            Gets the details of a specified change control.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ChangeControls_GetChangeControlAsync(System.Nullable{System.Int32})">
            <summary>
            Gets the details of a specified change control.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ChangeControls_GetChangeControlPerformances(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{Inedo.Data.YNIndicator},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets a list of change control performances for a specified change control or all change controls if none is specified.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ChangeControls_GetChangeControlPerformancesAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{Inedo.Data.YNIndicator},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets a list of change control performances for a specified change control or all change controls if none is specified.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ChangeControls_GetChangeControls(System.Nullable{System.Int32},System.String,System.Nullable{Inedo.Data.YNIndicator},System.Nullable{System.Int32})">
            <summary>
            Gets a list of change controls based on the specified criteria.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ChangeControls_GetChangeControlsAsync(System.Nullable{System.Int32},System.String,System.Nullable{Inedo.Data.YNIndicator},System.Nullable{System.Int32})">
            <summary>
            Gets a list of change controls based on the specified criteria.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ChangeControls_PerformChangeControl(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Adds a change control performance for a specified environment.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ChangeControls_PerformChangeControlAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Adds a change control performance for a specified environment.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Configuration_GetConfiguration">
            <summary>
            Gets the a complete list of BuildMaster configuration settings.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Configuration_GetConfigurationAsync">
            <summary>
            Gets the a complete list of BuildMaster configuration settings.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Configuration_GetInternalValue(System.String,System.String)">
            <summary>
            Gets the specified BuildMaster internal configuration value.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Configuration_GetInternalValueAsync(System.String,System.String)">
            <summary>
            Gets the specified BuildMaster internal configuration value.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Configuration_GetValue(System.String,System.String,System.String)">
            <summary>
            Gets the specified BuildMaster configuration value.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Configuration_GetValueAsync(System.String,System.String,System.String)">
            <summary>
            Gets the specified BuildMaster configuration value.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Configuration_SetValue(System.String,System.String,System.String)">
            <summary>
            Sets a BuildMaster configuration value.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Configuration_SetValueAsync(System.String,System.String,System.String)">
            <summary>
            Sets a BuildMaster configuration value.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Configuration_SetValueWithoutEvent(System.String,System.String,System.String)">
            <summary>
            Stored procedure for internal use only.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Configuration_SetValueWithoutEventAsync(System.String,System.String,System.String)">
            <summary>
            Stored procedure for internal use only.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ConfigurationFiles_CreateConfigurationFile(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Creates a configuration file in the system.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ConfigurationFiles_CreateConfigurationFileAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Creates a configuration file in the system.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ConfigurationFiles_CreateConfigurationFileInstance(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{Inedo.Data.YNIndicator},System.String,System.String)">
            <summary>
            Creates a new instance of a configuration file.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ConfigurationFiles_CreateConfigurationFileInstanceAsync(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{Inedo.Data.YNIndicator},System.String,System.String)">
            <summary>
            Creates a new instance of a configuration file.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ConfigurationFiles_CreateConfigurationFileVersions(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Creates new configuration file versions for each instance specified in the ConfigurationFiles_Xml for the given configuration file.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ConfigurationFiles_CreateConfigurationFileVersionsAsync(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Creates new configuration file versions for each instance specified in the ConfigurationFiles_Xml for the given configuration file.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ConfigurationFiles_DeployConfigurationFile(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Saves the result of a deployed configuration file (this will not physically deploy the configuration file).
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ConfigurationFiles_DeployConfigurationFileAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Saves the result of a deployed configuration file (this will not physically deploy the configuration file).
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ConfigurationFiles_FillVersionGaps(System.Nullable{System.Int32})">
            <summary>
            Ensures that there are no gaps in configuration file instance versions.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ConfigurationFiles_FillVersionGapsAsync(System.Nullable{System.Int32})">
            <summary>
            Ensures that there are no gaps in configuration file instance versions.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ConfigurationFiles_GetConfigurationFile(System.Nullable{System.Int32},System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Gets a configuration file and all of its instances.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ConfigurationFiles_GetConfigurationFileAsync(System.Nullable{System.Int32},System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Gets a configuration file and all of its instances.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ConfigurationFiles_GetConfigurationFileDeployments(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets a list of all configuration file deployments based on the specified criteria.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ConfigurationFiles_GetConfigurationFileDeploymentsAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets a list of all configuration file deployments based on the specified criteria.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ConfigurationFiles_GetConfigurationFileInstances(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Gets a list of all configuration file instances that match the specified criteria.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ConfigurationFiles_GetConfigurationFileInstancesAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Gets a list of all configuration file instances that match the specified criteria.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ConfigurationFiles_GetConfigurationFiles(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{Inedo.Data.YNIndicator},System.Nullable{Inedo.Data.YNIndicator},System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Gets all configuration files that match the specified criteria.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ConfigurationFiles_GetConfigurationFilesAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{Inedo.Data.YNIndicator},System.Nullable{Inedo.Data.YNIndicator},System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Gets all configuration files that match the specified criteria.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ConfigurationFiles_GetConfigurationFileVersion(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Gets a list of configuration file versions for a specified configuration file.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ConfigurationFiles_GetConfigurationFileVersionAsync(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Gets a list of configuration file versions for a specified configuration file.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ConfigurationFiles_PurgeConfigurationFile(System.Nullable{System.Int32})">
            <summary>
            Purges a configuration file, including all previous versions of all instances and deployment history.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ConfigurationFiles_PurgeConfigurationFileAsync(System.Nullable{System.Int32})">
            <summary>
            Purges a configuration file, including all previous versions of all instances and deployment history.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ConfigurationFiles_PurgeConfigurationFileInstance(System.Nullable{System.Int32},System.String,System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Purges a configuration file instance, including all previous versions and deployment history.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ConfigurationFiles_PurgeConfigurationFileInstanceAsync(System.Nullable{System.Int32},System.String,System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Purges a configuration file instance, including all previous versions and deployment history.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ConfigurationFiles_UpdateConfigurationFile(System.Nullable{System.Int32},System.Nullable{Inedo.Data.YNIndicator},System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Updates metadata for an existing configuration file.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ConfigurationFiles_UpdateConfigurationFileAsync(System.Nullable{System.Int32},System.Nullable{Inedo.Data.YNIndicator},System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Updates metadata for an existing configuration file.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ConfigurationFiles_UpdateConfigurationFileInstance(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{Inedo.Data.YNIndicator},System.String,System.String)">
            <summary>
            Updates metadata for an existing configuration file instance.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ConfigurationFiles_UpdateConfigurationFileInstanceAsync(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{Inedo.Data.YNIndicator},System.String,System.String)">
            <summary>
            Updates metadata for an existing configuration file instance.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Credentials_CreateOrUpdateCredential(System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{Inedo.Data.YNIndicator},System.Nullable{System.Int32})">
            <summary>
            Creates a new credential or updates an existing one.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Credentials_CreateOrUpdateCredentialAsync(System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{Inedo.Data.YNIndicator},System.Nullable{System.Int32})">
            <summary>
            Creates a new credential or updates an existing one.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Credentials_DeleteCredential(System.Nullable{System.Int32})">
            <summary>
            Gets the specified credential.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Credentials_DeleteCredentialAsync(System.Nullable{System.Int32})">
            <summary>
            Gets the specified credential.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Credentials_GetCredential(System.Nullable{System.Int32})">
            <summary>
            Gets the specified credential.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Credentials_GetCredentialAsync(System.Nullable{System.Int32})">
            <summary>
            Gets the specified credential.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Credentials_GetCredentialByName(System.String,System.String)">
            <summary>
            Gets the specified credential by its qualified name.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Credentials_GetCredentialByNameAsync(System.String,System.String)">
            <summary>
            Gets the specified credential by its qualified name.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Credentials_GetCredentials">
            <summary>
            Gets all credentials in the system.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Credentials_GetCredentialsAsync">
            <summary>
            Gets all credentials in the system.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Dashboards_GetApplications(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets an application summary for all applications in BuildMaster or a specific group of applications.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Dashboards_GetApplicationsAsync(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets an application summary for all applications in BuildMaster or a specific group of applications.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.DatabaseChangeScripts_CreateExecution(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Creates a database change script execution.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.DatabaseChangeScripts_CreateExecutionAsync(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Creates a database change script execution.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.DatabaseChangeScripts_CreateOrUpdateChangeScript(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{Inedo.Data.YNIndicator},System.Nullable{System.Int32})">
            <summary>
            Creates or edits a database change script.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.DatabaseChangeScripts_CreateOrUpdateChangeScriptAsync(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{Inedo.Data.YNIndicator},System.Nullable{System.Int32})">
            <summary>
            Creates or edits a database change script.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.DatabaseChangeScripts_DeleteChangeScript(System.Nullable{System.Int32})">
            <summary>
            Deletes a database change script.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.DatabaseChangeScripts_DeleteChangeScriptAsync(System.Nullable{System.Int32})">
            <summary>
            Deletes a database change script.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.DatabaseChangeScripts_GetChangeScript(System.Nullable{System.Int32})">
            <summary>
            Gets the specified database change script.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.DatabaseChangeScripts_GetChangeScriptAsync(System.Nullable{System.Int32})">
            <summary>
            Gets the specified database change script.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.DatabaseChangeScripts_GetChangeScripts(System.Nullable{System.Int32},System.String,System.Nullable{Inedo.Data.YNIndicator},System.Nullable{System.Int32})">
            <summary>
            Gets all the database change scripts that match the specified criteria.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.DatabaseChangeScripts_GetChangeScriptsAsync(System.Nullable{System.Int32},System.String,System.Nullable{Inedo.Data.YNIndicator},System.Nullable{System.Int32})">
            <summary>
            Gets all the database change scripts that match the specified criteria.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.DatabaseChangeScripts_GetExecution(System.Nullable{System.Int32})">
            <summary>
            Gets a database change script execution.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.DatabaseChangeScripts_GetExecutionAsync(System.Nullable{System.Int32})">
            <summary>
            Gets a database change script execution.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.DatabaseConnections_CreateOrUpdateConnection(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Creates a new database connection or updates an existing one.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.DatabaseConnections_CreateOrUpdateConnectionAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Creates a new database connection or updates an existing one.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.DatabaseConnections_DeleteConnection(System.Nullable{System.Int32})">
            <summary>
            Deletes a database connection.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.DatabaseConnections_DeleteConnectionAsync(System.Nullable{System.Int32})">
            <summary>
            Deletes a database connection.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.DatabaseConnections_GetConnection(System.Nullable{System.Int32})">
            <summary>
            Gets a database connection.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.DatabaseConnections_GetConnectionAsync(System.Nullable{System.Int32})">
            <summary>
            Gets a database connection.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.DatabaseConnections_GetConnections(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets database connections, optionally filtered by application and environment.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.DatabaseConnections_GetConnectionsAsync(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets database connections, optionally filtered by application and environment.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Environments_CreateOrUpdateEnvironment(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Creates a new environment or updates an existing one
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Environments_CreateOrUpdateEnvironmentAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Creates a new environment or updates an existing one
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Environments_DeleteEnvironment(System.Nullable{System.Int32})">
            <summary>
            Soft deletes an environment
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Environments_DeleteEnvironmentAsync(System.Nullable{System.Int32})">
            <summary>
            Soft deletes an environment
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Environments_GetEnvironment(System.Nullable{System.Int32})">
            <summary>
            Gets an environment.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Environments_GetEnvironmentAsync(System.Nullable{System.Int32})">
            <summary>
            Gets an environment.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Environments_GetEnvironments(System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Gets all environments.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Environments_GetEnvironmentsAsync(System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Gets all environments.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Environments_GetEnvironmentsAndServers(System.Nullable{Inedo.Data.YNIndicator},System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Gets the a dataset containing all environments, all environment/server relations, and servers
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Environments_GetEnvironmentsAndServersAsync(System.Nullable{Inedo.Data.YNIndicator},System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Gets the a dataset containing all environments, all environment/server relations, and servers
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Environments_ResequenceEnvironment(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Resequences the specified environment by placing it where another environment is sequenced
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Environments_ResequenceEnvironmentAsync(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Resequences the specified environment by placing it where another environment is sequenced
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Environments_UndeleteEnvironment(System.Nullable{System.Int32})">
            <summary>
            Undeletes the specified environment
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Environments_UndeleteEnvironmentAsync(System.Nullable{System.Int32})">
            <summary>
            Undeletes the specified environment
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.EventListeners_CreateOrUpdateEventListener(System.String,System.String,System.String,System.Nullable{Inedo.Data.YNIndicator},System.String,System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Creates or updates an event listener.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.EventListeners_CreateOrUpdateEventListenerAsync(System.String,System.String,System.String,System.Nullable{Inedo.Data.YNIndicator},System.String,System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Creates or updates an event listener.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.EventListeners_DeleteEventListener(System.Nullable{System.Int32})">
            <summary>
            Deletes an event listener.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.EventListeners_DeleteEventListenerAsync(System.Nullable{System.Int32})">
            <summary>
            Deletes an event listener.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.EventListeners_GetEventListener(System.Nullable{System.Int32})">
            <summary>
            Gets a EventListener and a list of event codes that the EventListener is subscribed to.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.EventListeners_GetEventListenerAsync(System.Nullable{System.Int32})">
            <summary>
            Gets a EventListener and a list of event codes that the EventListener is subscribed to.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.EventListeners_GetEventListeners(System.String)">
            <summary>
            Gets a list of event listeners for the specified user, or all users if no user is specified.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.EventListeners_GetEventListenersAsync(System.String)">
            <summary>
            Gets a list of event listeners for the specified user, or all users if no user is specified.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Events_GetEventOccurrence(System.Nullable{System.Int32})">
            <summary>
            Get a specific event occurrence along with its event details.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Events_GetEventOccurrenceAsync(System.Nullable{System.Int32})">
            <summary>
            Get a specific event occurrence along with its event details.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Events_GetEventOccurrences(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets all the event occurrences in the system for a specific application, or all applications, limited to a specified count if provided.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Events_GetEventOccurrencesAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets all the event occurrences in the system for a specific application, or all applications, limited to a specified count if provided.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Events_RaiseEvent(System.String,System.Nullable{System.Int32},System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            Stored procedure for internal use only.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Events_RaiseEventAsync(System.String,System.Nullable{System.Int32},System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            Stored procedure for internal use only.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Executions_AddLogEntry(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Byte[],System.Nullable{System.DateTime})">
            <summary>
            Creates a log entry.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Executions_AddLogEntryAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Byte[],System.Nullable{System.DateTime})">
            <summary>
            Creates a log entry.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Executions_BeginExecution(System.Nullable{System.Int32})">
            <summary>
            Changes the state of an execution from Pending to Executing.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Executions_BeginExecutionAsync(System.Nullable{System.Int32})">
            <summary>
            Changes the state of an execution from Pending to Executing.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Executions_CancelExecution(System.Nullable{System.Int32})">
            <summary>
            Stored procedure for internal use only.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Executions_CancelExecutionAsync(System.Nullable{System.Int32})">
            <summary>
            Stored procedure for internal use only.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Executions_CompleteExecution(System.Nullable{System.Int32},System.String)">
            <summary>
            Marks an execution as completed. If ExecutionStatus_Code is not supplied, it will be inferred.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Executions_CompleteExecutionAsync(System.Nullable{System.Int32},System.String)">
            <summary>
            Marks an execution as completed. If ExecutionStatus_Code is not supplied, it will be inferred.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Executions_CompleteLogScope(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime})">
            <summary>
            Completes a log scope.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Executions_CompleteLogScopeAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime})">
            <summary>
            Completes a log scope.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Executions_CreateLogScope(System.Nullable{System.Int32},System.Byte[],System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            Creates a log scope.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Executions_CreateLogScopeAsync(System.Nullable{System.Int32},System.Byte[],System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            Creates a log scope.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Executions_CreateManualExecution(System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Creates a manual execution.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Executions_CreateManualExecutionAsync(System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Creates a manual execution.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Executions_CreateOrUpdateManualAction(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Creates a new manual action or marks an existing one as complete.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Executions_CreateOrUpdateManualActionAsync(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Creates a new manual action or marks an existing one as complete.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Executions_FailExecutingPlans">
            <summary>
            Stored procedure for internal use only.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Executions_FailExecutingPlansAsync">
            <summary>
            Stored procedure for internal use only.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Executions_GetEstimatedDuration(System.Nullable{System.Int32},System.Byte[])">
            <summary>
            Gets the estimated length of time for an execution based on its run context hash.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Executions_GetEstimatedDurationAsync(System.Nullable{System.Int32},System.Byte[])">
            <summary>
            Gets the estimated length of time for an execution based on its run context hash.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Executions_GetExecution(System.Nullable{System.Int32})">
            <summary>
            Gets an execution.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Executions_GetExecutionAsync(System.Nullable{System.Int32})">
            <summary>
            Gets an execution.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Executions_GetExecutionLogScopes(System.Nullable{System.Int32})">
            <summary>
            Gets all log scopes for the specified execution.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Executions_GetExecutionLogScopesAsync(System.Nullable{System.Int32})">
            <summary>
            Gets all log scopes for the specified execution.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Executions_GetExecutions(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Gets all executions in the system.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Executions_GetExecutionsAsync(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Gets all executions in the system.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Executions_GetExecutionsPendingCancellation">
            <summary>
            Returns executions which are awaiting cancellation.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Executions_GetExecutionsPendingCancellationAsync">
            <summary>
            Returns executions which are awaiting cancellation.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Executions_GetExecutionsToExecute">
            <summary>
            Returns executions which are ready to be started by the executer.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Executions_GetExecutionsToExecuteAsync">
            <summary>
            Returns executions which are ready to be started by the executer.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Executions_GetLogEntries(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Gets the latest log entries for a specified execution and log scope.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Executions_GetLogEntriesAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Gets the latest log entries for a specified execution and log scope.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Executions_GetManualActionsInProgress(System.Nullable{System.Int32},System.String)">
            <summary>
            Returns manual actions which are currently in progress.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Executions_GetManualActionsInProgressAsync(System.Nullable{System.Int32},System.String)">
            <summary>
            Returns manual actions which are currently in progress.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Executions_GetManualExecution(System.Nullable{System.Int32})">
            <summary>
            Gets a manual execution.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Executions_GetManualExecutionAsync(System.Nullable{System.Int32})">
            <summary>
            Gets a manual execution.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Executions_GetPartialExecutionLog(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Gets the latest log entries for a specified execution.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Executions_GetPartialExecutionLogAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Gets the latest log entries for a specified execution.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Executions_IsManualActionComplete(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Returns the user which has completed the manual action, or null if the action is not completed.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Executions_IsManualActionCompleteAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Returns the user which has completed the manual action, or null if the action is not completed.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Executions_SetRunContextHash(System.Nullable{System.Int32},System.Byte[])">
            <summary>
            Gets the estimated length of time for an execution based on its run context hash.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Executions_SetRunContextHashAsync(System.Nullable{System.Int32},System.Byte[])">
            <summary>
            Gets the estimated length of time for an execution based on its run context hash.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ExtensionConfiguration_DeleteConfiguration(System.Nullable{System.Int32})">
            <summary>
            Deletes an extension configuration
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ExtensionConfiguration_DeleteConfigurationAsync(System.Nullable{System.Int32})">
            <summary>
            Deletes an extension configuration
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ExtensionConfiguration_GetConfiguration(System.String,System.String)">
            <summary>
            Gets the details of an extension configurer for extension with the specified name
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ExtensionConfiguration_GetConfigurationAsync(System.String,System.String)">
            <summary>
            Gets the details of an extension configurer for extension with the specified name
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ExtensionConfiguration_GetConfigurationById(System.Nullable{System.Int32})">
            <summary>
            Gets the details of an extension configurer for extension with the specified ID
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ExtensionConfiguration_GetConfigurationByIdAsync(System.Nullable{System.Int32})">
            <summary>
            Gets the details of an extension configurer for extension with the specified ID
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ExtensionConfiguration_GetConfigurations(System.String)">
            <summary>
            Gets the details for all extension configurers in the system, or a specific one if specified
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ExtensionConfiguration_GetConfigurationsAsync(System.String)">
            <summary>
            Gets the details for all extension configurers in the system, or a specific one if specified
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ExtensionConfiguration_SaveConfiguration(System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Creates an extension configurer in the system, or updates an existing one
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ExtensionConfiguration_SaveConfigurationAsync(System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Creates an extension configurer in the system, or updates an existing one
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Infrastructure_GetInfrastructure">
            <summary>
            Gets all of the infrastructure; this includes servers, environments, and roles.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Infrastructure_GetInfrastructureAsync">
            <summary>
            Gets all of the infrastructure; this includes servers, environments, and roles.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Issues_CloseIssue(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Closes a BuildMaster issue.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Issues_CloseIssueAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Closes a BuildMaster issue.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Issues_CreateIssue(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{Inedo.Data.YNIndicator},System.String,System.String,System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.DateTime},System.String,System.Nullable{System.Int32})">
            <summary>
            Creates an issue for a release of an application.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Issues_CreateIssueAsync(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{Inedo.Data.YNIndicator},System.String,System.String,System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.DateTime},System.String,System.Nullable{System.Int32})">
            <summary>
            Creates an issue for a release of an application.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Issues_DeleteIssue(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Deletes an issue.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Issues_DeleteIssueAsync(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Deletes an issue.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Issues_GetIssue(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets the specified.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Issues_GetIssueAsync(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets the specified.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Issues_GetIssues(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Gets the issues for an application, optionally filtered by release or build.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Issues_GetIssuesAsync(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Gets the issues for an application, optionally filtered by release or build.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Issues_GetIssueTypes">
            <summary>
            Gets a list of distinct issue types that have been synchronized by the system.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Issues_GetIssueTypesAsync">
            <summary>
            Gets a list of distinct issue types that have been synchronized by the system.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Issues_ReopenIssue(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Re-opens a BuildMaster issue.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Issues_ReopenIssueAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Re-opens a BuildMaster issue.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Issues_UpdateIssue(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{Inedo.Data.YNIndicator},System.String,System.String,System.Nullable{System.DateTime},System.String,System.String)">
            <summary>
            Updates one or more properties of an issue.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Issues_UpdateIssueAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{Inedo.Data.YNIndicator},System.String,System.String,System.Nullable{System.DateTime},System.String,System.String)">
            <summary>
            Updates one or more properties of an issue.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.LegacyExecutions_AppendActionLog(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Writes a log message to an action log.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.LegacyExecutions_AppendActionLogAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Writes a log message to an action log.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.LegacyExecutions_BeginAction(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Initiates execution of a specific action.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.LegacyExecutions_BeginActionAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Initiates execution of a specific action.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.LegacyExecutions_BeginDeploymentPlan(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Initiates execution of a specific deployment plan.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.LegacyExecutions_BeginDeploymentPlanAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Initiates execution of a specific deployment plan.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.LegacyExecutions_BeginDeploymentPlanActionGroup(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Initiates execution of a specific deployment plan action group.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.LegacyExecutions_BeginDeploymentPlanActionGroupAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Initiates execution of a specific deployment plan action group.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.LegacyExecutions_CompleteAction(System.Nullable{System.Int32},System.String)">
            <summary>
            Marks an action as completed.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.LegacyExecutions_CompleteActionAsync(System.Nullable{System.Int32},System.String)">
            <summary>
            Marks an action as completed.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.LegacyExecutions_GetExecutionLog(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets the details for a specified build execution, and plan or action if specified.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.LegacyExecutions_GetExecutionLogAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets the details for a specified build execution, and plan or action if specified.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.LegacyExecutions_GetExecutionLogForActions(System.String)">
            <summary>
            Gets all of the log entries for the actions specified.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.LegacyExecutions_GetExecutionLogForActionsAsync(System.String)">
            <summary>
            Gets all of the log entries for the actions specified.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.LegacyExecutions_GetPartialExecutionLog(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Gets the latest log entries for a specified build execution.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.LegacyExecutions_GetPartialExecutionLogAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Gets the latest log entries for a specified build execution.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.LegacyExecutions_GetVariableValues(System.Nullable{System.Int32})">
            <summary>
            Gets execution time variable values.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.LegacyExecutions_GetVariableValuesAsync(System.Nullable{System.Int32})">
            <summary>
            Gets execution time variable values.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.LegacyExecutions_SetVariableValue(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Creates, updates, or deletes an execution time variable value.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.LegacyExecutions_SetVariableValueAsync(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Creates, updates, or deletes an execution time variable value.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.LicenseKeys_ActivateLicenseKey(System.String,System.String)">
            <summary>
            Sets the activation code for a license key.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.LicenseKeys_ActivateLicenseKeyAsync(System.String,System.String)">
            <summary>
            Sets the activation code for a license key.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.LicenseKeys_AddLicenseKey(System.String)">
            <summary>
            Adds a new license key.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.LicenseKeys_AddLicenseKeyAsync(System.String)">
            <summary>
            Adds a new license key.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.LicenseKeys_DeleteLicenseKey(System.String)">
            <summary>
            Deletes a license key.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.LicenseKeys_DeleteLicenseKeyAsync(System.String)">
            <summary>
            Deletes a license key.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.LicenseKeys_GetLicenseKeys">
            <summary>
            Gets all the license keys.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.LicenseKeys_GetLicenseKeysAsync">
            <summary>
            Gets all the license keys.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.LogMessages_AddMessage(System.String,System.Nullable{System.Int32},System.String,System.Byte[],System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Stored procedure for internal use only.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.LogMessages_AddMessageAsync(System.String,System.Nullable{System.Int32},System.String,System.Byte[],System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Stored procedure for internal use only.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.LogMessages_DeleteMessages(System.Nullable{System.Int32})">
            <summary>
            Deletes one or all message from the error log
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.LogMessages_DeleteMessagesAsync(System.Nullable{System.Int32})">
            <summary>
            Deletes one or all message from the error log
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.LogMessages_GetCategories">
            <summary>
            Gets all of the distinct category names in the log messages table.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.LogMessages_GetCategoriesAsync">
            <summary>
            Gets all of the distinct category names in the log messages table.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.LogMessages_GetMessage(System.Nullable{System.Int32})">
            <summary>
            Gets a specified message from the error log
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.LogMessages_GetMessageAsync(System.Nullable{System.Int32})">
            <summary>
            Gets a specified message from the error log
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.LogMessages_GetMessages(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets the messages from the error log that match the specified criteria
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.LogMessages_GetMessagesAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets the messages from the error log that match the specified criteria
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Notifiers_CreateOrUpdateNotifier(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{Inedo.Data.YNIndicator},System.String)">
            <summary>
            Creates a new notifier, or updates an existing one
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Notifiers_CreateOrUpdateNotifierAsync(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{Inedo.Data.YNIndicator},System.String)">
            <summary>
            Creates a new notifier, or updates an existing one
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Notifiers_DeleteNotifier(System.Nullable{System.Int32})">
            <summary>
            Deletes a notifier from the system
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Notifiers_DeleteNotifierAsync(System.Nullable{System.Int32})">
            <summary>
            Deletes a notifier from the system
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Notifiers_GetNotifier(System.Nullable{System.Int32})">
            <summary>
            Gets a notifier and a list of event codes that the notifier is subscribed to
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Notifiers_GetNotifierAsync(System.Nullable{System.Int32})">
            <summary>
            Gets a notifier and a list of event codes that the notifier is subscribed to
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Notifiers_GetNotifiers(System.String)">
            <summary>
            Gets a list of notifiers for the specified user, or all users if no user is specified
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Notifiers_GetNotifiersAsync(System.String)">
            <summary>
            Gets a list of notifiers for the specified user, or all users if no user is specified
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Pipelines_CreatePipeline(System.String,System.String,System.Nullable{Inedo.Data.YNIndicator},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Creates a new pipeline.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Pipelines_CreatePipelineAsync(System.String,System.String,System.Nullable{Inedo.Data.YNIndicator},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Creates a new pipeline.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Pipelines_DeletePipeline(System.Nullable{System.Int32})">
            <summary>
            Deletes a pipeline.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Pipelines_DeletePipelineAsync(System.Nullable{System.Int32})">
            <summary>
            Deletes a pipeline.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Pipelines_GetPipeline(System.Nullable{System.Int32})">
            <summary>
            Returns the specified pipeline.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Pipelines_GetPipelineAsync(System.Nullable{System.Int32})">
            <summary>
            Returns the specified pipeline.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Pipelines_GetPipelines(System.Nullable{System.Int32})">
            <summary>
            Returns the pipelines in the system, optionally filtered by application.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Pipelines_GetPipelinesAsync(System.Nullable{System.Int32})">
            <summary>
            Returns the pipelines in the system, optionally filtered by application.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Pipelines_GetPipelinesUsedByApplications">
            <summary>
            Returns the pipelines used by applications.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Pipelines_GetPipelinesUsedByApplicationsAsync">
            <summary>
            Returns the pipelines used by applications.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Pipelines_UpdatePipeline(System.Nullable{System.Int32},System.String,System.String,System.Nullable{Inedo.Data.YNIndicator},System.String)">
            <summary>
            Updates a pipeline.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Pipelines_UpdatePipelineAsync(System.Nullable{System.Int32},System.String,System.String,System.Nullable{Inedo.Data.YNIndicator},System.String)">
            <summary>
            Updates a pipeline.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Plans_ChangeActionGroup(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Moves an action into a different action group.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Plans_ChangeActionGroupAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Moves an action into a different action group.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Plans_ChangeActionGroupDeploymentPlan(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Moves a plan action group to the final position of a different deployment plan.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Plans_ChangeActionGroupDeploymentPlanAsync(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Moves a plan action group to the final position of a different deployment plan.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Plans_CloneDeploymentPlans(System.String,System.String)">
            <summary>
            Clones one or more deployment plans
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Plans_CloneDeploymentPlansAsync(System.String,System.String)">
            <summary>
            Clones one or more deployment plans
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Plans_CreateDeploymentPlanActionGroup(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{Inedo.Data.YNIndicator},System.String,System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Creates a new action group in the specified deployment plan.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Plans_CreateDeploymentPlanActionGroupAsync(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{Inedo.Data.YNIndicator},System.String,System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Creates a new action group in the specified deployment plan.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Plans_CreateOrUpdateAction(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{Inedo.Data.YNIndicator},System.String,System.String,System.Nullable{Inedo.Data.YNIndicator},System.Nullable{System.Int32},System.Nullable{Inedo.Data.YNIndicator},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Creates an action in the specified action group or updates an existing one.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Plans_CreateOrUpdateActionAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{Inedo.Data.YNIndicator},System.String,System.String,System.Nullable{Inedo.Data.YNIndicator},System.Nullable{System.Int32},System.Nullable{Inedo.Data.YNIndicator},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Creates an action in the specified action group or updates an existing one.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Plans_CreateOrUpdateDeploymentPlan(System.String,System.Nullable{Inedo.Data.YNIndicator},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Creates a new deployment plan or changes the name of an existing deployment plan.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Plans_CreateOrUpdateDeploymentPlanAsync(System.String,System.Nullable{Inedo.Data.YNIndicator},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Creates a new deployment plan or changes the name of an existing deployment plan.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Plans_CreatePlan(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Byte[],System.Nullable{System.Int32})">
            <summary>
            Creates a new OtterScript deployment plan.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Plans_CreatePlanAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Byte[],System.Nullable{System.Int32})">
            <summary>
            Creates a new OtterScript deployment plan.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Plans_DeleteAction(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Deletes an action from an action group.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Plans_DeleteActionAsync(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Deletes an action from an action group.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Plans_DeleteDeploymentPlan(System.Nullable{System.Int32})">
            <summary>
            Deletes a deployment plan.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Plans_DeleteDeploymentPlanAsync(System.Nullable{System.Int32})">
            <summary>
            Deletes a deployment plan.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Plans_DeleteDeploymentPlanActionGroup(System.Nullable{System.Int32})">
            <summary>
            Deletes the specified action group.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Plans_DeleteDeploymentPlanActionGroupAsync(System.Nullable{System.Int32})">
            <summary>
            Deletes the specified action group.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Plans_DeletePlan(System.Nullable{System.Int32})">
            <summary>
            Deletes an OtterScript plan.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Plans_DeletePlanAsync(System.Nullable{System.Int32})">
            <summary>
            Deletes an OtterScript plan.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Plans_GetAction(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets the details of the specified action.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Plans_GetActionAsync(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets the details of the specified action.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Plans_GetActionGroup(System.Nullable{System.Int32})">
            <summary>
            Gets the details of the specified plan, and all the actions associated with the plan.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Plans_GetActionGroupAsync(System.Nullable{System.Int32})">
            <summary>
            Gets the details of the specified plan, and all the actions associated with the plan.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Plans_GetActionGroups">
            <summary>
            Gets all action groups.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Plans_GetActionGroupsAsync">
            <summary>
            Gets all action groups.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Plans_GetDeploymentPlan(System.Nullable{System.Int32},System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Returns action groups and actions for a deployment plan.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Plans_GetDeploymentPlanAsync(System.Nullable{System.Int32},System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Returns action groups and actions for a deployment plan.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Plans_GetDeploymentPlanActionGroup(System.Nullable{System.Int32})">
            <summary>
            Gets the details of the specified plan, and all the actions associated with the plan.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Plans_GetDeploymentPlanActionGroupAsync(System.Nullable{System.Int32})">
            <summary>
            Gets the details of the specified plan, and all the actions associated with the plan.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Plans_GetDeploymentPlans(System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Returns the deployment plans in the system.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Plans_GetDeploymentPlansAsync(System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Returns the deployment plans in the system.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Plans_GetGlobalDeploymentPlans">
            <summary>
            Returns named deployment plans and optionally plans orphaned.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Plans_GetGlobalDeploymentPlansAsync">
            <summary>
            Returns named deployment plans and optionally plans orphaned.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Plans_GetMostCommonActions(System.Nullable{System.Int32})">
            <summary>
            Returns the most commonly used actions in the system.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Plans_GetMostCommonActionsAsync(System.Nullable{System.Int32})">
            <summary>
            Returns the most commonly used actions in the system.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Plans_GetPlan(System.Nullable{System.Int32})">
            <summary>
            Returns the specified OtterScript plan.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Plans_GetPlanAsync(System.Nullable{System.Int32})">
            <summary>
            Returns the specified OtterScript plan.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Plans_GetPlanByName(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Gets the plan which has the specified name and type that is visible to the specified application.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Plans_GetPlanByNameAsync(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Gets the plan which has the specified name and type that is visible to the specified application.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Plans_GetPlans(System.Nullable{System.Int32},System.String)">
            <summary>
            Returns all OtterScript plans of the specified type which are visible to the specified application.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Plans_GetPlansAsync(System.Nullable{System.Int32},System.String)">
            <summary>
            Returns all OtterScript plans of the specified type which are visible to the specified application.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Plans_GetPlansByName(System.String,System.String)">
            <summary>
            Gets all plans in the system with the specified name and type.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Plans_GetPlansByNameAsync(System.String,System.String)">
            <summary>
            Gets all plans in the system with the specified name and type.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Plans_ResequenceAction(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Changes the sequence of an action within a plan.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Plans_ResequenceActionAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Changes the sequence of an action within a plan.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Plans_ResequenceActionGroup(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Changes the sequence of a deployment plan action group.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Plans_ResequenceActionGroupAsync(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Changes the sequence of a deployment plan action group.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Plans_SetOtterScript(System.Nullable{System.Int32},System.Byte[])">
            <summary>
            Sets the Otter script of a plan.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Plans_SetOtterScriptAsync(System.Nullable{System.Int32},System.Byte[])">
            <summary>
            Sets the Otter script of a plan.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Plans_UpdateActionGroup(System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Updates the specified action group.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Plans_UpdateActionGroupAsync(System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Updates the specified action group.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Plans_UpdateDeploymentPlanActionGroup(System.Nullable{System.Int32},System.Nullable{Inedo.Data.YNIndicator},System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{Inedo.Data.YNIndicator},System.Nullable{Inedo.Data.YNIndicator},System.Nullable{Inedo.Data.YNIndicator},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Updates the specified deployment plan action group.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Plans_UpdateDeploymentPlanActionGroupAsync(System.Nullable{System.Int32},System.Nullable{Inedo.Data.YNIndicator},System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{Inedo.Data.YNIndicator},System.Nullable{Inedo.Data.YNIndicator},System.Nullable{Inedo.Data.YNIndicator},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Updates the specified deployment plan action group.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Plans_UpdatePlan(System.Nullable{System.Int32},System.String,System.Byte[],System.Nullable{System.Int32})">
            <summary>
            Updates an OtterScript deployment plan.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Plans_UpdatePlanAsync(System.Nullable{System.Int32},System.String,System.Byte[],System.Nullable{System.Int32})">
            <summary>
            Updates an OtterScript deployment plan.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Promotions_AddApproval(System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Adds an approval for a promotion.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Promotions_AddApprovalAsync(System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Adds an approval for a promotion.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Promotions_DeleteApproval(System.Nullable{System.Int32})">
            <summary>
            Deletes an approval for a promotion.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Promotions_DeleteApprovalAsync(System.Nullable{System.Int32})">
            <summary>
            Deletes an approval for a promotion.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Promotions_GetApprovalsReceived(System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Gets all requirements and approvals received for the specified promotion.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Promotions_GetApprovalsReceivedAsync(System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Gets all requirements and approvals received for the specified promotion.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Promotions_GetScheduled(System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
            Gets scheduled promotions, optionally filtered by promotion and date.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Promotions_GetScheduledAsync(System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
            Gets scheduled promotions, optionally filtered by promotion and date.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Promotions_InvalidateApprovals(System.Nullable{System.Int32},System.String)">
            <summary>
            Deletes received approvals for a pending promotion.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Promotions_InvalidateApprovalsAsync(System.Nullable{System.Int32},System.String)">
            <summary>
            Deletes received approvals for a pending promotion.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Promotions_SchedulePromotion(System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
            Schedules a promotion or removes a previously scheduled promotion.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Promotions_SchedulePromotionAsync(System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
            Schedules a promotion or removes a previously scheduled promotion.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Promotions_SetAutomaticRequirementStatus(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{Inedo.Data.YNIndicator},System.Nullable{Inedo.Data.YNIndicator},System.String)">
            <summary>
            Records the status of an automatic promotion requirement.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Promotions_SetAutomaticRequirementStatusAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{Inedo.Data.YNIndicator},System.Nullable{Inedo.Data.YNIndicator},System.String)">
            <summary>
            Records the status of an automatic promotion requirement.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Providers_CreateOrUpdateProvider(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Creates a new provider or updates an existing one.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Providers_CreateOrUpdateProviderAsync(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Creates a new provider or updates an existing one.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Providers_DeleteProvider(System.Nullable{System.Int32})">
            <summary>
            Deletes the specified provider
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Providers_DeleteProviderAsync(System.Nullable{System.Int32})">
            <summary>
            Deletes the specified provider
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Providers_GetProvider(System.Nullable{System.Int32})">
            <summary>
            Gets the details of the specified provider
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Providers_GetProviderAsync(System.Nullable{System.Int32})">
            <summary>
            Gets the details of the specified provider
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Providers_GetProviders(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets a list of providers in the system based on the specified criteria
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Providers_GetProvidersAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets a list of providers in the system based on the specified criteria
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Releases_CancelRelease(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Cancels the specified release.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Releases_CancelReleaseAsync(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Cancels the specified release.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Releases_CreateOrUpdateRelease(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.String,System.String)">
            <summary>
            Creates a release or updates an existing one.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Releases_CreateOrUpdateReleaseAsync(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.String,System.String)">
            <summary>
            Creates a release or updates an existing one.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Releases_CreateOrUpdateReleaseDeployable(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Sets the furthest build number for the release.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Releases_CreateOrUpdateReleaseDeployableAsync(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Sets the furthest build number for the release.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Releases_CreateOrUpdateReleaseNote(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Creates a new release note, or updates an existing one.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Releases_CreateOrUpdateReleaseNoteAsync(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Creates a new release note, or updates an existing one.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Releases_DeleteReleaseDeployable(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Removes a deployable from the release.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Releases_DeleteReleaseDeployableAsync(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Removes a deployable from the release.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Releases_DeleteReleaseNote(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Deletes a release note from the system.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Releases_DeleteReleaseNoteAsync(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Deletes a release note from the system.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Releases_GetBuildExecutions(System.Nullable{System.Int32},System.String)">
            <summary>
            Gets the list of build executions for the specified release
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Releases_GetBuildExecutionsAsync(System.Nullable{System.Int32},System.String)">
            <summary>
            Gets the list of build executions for the specified release
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Releases_GetDependentReleases(System.Nullable{System.Int32},System.String)">
            <summary>
            Gets all releases with referenced deployables from a specified release.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Releases_GetDependentReleasesAsync(System.Nullable{System.Int32},System.String)">
            <summary>
            Gets all releases with referenced deployables from a specified release.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Releases_GetRelease(System.Nullable{System.Int32},System.String)">
            <summary>
            Gets the details of a specified release, the deployables associated with the release, and the configuration file versions associated with the release.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Releases_GetReleaseAsync(System.Nullable{System.Int32},System.String)">
            <summary>
            Gets the details of a specified release, the deployables associated with the release, and the configuration file versions associated with the release.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Releases_GetReleaseById(System.Nullable{System.Int32})">
            <summary>
            Gets the details of a specified release by ID.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Releases_GetReleaseByIdAsync(System.Nullable{System.Int32})">
            <summary>
            Gets the details of a specified release by ID.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Releases_GetReleaseDeployables(System.Nullable{System.Int32})">
            <summary>
            Gets the set of deployables associated with any release for an application.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Releases_GetReleaseDeployablesAsync(System.Nullable{System.Int32})">
            <summary>
            Gets the set of deployables associated with any release for an application.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Releases_GetReleaseNote(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Gets a release note from the system.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Releases_GetReleaseNoteAsync(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Gets a release note from the system.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Releases_GetReleaseNotes(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Gets the release notes that match the specified criteria.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Releases_GetReleaseNotesAsync(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Gets the release notes that match the specified criteria.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Releases_GetReleases(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Gets a list of releases that match the specified criteria.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Releases_GetReleasesAsync(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Gets a list of releases that match the specified criteria.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Releases_GetReleaseSlim(System.Nullable{System.Int32},System.String)">
            <summary>
            Gets the details of a specified release.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Releases_GetReleaseSlimAsync(System.Nullable{System.Int32},System.String)">
            <summary>
            Gets the details of a specified release.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Releases_GetReleasesSlim(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Gets a list of releases that match the specified criteria with minimal join data.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Releases_GetReleasesSlimAsync(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Gets a list of releases that match the specified criteria with minimal join data.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Releases_PurgeReleaseData(System.Nullable{System.Int32},System.String)">
            <summary>
            Purges an entire release and all associated data from the system.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Releases_PurgeReleaseDataAsync(System.Nullable{System.Int32},System.String)">
            <summary>
            Purges an entire release and all associated data from the system.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Releases_ReleaseExists(System.Nullable{System.Int32},System.String,System.Nullable{Inedo.Data.YNIndicator},System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Determines whether a release already exists, and also whether a newer release of an application exists
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Releases_ReleaseExistsAsync(System.Nullable{System.Int32},System.String,System.Nullable{Inedo.Data.YNIndicator},System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Determines whether a release already exists, and also whether a newer release of an application exists
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Releases_ResequenceRelease(System.Nullable{System.Int32},System.String,System.Nullable{System.Int64})">
            <summary>
            Resequences the specified release by placing it where another release is sequenced.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Releases_ResequenceReleaseAsync(System.Nullable{System.Int32},System.String,System.Nullable{System.Int64})">
            <summary>
            Resequences the specified release by placing it where another release is sequenced.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Releases_SetConfigurationFileVersion(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Sets the configuration file version for the specified release.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Releases_SetConfigurationFileVersionAsync(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Sets the configuration file version for the specified release.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Releases_SetFurthestBuild(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Sets the furthest build number for the release.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Releases_SetFurthestBuildAsync(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Sets the furthest build number for the release.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Releases_UnCancelRelease(System.Nullable{System.Int32},System.String)">
            <summary>
            Restores a previously canceled release.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Releases_UnCancelReleaseAsync(System.Nullable{System.Int32},System.String)">
            <summary>
            Restores a previously canceled release.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ReleaseTemplates_CreateOrUpdateTemplate(System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Creates a release template or updates an existing one.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ReleaseTemplates_CreateOrUpdateTemplateAsync(System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Creates a release template or updates an existing one.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ReleaseTemplates_DeleteTemplate(System.Nullable{System.Int32})">
            <summary>
            Deletes the specified release template.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ReleaseTemplates_DeleteTemplateAsync(System.Nullable{System.Int32})">
            <summary>
            Deletes the specified release template.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ReleaseTemplates_GetTemplate(System.Nullable{System.Int32})">
            <summary>
            Gets the specified release template.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ReleaseTemplates_GetTemplateAsync(System.Nullable{System.Int32})">
            <summary>
            Gets the specified release template.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ReleaseTemplates_GetTemplateByName(System.Nullable{System.Int32},System.String)">
            <summary>
            Gets the specified release template by application and name.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ReleaseTemplates_GetTemplateByNameAsync(System.Nullable{System.Int32},System.String)">
            <summary>
            Gets the specified release template by application and name.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ReleaseTemplates_GetTemplates(System.Nullable{System.Int32})">
            <summary>
            Gets the release templates for the specified application.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ReleaseTemplates_GetTemplatesAsync(System.Nullable{System.Int32})">
            <summary>
            Gets the release templates for the specified application.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.RetentionPolicies_BeginPurge(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Marks the start of a new purge.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.RetentionPolicies_BeginPurgeAsync(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Marks the start of a new purge.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.RetentionPolicies_CreateOrUpdateRetentionPolicy(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{Inedo.Data.YNIndicator},System.Nullable{Inedo.Data.YNIndicator},System.Nullable{Inedo.Data.YNIndicator},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{Inedo.Data.YNIndicator},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{Inedo.Data.YNIndicator},System.Nullable{System.Int32})">
            <summary>
            Creates or updates a retention policy.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.RetentionPolicies_CreateOrUpdateRetentionPolicyAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{Inedo.Data.YNIndicator},System.Nullable{Inedo.Data.YNIndicator},System.Nullable{Inedo.Data.YNIndicator},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{Inedo.Data.YNIndicator},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{Inedo.Data.YNIndicator},System.Nullable{System.Int32})">
            <summary>
            Creates or updates a retention policy.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.RetentionPolicies_DeleteRetentionPolicy(System.Nullable{System.Int32})">
            <summary>
            Deletes a retention policy.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.RetentionPolicies_DeleteRetentionPolicyAsync(System.Nullable{System.Int32})">
            <summary>
            Deletes a retention policy.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.RetentionPolicies_EndPurge(System.Nullable{System.Int32},System.Byte[])">
            <summary>
            Marks the end of a purge.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.RetentionPolicies_EndPurgeAsync(System.Nullable{System.Int32},System.Byte[])">
            <summary>
            Marks the end of a purge.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.RetentionPolicies_GetArtifactsToPurge(System.Nullable{System.Int32})">
            <summary>
            Gets the artifacts for the specified retention policy that can be purged.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.RetentionPolicies_GetArtifactsToPurgeAsync(System.Nullable{System.Int32})">
            <summary>
            Gets the artifacts for the specified retention policy that can be purged.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.RetentionPolicies_GetBuildCount(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets the total number of builds in the specified scope.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.RetentionPolicies_GetBuildCountAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets the total number of builds in the specified scope.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.RetentionPolicies_GetBuildsToPurge(System.Nullable{System.Int32})">
            <summary>
            Gets the builds for the specified retention policy that can be purged.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.RetentionPolicies_GetBuildsToPurgeAsync(System.Nullable{System.Int32})">
            <summary>
            Gets the builds for the specified retention policy that can be purged.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.RetentionPolicies_GetBuildsWithLogsToPurge(System.Nullable{System.Int32})">
            <summary>
            Gets only the builds that have logs remaining for the specified retention policy that can be purged.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.RetentionPolicies_GetBuildsWithLogsToPurgeAsync(System.Nullable{System.Int32})">
            <summary>
            Gets only the builds that have logs remaining for the specified retention policy that can be purged.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.RetentionPolicies_GetPurgeHistory(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets the purge history for one or all retention policies.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.RetentionPolicies_GetPurgeHistoryAsync(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets the purge history for one or all retention policies.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.RetentionPolicies_GetPurgeLog(System.Nullable{System.Int32})">
            <summary>
            Gets the specified purge history log.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.RetentionPolicies_GetPurgeLogAsync(System.Nullable{System.Int32})">
            <summary>
            Gets the specified purge history log.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.RetentionPolicies_GetReleaseCount(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets the total number of releases in the specified scope.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.RetentionPolicies_GetReleaseCountAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets the total number of releases in the specified scope.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.RetentionPolicies_GetReleasesToPurge(System.Nullable{System.Int32})">
            <summary>
            Gets the releases for the specified retention policy that can be purged.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.RetentionPolicies_GetReleasesToPurgeAsync(System.Nullable{System.Int32})">
            <summary>
            Gets the releases for the specified retention policy that can be purged.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.RetentionPolicies_GetRetentionPolicies(System.String)">
            <summary>
            Gets all of the retention policies.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.RetentionPolicies_GetRetentionPoliciesAsync(System.String)">
            <summary>
            Gets all of the retention policies.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.RetentionPolicies_GetRetentionPolicy(System.Nullable{System.Int32})">
            <summary>
            Gets the specified retention policy.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.RetentionPolicies_GetRetentionPolicyAsync(System.Nullable{System.Int32})">
            <summary>
            Gets the specified retention policy.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.RetentionPolicies_PurgeNow(System.Nullable{System.Int32})">
            <summary>
            Marks a retention policy as ready to run immediately.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.RetentionPolicies_PurgeNowAsync(System.Nullable{System.Int32})">
            <summary>
            Marks a retention policy as ready to run immediately.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ScriptAssets_CreateOrUpdateScript(System.String,System.Nullable{System.Int32},System.Byte[],System.Nullable{System.Int32})">
            <summary>
            Creates a new script or updates an existing one.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ScriptAssets_CreateOrUpdateScriptAsync(System.String,System.Nullable{System.Int32},System.Byte[],System.Nullable{System.Int32})">
            <summary>
            Creates a new script or updates an existing one.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ScriptAssets_DeleteScript(System.Nullable{System.Int32})">
            <summary>
            Deletes a script.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ScriptAssets_DeleteScriptAsync(System.Nullable{System.Int32})">
            <summary>
            Deletes a script.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ScriptAssets_GetScript(System.Nullable{System.Int32})">
            <summary>
            Gets the script with the specified ID.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ScriptAssets_GetScriptAsync(System.Nullable{System.Int32})">
            <summary>
            Gets the script with the specified ID.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ScriptAssets_GetScriptByName(System.String,System.Nullable{System.Int32})">
            <summary>
            Gets the script with the specified name, searching from the specified application.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ScriptAssets_GetScriptByNameAsync(System.String,System.Nullable{System.Int32})">
            <summary>
            Gets the script with the specified name, searching from the specified application.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ScriptAssets_GetScripts(System.Nullable{System.Int32})">
            <summary>
            Gets the scripts which are visible to the specified application.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ScriptAssets_GetScriptsAsync(System.Nullable{System.Int32})">
            <summary>
            Gets the scripts which are visible to the specified application.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Scripts_CreateOrUpdateParameter(System.Nullable{System.Int32},System.String,System.String,System.String,System.String)">
            <summary>
            Creates a new script parameter or updates an existing one.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Scripts_CreateOrUpdateParameterAsync(System.Nullable{System.Int32},System.String,System.String,System.String,System.String)">
            <summary>
            Creates a new script parameter or updates an existing one.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Scripts_CreateOrUpdateScript(System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{Inedo.Data.YNIndicator},System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Creates a new script or updates an existing one.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Scripts_CreateOrUpdateScriptAsync(System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{Inedo.Data.YNIndicator},System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Creates a new script or updates an existing one.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Scripts_CreateOrUpdateVariable(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Creates a new script variable or updates an existing one.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Scripts_CreateOrUpdateVariableAsync(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Creates a new script variable or updates an existing one.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Scripts_CreateVersion(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Byte[])">
            <summary>
            Creates a new version of a script.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Scripts_CreateVersionAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Byte[])">
            <summary>
            Creates a new version of a script.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Scripts_DeleteParameter(System.Nullable{System.Int32},System.String)">
            <summary>
            Deletes a script parameter.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Scripts_DeleteParameterAsync(System.Nullable{System.Int32},System.String)">
            <summary>
            Deletes a script parameter.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Scripts_DeleteScript(System.Nullable{System.Int32})">
            <summary>
            Permanently deletes a script.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Scripts_DeleteScriptAsync(System.Nullable{System.Int32})">
            <summary>
            Permanently deletes a script.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Scripts_DeleteVariable(System.Nullable{System.Int32},System.String)">
            <summary>
            Deletes a script variable.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Scripts_DeleteVariableAsync(System.Nullable{System.Int32},System.String)">
            <summary>
            Deletes a script variable.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Scripts_GetScript(System.Nullable{System.Int32})">
            <summary>
            Gets a script and all of its associated information.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Scripts_GetScriptAsync(System.Nullable{System.Int32})">
            <summary>
            Gets a script and all of its associated information.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Scripts_GetScripts(System.String,System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Gets all of the scripts in the system, optionally filtered by type code.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Scripts_GetScriptsAsync(System.String,System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Gets all of the scripts in the system, optionally filtered by type code.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Scripts_GetScriptTypeUsage">
            <summary>
            Gets usage data for the script types in the database.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Scripts_GetScriptTypeUsageAsync">
            <summary>
            Gets usage data for the script types in the database.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Security_AddNamedUser(System.String)">
            <summary>
            Assigns the specified user as a named user with the specified user class type
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Security_AddNamedUserAsync(System.String)">
            <summary>
            Assigns the specified user as a named user with the specified user class type
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Security_AddPrivilege(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Grants or denies the specified principal the ability to perform a certain role
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Security_AddPrivilegeAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Grants or denies the specified principal the ability to perform a certain role
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Security_CreateOrUpdateRole(System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Creates or updates a role.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Security_CreateOrUpdateRoleAsync(System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Creates or updates a role.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Security_DeleteRole(System.Nullable{System.Int32})">
            <summary>
            Deletes the specified role from the system
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Security_DeleteRoleAsync(System.Nullable{System.Int32})">
            <summary>
            Deletes the specified role from the system
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Security_GetNamedUser(System.String)">
            <summary>
            Gets the specified named user
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Security_GetNamedUserAsync(System.String)">
            <summary>
            Gets the specified named user
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Security_GetNamedUsers">
            <summary>
            Gets a list of the named users in the system
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Security_GetNamedUsersAsync">
            <summary>
            Gets a list of the named users in the system
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Security_GetOrAddAnonymousRole(System.String,System.Nullable{System.Int32})">
            <summary>
            Gets an anonymous role containing the specified tasks, creating one if necessary.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Security_GetOrAddAnonymousRoleAsync(System.String,System.Nullable{System.Int32})">
            <summary>
            Gets an anonymous role containing the specified tasks, creating one if necessary.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Security_GetPrivileges(System.Nullable{System.Int32},System.String)">
            <summary>
            Gets a list of privileges assigned in the system
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Security_GetPrivilegesAsync(System.Nullable{System.Int32},System.String)">
            <summary>
            Gets a list of privileges assigned in the system
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Security_GetRole(System.Nullable{System.Int32})">
            <summary>
            Gets the specified role, along with all the tasks that comprise the role.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Security_GetRoleAsync(System.Nullable{System.Int32})">
            <summary>
            Gets the specified role, along with all the tasks that comprise the role.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Security_GetRoles(System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Gets all the roles in the system, along with all the tasks comprising each role.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Security_GetRolesAsync(System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Gets all the roles in the system, along with all the tasks comprising each role.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Security_GetTasks">
            <summary>
            Gets all of the tasks in the system.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Security_GetTasksAsync">
            <summary>
            Gets all of the tasks in the system.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Security_RemoveNamedUser(System.String)">
            <summary>
            Removes the specified user as a named user
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Security_RemoveNamedUserAsync(System.String)">
            <summary>
            Removes the specified user as a named user
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Security_RemovePrivilege(System.Nullable{System.Int32})">
            <summary>
            Deletes a privilege from the system.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Security_RemovePrivilegeAsync(System.Nullable{System.Int32})">
            <summary>
            Deletes a privilege from the system.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Security_UserIsNamed(System.String,System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Determines whether or not a user is a named user in the system
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Security_UserIsNamedAsync(System.String,System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Determines whether or not a user is a named user in the system
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ServerRoles_CreateOrUpdateServerRole(System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Creates or updates a server role.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ServerRoles_CreateOrUpdateServerRoleAsync(System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Creates or updates a server role.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ServerRoles_DeleteServerRole(System.Nullable{System.Int32})">
            <summary>
            Deletes the specified server and its configurations.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ServerRoles_DeleteServerRoleAsync(System.Nullable{System.Int32})">
            <summary>
            Deletes the specified server and its configurations.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ServerRoles_GetServerRole(System.Nullable{System.Int32})">
            <summary>
            Gets the specified server role.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ServerRoles_GetServerRoleAsync(System.Nullable{System.Int32})">
            <summary>
            Gets the specified server role.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ServerRoles_GetServerRoles">
            <summary>
            Gets all the servers roles in the system.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ServerRoles_GetServerRolesAsync">
            <summary>
            Gets all the servers roles in the system.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ServerRoles_GetServerRolesEnvironments(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets all the server role and environment relations that match the specified criteria.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ServerRoles_GetServerRolesEnvironmentsAsync(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets all the server role and environment relations that match the specified criteria.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ServerRoles_GetServerRoleServers(System.Nullable{System.Int32})">
            <summary>
            Gets all the server role servers for a specific role, or all the roles in the system.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ServerRoles_GetServerRoleServersAsync(System.Nullable{System.Int32})">
            <summary>
            Gets all the server role servers for a specific role, or all the roles in the system.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ServerRoles_SearchServerRoles(System.Nullable{System.Int32})">
            <summary>
            Searches servers roles in the system.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.ServerRoles_SearchServerRolesAsync(System.Nullable{System.Int32})">
            <summary>
            Searches servers roles in the system.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Servers_CreateOrUpdateServer(System.String,System.String,System.Nullable{Inedo.Data.YNIndicator},System.String,System.Nullable{Inedo.Data.YNIndicator},System.String,System.String,System.String,System.Nullable{Inedo.Data.YNIndicator},System.Nullable{System.Int32})">
            <summary>
            Creates a new server, or updates an existing one.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Servers_CreateOrUpdateServerAsync(System.String,System.String,System.Nullable{Inedo.Data.YNIndicator},System.String,System.Nullable{Inedo.Data.YNIndicator},System.String,System.String,System.String,System.Nullable{Inedo.Data.YNIndicator},System.Nullable{System.Int32})">
            <summary>
            Creates a new server, or updates an existing one.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Servers_DeleteServer(System.Nullable{System.Int32})">
            <summary>
            Deletes a server.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Servers_DeleteServerAsync(System.Nullable{System.Int32})">
            <summary>
            Deletes a server.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Servers_GetServer(System.Nullable{System.Int32})">
            <summary>
            Gets the details of a specific server and its environments.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Servers_GetServerAsync(System.Nullable{System.Int32})">
            <summary>
            Gets the details of a specific server and its environments.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Servers_GetServerLogs(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets the logs associated with the specified server.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Servers_GetServerLogsAsync(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets the logs associated with the specified server.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Servers_GetServers(System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Gets all the servers in the system.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Servers_GetServersAsync(System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Gets all the servers in the system.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Servers_GetServersInGroup(System.Nullable{System.Int32},System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Gets all the servers in a specified server group.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Servers_GetServersInGroupAsync(System.Nullable{System.Int32},System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Gets all the servers in a specified server group.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Servers_SearchServers(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets all the servers specified by the filter, as well as their associated environments and roles.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Servers_SearchServersAsync(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets all the servers specified by the filter, as well as their associated environments and roles.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Servers_UpdateServerStatus(System.Nullable{System.Int32},System.String)">
            <summary>
            Stored procedure for internal use only.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Servers_UpdateServerStatusAsync(System.Nullable{System.Int32},System.String)">
            <summary>
            Stored procedure for internal use only.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.UserConfiguration_GetUserConfiguration(System.String)">
            <summary>
            Gets the a complete list of user configuration settings
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.UserConfiguration_GetUserConfigurationAsync(System.String)">
            <summary>
            Gets the a complete list of user configuration settings
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.UserConfiguration_GetValue(System.String,System.String,System.String)">
            <summary>
            Gets the specified user configuration value
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.UserConfiguration_GetValueAsync(System.String,System.String,System.String)">
            <summary>
            Gets the specified user configuration value
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.UserConfiguration_SetValue(System.String,System.String,System.String)">
            <summary>
            Sets a user configuration value
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.UserConfiguration_SetValueAsync(System.String,System.String,System.String)">
            <summary>
            Sets a user configuration value
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.UserDirectories_CreateOrUpdateDirectory(System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Creates a new user directory or updates an existing one.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.UserDirectories_CreateOrUpdateDirectoryAsync(System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Creates a new user directory or updates an existing one.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.UserDirectories_GetDirectories">
            <summary>
            Gets all of the user directories.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.UserDirectories_GetDirectoriesAsync">
            <summary>
            Gets all of the user directories.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Users_CreateOrUpdateGroup(System.String,System.String)">
            <summary>
            Creates a new user group in the system
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Users_CreateOrUpdateGroupAsync(System.String,System.String)">
            <summary>
            Creates a new user group in the system
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Users_CreateOrUpdateUser(System.String,System.String,System.String,System.String,System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Creates a new user in the system or updates an existing one.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Users_CreateOrUpdateUserAsync(System.String,System.String,System.String,System.String,System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Creates a new user in the system or updates an existing one.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Users_DeleteGroup(System.String)">
            <summary>
            Deletes a user group from the system, but does not delete the users who belong to the group
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Users_DeleteGroupAsync(System.String)">
            <summary>
            Deletes a user group from the system, but does not delete the users who belong to the group
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Users_DeleteUser(System.String)">
            <summary>
            Deletes a user from the system
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Users_DeleteUserAsync(System.String)">
            <summary>
            Deletes a user from the system
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Users_GetGroups">
            <summary>
            Gets a list of user groups in the system
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Users_GetGroupsAsync">
            <summary>
            Gets a list of user groups in the system
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Users_GetUser(System.String)">
            <summary>
            Gets the details of the specified user, and a list of all the groups the user belongs to
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Users_GetUserAsync(System.String)">
            <summary>
            Gets the details of the specified user, and a list of all the groups the user belongs to
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Users_GetUsers">
            <summary>
            Gets all the users in the system, along with all group membership information.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Users_GetUsersAsync">
            <summary>
            Gets all the users in the system, along with all group membership information.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Users_GetUsersInGroup(System.String)">
            <summary>
            Gets a list of users in the specified group
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Users_GetUsersInGroupAsync(System.String)">
            <summary>
            Gets a list of users in the specified group
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Users_SearchGroups(System.String,System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Gets a specific group by name, or if a wildcard search is performed, a group whose name starts with the specified name
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Users_SearchGroupsAsync(System.String,System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Gets a specific group by name, or if a wildcard search is performed, a group whose name starts with the specified name
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Users_SearchUsers(System.String,System.String,System.String,System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Gets the specified user, or searchs for a user whose name starts with any of the specified criteria
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Users_SearchUsersAsync(System.String,System.String,System.String,System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Gets the specified user, or searchs for a user whose name starts with any of the specified criteria
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Users_SetPassword(System.String,System.Byte[],System.Byte[],System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Stored procedure for internal use only.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Users_SetPasswordAsync(System.String,System.Byte[],System.Byte[],System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Stored procedure for internal use only.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Users_ValidateLogin(System.String,System.String,System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Validates the password of a specified user
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Users_ValidateLoginAsync(System.String,System.String,System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Validates the password of a specified user
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Variables_CreateOrUpdatePackageVariable(System.Nullable{System.Int32},System.String,System.String,System.Byte[],System.Nullable{Inedo.Data.YNIndicator},System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Creates a new package variable or sets an existing release package variable's value.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Variables_CreateOrUpdatePackageVariableAsync(System.Nullable{System.Int32},System.String,System.String,System.Byte[],System.Nullable{Inedo.Data.YNIndicator},System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Creates a new package variable or sets an existing release package variable's value.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Variables_CreateOrUpdateReleaseVariable(System.Nullable{System.Int32},System.String,System.String,System.Byte[],System.Nullable{Inedo.Data.YNIndicator},System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Creates a new release variable or sets an existing release variable's value.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Variables_CreateOrUpdateReleaseVariableAsync(System.Nullable{System.Int32},System.String,System.String,System.Byte[],System.Nullable{Inedo.Data.YNIndicator},System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Creates a new release variable or sets an existing release variable's value.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Variables_CreateOrUpdateVariable(System.String,System.String,System.Byte[],System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{Inedo.Data.YNIndicator},System.Nullable{Inedo.Data.YNIndicator},System.Nullable{System.Int32})">
            <summary>
            Creates a new variable or sets an existing variable's value.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Variables_CreateOrUpdateVariableAsync(System.String,System.String,System.Byte[],System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{Inedo.Data.YNIndicator},System.Nullable{Inedo.Data.YNIndicator},System.Nullable{System.Int32})">
            <summary>
            Creates a new variable or sets an existing variable's value.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Variables_CreateOrUpdateVariableDeclaration(System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{Inedo.Data.YNIndicator},System.String,System.String,System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Creates a new variable declaration or updates an existing one.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Variables_CreateOrUpdateVariableDeclarationAsync(System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{Inedo.Data.YNIndicator},System.String,System.String,System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Creates a new variable declaration or updates an existing one.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Variables_CreateOrUpdateVariableDefinition(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Creates a new variable definition or updates an existing one.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Variables_CreateOrUpdateVariableDefinitionAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Creates a new variable definition or updates an existing one.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Variables_DeletePackageVariable(System.Nullable{System.Int32},System.String)">
            <summary>
            Deletes a release package variable.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Variables_DeletePackageVariableAsync(System.Nullable{System.Int32},System.String)">
            <summary>
            Deletes a release package variable.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Variables_DeleteReleaseVariable(System.Nullable{System.Int32},System.String)">
            <summary>
            Deletes a release variable.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Variables_DeleteReleaseVariableAsync(System.Nullable{System.Int32},System.String)">
            <summary>
            Deletes a release variable.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Variables_DeleteVariable(System.Nullable{System.Int32})">
            <summary>
            Deletes a variable.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Variables_DeleteVariableAsync(System.Nullable{System.Int32})">
            <summary>
            Deletes a variable.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Variables_DeleteVariableDeclaration(System.Nullable{System.Int32})">
            <summary>
            Deletes a variable declaration.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Variables_DeleteVariableDeclarationAsync(System.Nullable{System.Int32})">
            <summary>
            Deletes a variable declaration.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Variables_DeleteVariableDefinition(System.Nullable{System.Int32})">
            <summary>
            Deletes a variable definition
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Variables_DeleteVariableDefinitionAsync(System.Nullable{System.Int32})">
            <summary>
            Deletes a variable definition
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Variables_GetAllVariableDefinitions(System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Gets all the variable definitions in the system.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Variables_GetAllVariableDefinitionsAsync(System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Gets all the variable definitions in the system.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Variables_GetPackageVariables(System.Nullable{System.Int32})">
            <summary>
            Gets the package variables for a specific release package.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Variables_GetPackageVariablesAsync(System.Nullable{System.Int32})">
            <summary>
            Gets the package variables for a specific release package.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Variables_GetReleaseVariables(System.Nullable{System.Int32})">
            <summary>
            Gets the release variables for a specific release.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Variables_GetReleaseVariablesAsync(System.Nullable{System.Int32})">
            <summary>
            Gets the release variables for a specific release.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Variables_GetSystemVariableDefinitions">
            <summary>
            Gets the variable definitions for system-scoped variables.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Variables_GetSystemVariableDefinitionsAsync">
            <summary>
            Gets the variable definitions for system-scoped variables.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Variables_GetVariable(System.Nullable{System.Int32})">
            <summary>
            Gets a variable from a specified id.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Variables_GetVariableAsync(System.Nullable{System.Int32})">
            <summary>
            Gets a variable from a specified id.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Variables_GetVariableDeclaration(System.Nullable{System.Int32})">
            <summary>
            Gets the variable declaration in the system that has the specified ID.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Variables_GetVariableDeclarationAsync(System.Nullable{System.Int32})">
            <summary>
            Gets the variable declaration in the system that has the specified ID.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Variables_GetVariableDeclarations(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Gets the variable declarations in the system that are defined in the specified scope.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Variables_GetVariableDeclarationsAsync(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Gets the variable declarations in the system that are defined in the specified scope.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Variables_GetVariableDefinition(System.Nullable{System.Int32})">
            <summary>
            Gets the specified variable definition.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Variables_GetVariableDefinitionAsync(System.Nullable{System.Int32})">
            <summary>
            Gets the specified variable definition.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Variables_GetVariableDefinitions(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets the variable definitions in the system that are defined in the specified scope
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Variables_GetVariableDefinitionsAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets the variable definitions in the system that are defined in the specified scope
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Variables_GetVariables">
            <summary>
            Gets all variables.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Variables_GetVariablesAsync">
            <summary>
            Gets all variables.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Variables_GetVariablesAccessibleFromScope(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{Inedo.Data.YNIndicator},System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Gets the variables that are defined in any of the specified scopes.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Variables_GetVariablesAccessibleFromScopeAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{Inedo.Data.YNIndicator},System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Gets the variables that are defined in any of the specified scopes.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Variables_GetVariablesForScope(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets the variables that are defined only in the specified scope.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Variables_GetVariablesForScopeAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets the variables that are defined only in the specified scope.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Variables_GetVariableValues(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets the variable values for the specified scope.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Context.Variables_GetVariableValuesAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets the variable values for the specified scope.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.AdminEdit_PurgeArtifact(System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Purges an artifact from the specified build.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.AdminEdit_PurgeBuild(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Purges an entire build and all associated data from the system.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.AdminEdit_UpdateBuildStatus(System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Updates the status of a build.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.AdminEdit_UpdateExecutionStatus(System.Nullable{System.Int32},System.String)">
            <summary>
            Updates the status of an execution.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.AdminEdit_UpdatePromotionStatus(System.Nullable{System.Int32},System.String)">
            <summary>
            Updates the status of a promotion.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.AdminEdit_UpdateReleaseStatus(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Updates the status of a release.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.ApiKeys_CreateOrUpdateApiKey(System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Creates or updates the specified API key.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.ApiKeys_DeleteApiKey(System.Nullable{System.Int32})">
            <summary>
            Deletes the specified API key.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.ApiKeys_GetAccessLog(System.Nullable{System.Int32})">
            <summary>
            Gets the details of a specific API access log.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.ApiKeys_GetAccessLogs(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets all API access logs.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.ApiKeys_GetApiKey(System.Nullable{System.Int32})">
            <summary>
            Gets the specified API key by ID.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.ApiKeys_GetApiKeyByName(System.String)">
            <summary>
            Gets the specified API key by the API key.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.ApiKeys_GetApiKeys">
            <summary>
            Gets all API keys in the system.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.ApiKeys_LogRequest(System.String,System.Nullable{System.DateTime},System.String,System.String,System.String,System.Nullable{System.Int32},System.Byte[],System.Byte[])">
            <summary>
            Logs a request made with an API key.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.ApplicationGroups_CreateOrUpdateApplicationGroup(System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Creates or updates a new application group
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.ApplicationGroups_DeleteApplicationGroup(System.Nullable{System.Int32})">
            <summary>
            Deletes an application group
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.ApplicationGroups_GetApplicationGroup(System.Nullable{System.Int32})">
            <summary>
            Gets an application group by ID.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.ApplicationGroups_GetApplicationGroups">
            <summary>
            Gets all the application groups
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.ApplicationGroups_GetOrCreateApplicationGroup(System.String,System.Nullable{System.Int32})">
            <summary>
            Gets or creates a new application group using the name
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Applications_AddImportedDeployable(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Adds an imported deployable to an application
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Applications_CreateApplication(System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{Inedo.Data.YNIndicator},System.Nullable{Inedo.Data.YNIndicator},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Creates a new application.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Applications_CreateOrUpdateDeployable(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Creates a deployable for a specified application, or updates an existing one
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Applications_DeactivateApplication(System.Nullable{System.Int32})">
            <summary>
            Deactivates an application, removing it from menu options but preserves data.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Applications_DeleteImportedDeployable(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Deletes an existing imported deployable relation, but does not delete the deployable from the host application
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Applications_EditApplication(System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{Inedo.Data.YNIndicator},System.Nullable{Inedo.Data.YNIndicator},System.String,System.String,System.String)">
            <summary>
            Edits an existing application.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Applications_FindDeployables(System.String,System.Nullable{System.Int32})">
            <summary>
            Searches for deployables in the system.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Applications_GetApplication(System.Nullable{System.Int32})">
            <summary>
            Gets the details of an application along with the associated deployables
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Applications_GetApplications(System.Nullable{System.Int32},System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Gets the specified number of applications in the system, or all if null is passed in
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Applications_GetDependentApplications(System.Nullable{System.Int32})">
            <summary>
            Gets all applications with imported deployables from a specified application
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Applications_GetDeployable(System.Nullable{System.Int32})">
            <summary>
            Gets the specified deployable
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Applications_GetDeployableDependencies(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets a set of dependencies for the deployables in a given application or a specific deployable if one is specified
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Applications_GetDeployables(System.Nullable{System.Int32})">
            <summary>
            Gets the deployables for a specific application or for all applications.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Applications_GetImportedDeployables(System.Nullable{System.Int32})">
            <summary>
            Gets a set a imported deployables for a specified application
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Applications_GetLatestEnvironmentExecutions(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets a view of all the latest executions grouped by application and environment, optionally filtered by application or application group.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Applications_GetNavigationData(System.Nullable{System.Int32})">
            <summary>
            Gets the information required to display the application navigation bar.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Applications_GetSpecifiedApplications(System.String)">
            <summary>
            Gets only the active applications in the specified CSV string.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Applications_PurgeApplicationData(System.Nullable{System.Int32})">
            <summary>
            Purges an entire application and all associated data from the system.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Applications_PurgeDeployableData(System.Nullable{System.Int32})">
            <summary>
            Purges a deployable and all its associations from the system.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Applications_ReactivateApplication(System.Nullable{System.Int32})">
            <summary>
            Reactivates an application that has been deactivated.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Applications_SearchApplications(System.String)">
            <summary>
            Searches for applications by application name and group name that contain the search term.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Applications_SetDashboard(System.Nullable{System.Int32},System.String)">
            <summary>
            Sets the dashboard text for an application
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Applications_SetDeployableDependencies(System.Nullable{System.Int32},System.String)">
            <summary>
            Sets the dependency relationships between the specified deployable and its dependents
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Applications_SetIssueTracker(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Sets the issue tracking provider of a specified application.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Applications_ValidateHealth(System.Nullable{System.Int32})">
            <summary>
            Gets data relevant to the Application Health page.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Artifacts_CreateOrReplaceArtifact(System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Creates a reference to an artifact in the artifact library.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Artifacts_GetArtifact(System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Gets an artifact based on the specified criteria.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Artifacts_GetArtifacts(System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets a set of artifacts based on the specified criteria.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Artifacts_GetArtifactsByBuildStatus(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Gets a set of artifacts that are associated with a specified build status, optionally filtered by application and release.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.BuildExecutions_GetPipelineStageNames">
            <summary>
            Gets all stage names based on the target of an execution.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.BuildMaster_GetAlerts(System.String)">
            <summary>
            Gets the alerts.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.BuildMaster_GetCurrentDateTime(System.Nullable{System.DateTime})">
            <summary>
            Stored procedure for internal use only.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.BuildMaster_GetUsageInfo">
            <summary>
            Gets miscellaneous usage data from the system.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.BuildOutputs_AddOutput(System.Nullable{System.Int32},System.String,System.Byte[],System.String)">
            <summary>
            Adds a build output report to a specified build execution
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.BuildOutputs_GetOutput(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets the build output report for a specified build and sequence number
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.BuildOutputs_GetOutputs(System.Nullable{System.Int32})">
            <summary>
            Gets the build output reports for a specified build
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Builds_CompletePromotion(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Completes a build promotion.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Builds_CreateBuild(System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Creates a new build of an application.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Builds_DeployBuild(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Marks a build and its associated release as deployed based on the settings in its workflow.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Builds_GetBuild(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Gets the details for a specified build.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Builds_GetBuildById(System.Nullable{System.Int32})">
            <summary>
            Gets the details for a specified build by ID.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Builds_GetBuilds(System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Gets the details for all builds that match the specified criteria.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Builds_GetExecution(System.Nullable{System.Int32})">
            <summary>
            Gets all details regarding a specific build execution
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Builds_GetExecutionExtended(System.Nullable{System.Int32})">
            <summary>
            Gets all details regarding a specific build execution.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Builds_GetExecutions(System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Gets all the build executions for the specified build
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Builds_GetExecutionsByServer(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets recent build executions for the specified server.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Builds_GetExecutionsInProgress(System.Nullable{System.Int32})">
            <summary>
            Gets all executions in the executing state optionally filtered by application.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Builds_GetPromotion(System.Nullable{System.Int32})">
            <summary>
            Gets a build promotion.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Builds_GetPromotions(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Gets all of the promotions that have occurred.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Builds_InitiateBuildExecution(System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Initiates a new build execution.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Builds_PromoteBuild(System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{Inedo.Data.YNIndicator},System.String,System.Nullable{Inedo.Data.YNIndicator},System.Nullable{System.Int32})">
            <summary>
            Promotes a build to to a pipeline stage.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Builds_PurgeBuildData(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Purges an entire build and all associated data from the system.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Builds_PurgeExecutionLogs(System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.Int64})">
            <summary>
            Purges execution logs in a specific build before a specified time.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Builds_RejectBuild(System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Rejects the specified build.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Builds_SetBuildNumber(System.Nullable{System.Int32},System.String)">
            <summary>
            Sets the build number of a build.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.BuildSchedules_CreateOrUpdateRecurring(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Creates a recurring build based on the specified parameters, or updates an existing schedule if one with the given ID already exists.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.BuildSchedules_CreateOrUpdateSchedule(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{Inedo.Data.YNIndicator},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Creates a scheduled build based on the specified parameters, or updates an existing scheduled build if one with the given ID already exists.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.BuildSchedules_CreateOrUpdateSCMTriggered(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Creates a source control triggered automated build based on the specified parameters, or updates an existing one if one with a given ID already exists.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.BuildSchedules_CreateOrUpdateURLTriggered(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Creates a URL-triggered build based on the specified parameters, or updates an existing schedule if one with the given ID already exists.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.BuildSchedules_DeleteBuildSchedule(System.Nullable{System.Int32})">
            <summary>
            Deletes the specified build schedule
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.BuildSchedules_GetBuildSchedule(System.Nullable{System.Int32})">
            <summary>
            Gets the specified build schedule
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.BuildSchedules_GetBuildSchedules(System.Nullable{System.Int32},System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Gets a set of builds schedules for the specified application and active indicator, or all if null is supplied
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.BuildSchedules_SetLastExecutionDate(System.Nullable{System.Int32},System.Nullable{System.DateTime})">
            <summary>
            Sets the last execution date for a scheduled build.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.BuildSchedules_SetVariableDefinition(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Updates a variable definition to use with a scheduled build
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.BuildTestResults_GetAllGroups">
            <summary>
            Gets all of the test result groups in the system.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.BuildTestResults_GetTestGroupResults(System.Nullable{System.Int32})">
            <summary>
            Gets the unit test results for a specified build execution.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.BuildTestResults_GetTestGroupResultsForBuild(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Gets the unit test results for the specified build.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.BuildTestResults_GetTestHistory(System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Gets this history of a test by its name, and optionally filtered by test group and application.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.BuildTestResults_GetTestLog(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Gets the results of a specific unit test
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.BuildTestResults_GetTestResults(System.Nullable{System.Int32},System.String)">
            <summary>
            Gets the build test results based on the specified criteria.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.BuildTestResults_RecordTestResult(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Logs the result of an individual unit test.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.ChangeControlPerformances_GetReleaseSummary(System.Nullable{System.Int32})">
            <summary>
            Gets a summary of the change control performances for a specified change control.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.ChangeControls_CreateOrUpdateChangeControl(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{Inedo.Data.YNIndicator},System.String)">
            <summary>
            Creates a new change control, or updates an existing one.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.ChangeControls_DeleteChangeControl(System.Nullable{System.Int32})">
            <summary>
            Deletes the specified change control
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.ChangeControls_GetChangeControl(System.Nullable{System.Int32})">
            <summary>
            Gets the details of a specified change control.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.ChangeControls_GetChangeControlPerformances(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{Inedo.Data.YNIndicator},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets a list of change control performances for a specified change control or all change controls if none is specified.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.ChangeControls_GetChangeControls(System.Nullable{System.Int32},System.String,System.Nullable{Inedo.Data.YNIndicator},System.Nullable{System.Int32})">
            <summary>
            Gets a list of change controls based on the specified criteria.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.ChangeControls_PerformChangeControl(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Adds a change control performance for a specified environment.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Configuration_GetConfiguration">
            <summary>
            Gets the a complete list of BuildMaster configuration settings.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Configuration_GetInternalValue(System.String,System.String)">
            <summary>
            Gets the specified BuildMaster internal configuration value.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Configuration_GetValue(System.String,System.String,System.String)">
            <summary>
            Gets the specified BuildMaster configuration value.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Configuration_SetValue(System.String,System.String,System.String)">
            <summary>
            Sets a BuildMaster configuration value.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Configuration_SetValueWithoutEvent(System.String,System.String,System.String)">
            <summary>
            Stored procedure for internal use only.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.ConfigurationFiles_CreateConfigurationFile(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Creates a configuration file in the system.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.ConfigurationFiles_CreateConfigurationFileInstance(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{Inedo.Data.YNIndicator},System.String,System.String)">
            <summary>
            Creates a new instance of a configuration file.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.ConfigurationFiles_CreateConfigurationFileVersions(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Creates new configuration file versions for each instance specified in the ConfigurationFiles_Xml for the given configuration file.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.ConfigurationFiles_DeployConfigurationFile(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Saves the result of a deployed configuration file (this will not physically deploy the configuration file).
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.ConfigurationFiles_FillVersionGaps(System.Nullable{System.Int32})">
            <summary>
            Ensures that there are no gaps in configuration file instance versions.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.ConfigurationFiles_GetConfigurationFile(System.Nullable{System.Int32},System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Gets a configuration file and all of its instances.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.ConfigurationFiles_GetConfigurationFileDeployments(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets a list of all configuration file deployments based on the specified criteria.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.ConfigurationFiles_GetConfigurationFileInstances(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Gets a list of all configuration file instances that match the specified criteria.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.ConfigurationFiles_GetConfigurationFiles(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{Inedo.Data.YNIndicator},System.Nullable{Inedo.Data.YNIndicator},System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Gets all configuration files that match the specified criteria.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.ConfigurationFiles_GetConfigurationFileVersion(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Gets a list of configuration file versions for a specified configuration file.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.ConfigurationFiles_PurgeConfigurationFile(System.Nullable{System.Int32})">
            <summary>
            Purges a configuration file, including all previous versions of all instances and deployment history.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.ConfigurationFiles_PurgeConfigurationFileInstance(System.Nullable{System.Int32},System.String,System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Purges a configuration file instance, including all previous versions and deployment history.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.ConfigurationFiles_UpdateConfigurationFile(System.Nullable{System.Int32},System.Nullable{Inedo.Data.YNIndicator},System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Updates metadata for an existing configuration file.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.ConfigurationFiles_UpdateConfigurationFileInstance(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{Inedo.Data.YNIndicator},System.String,System.String)">
            <summary>
            Updates metadata for an existing configuration file instance.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Credentials_CreateOrUpdateCredential(System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{Inedo.Data.YNIndicator},System.Nullable{System.Int32})">
            <summary>
            Creates a new credential or updates an existing one.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Credentials_DeleteCredential(System.Nullable{System.Int32})">
            <summary>
            Gets the specified credential.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Credentials_GetCredential(System.Nullable{System.Int32})">
            <summary>
            Gets the specified credential.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Credentials_GetCredentialByName(System.String,System.String)">
            <summary>
            Gets the specified credential by its qualified name.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Credentials_GetCredentials">
            <summary>
            Gets all credentials in the system.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Dashboards_GetApplications(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets an application summary for all applications in BuildMaster or a specific group of applications.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.DatabaseChangeScripts_CreateExecution(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Creates a database change script execution.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.DatabaseChangeScripts_CreateOrUpdateChangeScript(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{Inedo.Data.YNIndicator},System.Nullable{System.Int32})">
            <summary>
            Creates or edits a database change script.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.DatabaseChangeScripts_DeleteChangeScript(System.Nullable{System.Int32})">
            <summary>
            Deletes a database change script.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.DatabaseChangeScripts_GetChangeScript(System.Nullable{System.Int32})">
            <summary>
            Gets the specified database change script.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.DatabaseChangeScripts_GetChangeScripts(System.Nullable{System.Int32},System.String,System.Nullable{Inedo.Data.YNIndicator},System.Nullable{System.Int32})">
            <summary>
            Gets all the database change scripts that match the specified criteria.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.DatabaseChangeScripts_GetExecution(System.Nullable{System.Int32})">
            <summary>
            Gets a database change script execution.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.DatabaseConnections_CreateOrUpdateConnection(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Creates a new database connection or updates an existing one.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.DatabaseConnections_DeleteConnection(System.Nullable{System.Int32})">
            <summary>
            Deletes a database connection.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.DatabaseConnections_GetConnection(System.Nullable{System.Int32})">
            <summary>
            Gets a database connection.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.DatabaseConnections_GetConnections(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets database connections, optionally filtered by application and environment.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Environments_CreateOrUpdateEnvironment(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Creates a new environment or updates an existing one
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Environments_DeleteEnvironment(System.Nullable{System.Int32})">
            <summary>
            Soft deletes an environment
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Environments_GetEnvironment(System.Nullable{System.Int32})">
            <summary>
            Gets an environment.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Environments_GetEnvironments(System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Gets all environments.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Environments_GetEnvironmentsAndServers(System.Nullable{Inedo.Data.YNIndicator},System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Gets the a dataset containing all environments, all environment/server relations, and servers
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Environments_ResequenceEnvironment(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Resequences the specified environment by placing it where another environment is sequenced
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Environments_UndeleteEnvironment(System.Nullable{System.Int32})">
            <summary>
            Undeletes the specified environment
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.EventListeners_CreateOrUpdateEventListener(System.String,System.String,System.String,System.Nullable{Inedo.Data.YNIndicator},System.String,System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Creates or updates an event listener.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.EventListeners_DeleteEventListener(System.Nullable{System.Int32})">
            <summary>
            Deletes an event listener.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.EventListeners_GetEventListener(System.Nullable{System.Int32})">
            <summary>
            Gets a EventListener and a list of event codes that the EventListener is subscribed to.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.EventListeners_GetEventListeners(System.String)">
            <summary>
            Gets a list of event listeners for the specified user, or all users if no user is specified.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Events_GetEventOccurrence(System.Nullable{System.Int32})">
            <summary>
            Get a specific event occurrence along with its event details.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Events_GetEventOccurrences(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets all the event occurrences in the system for a specific application, or all applications, limited to a specified count if provided.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Events_RaiseEvent(System.String,System.Nullable{System.Int32},System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            Stored procedure for internal use only.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Executions_AddLogEntry(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Byte[],System.Nullable{System.DateTime})">
            <summary>
            Creates a log entry.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Executions_BeginExecution(System.Nullable{System.Int32})">
            <summary>
            Changes the state of an execution from Pending to Executing.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Executions_CancelExecution(System.Nullable{System.Int32})">
            <summary>
            Stored procedure for internal use only.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Executions_CompleteExecution(System.Nullable{System.Int32},System.String)">
            <summary>
            Marks an execution as completed. If ExecutionStatus_Code is not supplied, it will be inferred.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Executions_CompleteLogScope(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime})">
            <summary>
            Completes a log scope.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Executions_CreateLogScope(System.Nullable{System.Int32},System.Byte[],System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            Creates a log scope.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Executions_CreateManualExecution(System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Creates a manual execution.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Executions_CreateOrUpdateManualAction(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Creates a new manual action or marks an existing one as complete.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Executions_FailExecutingPlans">
            <summary>
            Stored procedure for internal use only.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Executions_GetEstimatedDuration(System.Nullable{System.Int32},System.Byte[])">
            <summary>
            Gets the estimated length of time for an execution based on its run context hash.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Executions_GetExecution(System.Nullable{System.Int32})">
            <summary>
            Gets an execution.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Executions_GetExecutionLogScopes(System.Nullable{System.Int32})">
            <summary>
            Gets all log scopes for the specified execution.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Executions_GetExecutions(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Gets all executions in the system.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Executions_GetExecutionsPendingCancellation">
            <summary>
            Returns executions which are awaiting cancellation.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Executions_GetExecutionsToExecute">
            <summary>
            Returns executions which are ready to be started by the executer.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Executions_GetLogEntries(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Gets the latest log entries for a specified execution and log scope.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Executions_GetManualActionsInProgress(System.Nullable{System.Int32},System.String)">
            <summary>
            Returns manual actions which are currently in progress.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Executions_GetManualExecution(System.Nullable{System.Int32})">
            <summary>
            Gets a manual execution.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Executions_GetPartialExecutionLog(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Gets the latest log entries for a specified execution.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Executions_IsManualActionComplete(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Returns the user which has completed the manual action, or null if the action is not completed.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Executions_SetRunContextHash(System.Nullable{System.Int32},System.Byte[])">
            <summary>
            Gets the estimated length of time for an execution based on its run context hash.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.ExtensionConfiguration_DeleteConfiguration(System.Nullable{System.Int32})">
            <summary>
            Deletes an extension configuration
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.ExtensionConfiguration_GetConfiguration(System.String,System.String)">
            <summary>
            Gets the details of an extension configurer for extension with the specified name
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.ExtensionConfiguration_GetConfigurationById(System.Nullable{System.Int32})">
            <summary>
            Gets the details of an extension configurer for extension with the specified ID
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.ExtensionConfiguration_GetConfigurations(System.String)">
            <summary>
            Gets the details for all extension configurers in the system, or a specific one if specified
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.ExtensionConfiguration_SaveConfiguration(System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Creates an extension configurer in the system, or updates an existing one
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Infrastructure_GetInfrastructure">
            <summary>
            Gets all of the infrastructure; this includes servers, environments, and roles.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Issues_CloseIssue(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Closes a BuildMaster issue.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Issues_CreateIssue(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{Inedo.Data.YNIndicator},System.String,System.String,System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.DateTime},System.String,System.Nullable{System.Int32})">
            <summary>
            Creates an issue for a release of an application.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Issues_DeleteIssue(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Deletes an issue.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Issues_GetIssue(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets the specified.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Issues_GetIssues(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Gets the issues for an application, optionally filtered by release or build.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Issues_GetIssueTypes">
            <summary>
            Gets a list of distinct issue types that have been synchronized by the system.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Issues_ReopenIssue(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Re-opens a BuildMaster issue.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Issues_UpdateIssue(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{Inedo.Data.YNIndicator},System.String,System.String,System.Nullable{System.DateTime},System.String,System.String)">
            <summary>
            Updates one or more properties of an issue.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.LegacyExecutions_AppendActionLog(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Writes a log message to an action log.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.LegacyExecutions_BeginAction(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Initiates execution of a specific action.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.LegacyExecutions_BeginDeploymentPlan(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Initiates execution of a specific deployment plan.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.LegacyExecutions_BeginDeploymentPlanActionGroup(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Initiates execution of a specific deployment plan action group.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.LegacyExecutions_CompleteAction(System.Nullable{System.Int32},System.String)">
            <summary>
            Marks an action as completed.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.LegacyExecutions_GetExecutionLog(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets the details for a specified build execution, and plan or action if specified.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.LegacyExecutions_GetExecutionLogForActions(System.String)">
            <summary>
            Gets all of the log entries for the actions specified.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.LegacyExecutions_GetPartialExecutionLog(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Gets the latest log entries for a specified build execution.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.LegacyExecutions_GetVariableValues(System.Nullable{System.Int32})">
            <summary>
            Gets execution time variable values.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.LegacyExecutions_SetVariableValue(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Creates, updates, or deletes an execution time variable value.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.LicenseKeys_ActivateLicenseKey(System.String,System.String)">
            <summary>
            Sets the activation code for a license key.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.LicenseKeys_AddLicenseKey(System.String)">
            <summary>
            Adds a new license key.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.LicenseKeys_DeleteLicenseKey(System.String)">
            <summary>
            Deletes a license key.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.LicenseKeys_GetLicenseKeys">
            <summary>
            Gets all the license keys.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.LogMessages_AddMessage(System.String,System.Nullable{System.Int32},System.String,System.Byte[],System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Stored procedure for internal use only.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.LogMessages_DeleteMessages(System.Nullable{System.Int32})">
            <summary>
            Deletes one or all message from the error log
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.LogMessages_GetCategories">
            <summary>
            Gets all of the distinct category names in the log messages table.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.LogMessages_GetMessage(System.Nullable{System.Int32})">
            <summary>
            Gets a specified message from the error log
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.LogMessages_GetMessages(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets the messages from the error log that match the specified criteria
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Notifiers_CreateOrUpdateNotifier(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{Inedo.Data.YNIndicator},System.String)">
            <summary>
            Creates a new notifier, or updates an existing one
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Notifiers_DeleteNotifier(System.Nullable{System.Int32})">
            <summary>
            Deletes a notifier from the system
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Notifiers_GetNotifier(System.Nullable{System.Int32})">
            <summary>
            Gets a notifier and a list of event codes that the notifier is subscribed to
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Notifiers_GetNotifiers(System.String)">
            <summary>
            Gets a list of notifiers for the specified user, or all users if no user is specified
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Pipelines_CreatePipeline(System.String,System.String,System.Nullable{Inedo.Data.YNIndicator},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Creates a new pipeline.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Pipelines_DeletePipeline(System.Nullable{System.Int32})">
            <summary>
            Deletes a pipeline.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Pipelines_GetPipeline(System.Nullable{System.Int32})">
            <summary>
            Returns the specified pipeline.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Pipelines_GetPipelines(System.Nullable{System.Int32})">
            <summary>
            Returns the pipelines in the system, optionally filtered by application.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Pipelines_GetPipelinesUsedByApplications">
            <summary>
            Returns the pipelines used by applications.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Pipelines_UpdatePipeline(System.Nullable{System.Int32},System.String,System.String,System.Nullable{Inedo.Data.YNIndicator},System.String)">
            <summary>
            Updates a pipeline.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Plans_ChangeActionGroup(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Moves an action into a different action group.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Plans_ChangeActionGroupDeploymentPlan(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Moves a plan action group to the final position of a different deployment plan.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Plans_CloneDeploymentPlans(System.String,System.String)">
            <summary>
            Clones one or more deployment plans
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Plans_CreateDeploymentPlanActionGroup(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{Inedo.Data.YNIndicator},System.String,System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Creates a new action group in the specified deployment plan.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Plans_CreateOrUpdateAction(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{Inedo.Data.YNIndicator},System.String,System.String,System.Nullable{Inedo.Data.YNIndicator},System.Nullable{System.Int32},System.Nullable{Inedo.Data.YNIndicator},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Creates an action in the specified action group or updates an existing one.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Plans_CreateOrUpdateDeploymentPlan(System.String,System.Nullable{Inedo.Data.YNIndicator},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Creates a new deployment plan or changes the name of an existing deployment plan.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Plans_CreatePlan(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Byte[],System.Nullable{System.Int32})">
            <summary>
            Creates a new OtterScript deployment plan.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Plans_DeleteAction(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Deletes an action from an action group.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Plans_DeleteDeploymentPlan(System.Nullable{System.Int32})">
            <summary>
            Deletes a deployment plan.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Plans_DeleteDeploymentPlanActionGroup(System.Nullable{System.Int32})">
            <summary>
            Deletes the specified action group.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Plans_DeletePlan(System.Nullable{System.Int32})">
            <summary>
            Deletes an OtterScript plan.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Plans_GetAction(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets the details of the specified action.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Plans_GetActionGroup(System.Nullable{System.Int32})">
            <summary>
            Gets the details of the specified plan, and all the actions associated with the plan.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Plans_GetActionGroups">
            <summary>
            Gets all action groups.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Plans_GetDeploymentPlan(System.Nullable{System.Int32},System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Returns action groups and actions for a deployment plan.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Plans_GetDeploymentPlanActionGroup(System.Nullable{System.Int32})">
            <summary>
            Gets the details of the specified plan, and all the actions associated with the plan.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Plans_GetDeploymentPlans(System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Returns the deployment plans in the system.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Plans_GetGlobalDeploymentPlans">
            <summary>
            Returns named deployment plans and optionally plans orphaned.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Plans_GetMostCommonActions(System.Nullable{System.Int32})">
            <summary>
            Returns the most commonly used actions in the system.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Plans_GetPlan(System.Nullable{System.Int32})">
            <summary>
            Returns the specified OtterScript plan.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Plans_GetPlanByName(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Gets the plan which has the specified name and type that is visible to the specified application.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Plans_GetPlans(System.Nullable{System.Int32},System.String)">
            <summary>
            Returns all OtterScript plans of the specified type which are visible to the specified application.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Plans_GetPlansByName(System.String,System.String)">
            <summary>
            Gets all plans in the system with the specified name and type.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Plans_ResequenceAction(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Changes the sequence of an action within a plan.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Plans_ResequenceActionGroup(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Changes the sequence of a deployment plan action group.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Plans_SetOtterScript(System.Nullable{System.Int32},System.Byte[])">
            <summary>
            Sets the Otter script of a plan.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Plans_UpdateActionGroup(System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Updates the specified action group.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Plans_UpdateDeploymentPlanActionGroup(System.Nullable{System.Int32},System.Nullable{Inedo.Data.YNIndicator},System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{Inedo.Data.YNIndicator},System.Nullable{Inedo.Data.YNIndicator},System.Nullable{Inedo.Data.YNIndicator},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Updates the specified deployment plan action group.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Plans_UpdatePlan(System.Nullable{System.Int32},System.String,System.Byte[],System.Nullable{System.Int32})">
            <summary>
            Updates an OtterScript deployment plan.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Promotions_AddApproval(System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Adds an approval for a promotion.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Promotions_DeleteApproval(System.Nullable{System.Int32})">
            <summary>
            Deletes an approval for a promotion.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Promotions_GetApprovalsReceived(System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Gets all requirements and approvals received for the specified promotion.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Promotions_GetScheduled(System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
            Gets scheduled promotions, optionally filtered by promotion and date.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Promotions_InvalidateApprovals(System.Nullable{System.Int32},System.String)">
            <summary>
            Deletes received approvals for a pending promotion.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Promotions_SchedulePromotion(System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
            Schedules a promotion or removes a previously scheduled promotion.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Promotions_SetAutomaticRequirementStatus(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{Inedo.Data.YNIndicator},System.Nullable{Inedo.Data.YNIndicator},System.String)">
            <summary>
            Records the status of an automatic promotion requirement.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Providers_CreateOrUpdateProvider(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Creates a new provider or updates an existing one.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Providers_DeleteProvider(System.Nullable{System.Int32})">
            <summary>
            Deletes the specified provider
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Providers_GetProvider(System.Nullable{System.Int32})">
            <summary>
            Gets the details of the specified provider
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Providers_GetProviders(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets a list of providers in the system based on the specified criteria
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Releases_CancelRelease(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Cancels the specified release.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Releases_CreateOrUpdateRelease(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.String,System.String)">
            <summary>
            Creates a release or updates an existing one.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Releases_CreateOrUpdateReleaseDeployable(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Sets the furthest build number for the release.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Releases_CreateOrUpdateReleaseNote(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Creates a new release note, or updates an existing one.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Releases_DeleteReleaseDeployable(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Removes a deployable from the release.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Releases_DeleteReleaseNote(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Deletes a release note from the system.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Releases_GetBuildExecutions(System.Nullable{System.Int32},System.String)">
            <summary>
            Gets the list of build executions for the specified release
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Releases_GetDependentReleases(System.Nullable{System.Int32},System.String)">
            <summary>
            Gets all releases with referenced deployables from a specified release.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Releases_GetRelease(System.Nullable{System.Int32},System.String)">
            <summary>
            Gets the details of a specified release, the deployables associated with the release, and the configuration file versions associated with the release.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Releases_GetReleaseById(System.Nullable{System.Int32})">
            <summary>
            Gets the details of a specified release by ID.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Releases_GetReleaseDeployables(System.Nullable{System.Int32})">
            <summary>
            Gets the set of deployables associated with any release for an application.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Releases_GetReleaseNote(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Gets a release note from the system.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Releases_GetReleaseNotes(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Gets the release notes that match the specified criteria.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Releases_GetReleases(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Gets a list of releases that match the specified criteria.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Releases_GetReleaseSlim(System.Nullable{System.Int32},System.String)">
            <summary>
            Gets the details of a specified release.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Releases_GetReleasesSlim(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Gets a list of releases that match the specified criteria with minimal join data.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Releases_PurgeReleaseData(System.Nullable{System.Int32},System.String)">
            <summary>
            Purges an entire release and all associated data from the system.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Releases_ReleaseExists(System.Nullable{System.Int32},System.String,System.Nullable{Inedo.Data.YNIndicator},System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Determines whether a release already exists, and also whether a newer release of an application exists
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Releases_ResequenceRelease(System.Nullable{System.Int32},System.String,System.Nullable{System.Int64})">
            <summary>
            Resequences the specified release by placing it where another release is sequenced.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Releases_SetConfigurationFileVersion(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Sets the configuration file version for the specified release.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Releases_SetFurthestBuild(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Sets the furthest build number for the release.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Releases_UnCancelRelease(System.Nullable{System.Int32},System.String)">
            <summary>
            Restores a previously canceled release.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.ReleaseTemplates_CreateOrUpdateTemplate(System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Creates a release template or updates an existing one.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.ReleaseTemplates_DeleteTemplate(System.Nullable{System.Int32})">
            <summary>
            Deletes the specified release template.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.ReleaseTemplates_GetTemplate(System.Nullable{System.Int32})">
            <summary>
            Gets the specified release template.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.ReleaseTemplates_GetTemplateByName(System.Nullable{System.Int32},System.String)">
            <summary>
            Gets the specified release template by application and name.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.ReleaseTemplates_GetTemplates(System.Nullable{System.Int32})">
            <summary>
            Gets the release templates for the specified application.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.RetentionPolicies_BeginPurge(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Marks the start of a new purge.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.RetentionPolicies_CreateOrUpdateRetentionPolicy(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{Inedo.Data.YNIndicator},System.Nullable{Inedo.Data.YNIndicator},System.Nullable{Inedo.Data.YNIndicator},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{Inedo.Data.YNIndicator},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{Inedo.Data.YNIndicator},System.Nullable{System.Int32})">
            <summary>
            Creates or updates a retention policy.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.RetentionPolicies_DeleteRetentionPolicy(System.Nullable{System.Int32})">
            <summary>
            Deletes a retention policy.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.RetentionPolicies_EndPurge(System.Nullable{System.Int32},System.Byte[])">
            <summary>
            Marks the end of a purge.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.RetentionPolicies_GetArtifactsToPurge(System.Nullable{System.Int32})">
            <summary>
            Gets the artifacts for the specified retention policy that can be purged.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.RetentionPolicies_GetBuildCount(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets the total number of builds in the specified scope.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.RetentionPolicies_GetBuildsToPurge(System.Nullable{System.Int32})">
            <summary>
            Gets the builds for the specified retention policy that can be purged.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.RetentionPolicies_GetBuildsWithLogsToPurge(System.Nullable{System.Int32})">
            <summary>
            Gets only the builds that have logs remaining for the specified retention policy that can be purged.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.RetentionPolicies_GetPurgeHistory(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets the purge history for one or all retention policies.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.RetentionPolicies_GetPurgeLog(System.Nullable{System.Int32})">
            <summary>
            Gets the specified purge history log.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.RetentionPolicies_GetReleaseCount(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets the total number of releases in the specified scope.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.RetentionPolicies_GetReleasesToPurge(System.Nullable{System.Int32})">
            <summary>
            Gets the releases for the specified retention policy that can be purged.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.RetentionPolicies_GetRetentionPolicies(System.String)">
            <summary>
            Gets all of the retention policies.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.RetentionPolicies_GetRetentionPolicy(System.Nullable{System.Int32})">
            <summary>
            Gets the specified retention policy.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.RetentionPolicies_PurgeNow(System.Nullable{System.Int32})">
            <summary>
            Marks a retention policy as ready to run immediately.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.ScriptAssets_CreateOrUpdateScript(System.String,System.Nullable{System.Int32},System.Byte[],System.Nullable{System.Int32})">
            <summary>
            Creates a new script or updates an existing one.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.ScriptAssets_DeleteScript(System.Nullable{System.Int32})">
            <summary>
            Deletes a script.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.ScriptAssets_GetScript(System.Nullable{System.Int32})">
            <summary>
            Gets the script with the specified ID.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.ScriptAssets_GetScriptByName(System.String,System.Nullable{System.Int32})">
            <summary>
            Gets the script with the specified name, searching from the specified application.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.ScriptAssets_GetScripts(System.Nullable{System.Int32})">
            <summary>
            Gets the scripts which are visible to the specified application.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Scripts_CreateOrUpdateParameter(System.Nullable{System.Int32},System.String,System.String,System.String,System.String)">
            <summary>
            Creates a new script parameter or updates an existing one.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Scripts_CreateOrUpdateScript(System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{Inedo.Data.YNIndicator},System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Creates a new script or updates an existing one.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Scripts_CreateOrUpdateVariable(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Creates a new script variable or updates an existing one.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Scripts_CreateVersion(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Byte[])">
            <summary>
            Creates a new version of a script.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Scripts_DeleteParameter(System.Nullable{System.Int32},System.String)">
            <summary>
            Deletes a script parameter.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Scripts_DeleteScript(System.Nullable{System.Int32})">
            <summary>
            Permanently deletes a script.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Scripts_DeleteVariable(System.Nullable{System.Int32},System.String)">
            <summary>
            Deletes a script variable.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Scripts_GetScript(System.Nullable{System.Int32})">
            <summary>
            Gets a script and all of its associated information.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Scripts_GetScripts(System.String,System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Gets all of the scripts in the system, optionally filtered by type code.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Scripts_GetScriptTypeUsage">
            <summary>
            Gets usage data for the script types in the database.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Security_AddNamedUser(System.String)">
            <summary>
            Assigns the specified user as a named user with the specified user class type
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Security_AddPrivilege(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Grants or denies the specified principal the ability to perform a certain role
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Security_CreateOrUpdateRole(System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Creates or updates a role.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Security_DeleteRole(System.Nullable{System.Int32})">
            <summary>
            Deletes the specified role from the system
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Security_GetNamedUser(System.String)">
            <summary>
            Gets the specified named user
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Security_GetNamedUsers">
            <summary>
            Gets a list of the named users in the system
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Security_GetOrAddAnonymousRole(System.String,System.Nullable{System.Int32})">
            <summary>
            Gets an anonymous role containing the specified tasks, creating one if necessary.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Security_GetPrivileges(System.Nullable{System.Int32},System.String)">
            <summary>
            Gets a list of privileges assigned in the system
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Security_GetRole(System.Nullable{System.Int32})">
            <summary>
            Gets the specified role, along with all the tasks that comprise the role.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Security_GetRoles(System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Gets all the roles in the system, along with all the tasks comprising each role.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Security_GetTasks">
            <summary>
            Gets all of the tasks in the system.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Security_RemoveNamedUser(System.String)">
            <summary>
            Removes the specified user as a named user
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Security_RemovePrivilege(System.Nullable{System.Int32})">
            <summary>
            Deletes a privilege from the system.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Security_UserIsNamed(System.String,System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Determines whether or not a user is a named user in the system
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.ServerRoles_CreateOrUpdateServerRole(System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Creates or updates a server role.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.ServerRoles_DeleteServerRole(System.Nullable{System.Int32})">
            <summary>
            Deletes the specified server and its configurations.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.ServerRoles_GetServerRole(System.Nullable{System.Int32})">
            <summary>
            Gets the specified server role.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.ServerRoles_GetServerRoles">
            <summary>
            Gets all the servers roles in the system.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.ServerRoles_GetServerRolesEnvironments(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets all the server role and environment relations that match the specified criteria.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.ServerRoles_GetServerRoleServers(System.Nullable{System.Int32})">
            <summary>
            Gets all the server role servers for a specific role, or all the roles in the system.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.ServerRoles_SearchServerRoles(System.Nullable{System.Int32})">
            <summary>
            Searches servers roles in the system.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Servers_CreateOrUpdateServer(System.String,System.String,System.Nullable{Inedo.Data.YNIndicator},System.String,System.Nullable{Inedo.Data.YNIndicator},System.String,System.String,System.String,System.Nullable{Inedo.Data.YNIndicator},System.Nullable{System.Int32})">
            <summary>
            Creates a new server, or updates an existing one.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Servers_DeleteServer(System.Nullable{System.Int32})">
            <summary>
            Deletes a server.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Servers_GetServer(System.Nullable{System.Int32})">
            <summary>
            Gets the details of a specific server and its environments.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Servers_GetServerLogs(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets the logs associated with the specified server.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Servers_GetServers(System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Gets all the servers in the system.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Servers_GetServersInGroup(System.Nullable{System.Int32},System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Gets all the servers in a specified server group.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Servers_SearchServers(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets all the servers specified by the filter, as well as their associated environments and roles.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Servers_UpdateServerStatus(System.Nullable{System.Int32},System.String)">
            <summary>
            Stored procedure for internal use only.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.UserConfiguration_GetUserConfiguration(System.String)">
            <summary>
            Gets the a complete list of user configuration settings
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.UserConfiguration_GetValue(System.String,System.String,System.String)">
            <summary>
            Gets the specified user configuration value
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.UserConfiguration_SetValue(System.String,System.String,System.String)">
            <summary>
            Sets a user configuration value
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.UserDirectories_CreateOrUpdateDirectory(System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Creates a new user directory or updates an existing one.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.UserDirectories_GetDirectories">
            <summary>
            Gets all of the user directories.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Users_CreateOrUpdateGroup(System.String,System.String)">
            <summary>
            Creates a new user group in the system
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Users_CreateOrUpdateUser(System.String,System.String,System.String,System.String,System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Creates a new user in the system or updates an existing one.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Users_DeleteGroup(System.String)">
            <summary>
            Deletes a user group from the system, but does not delete the users who belong to the group
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Users_DeleteUser(System.String)">
            <summary>
            Deletes a user from the system
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Users_GetGroups">
            <summary>
            Gets a list of user groups in the system
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Users_GetUser(System.String)">
            <summary>
            Gets the details of the specified user, and a list of all the groups the user belongs to
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Users_GetUsers">
            <summary>
            Gets all the users in the system, along with all group membership information.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Users_GetUsersInGroup(System.String)">
            <summary>
            Gets a list of users in the specified group
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Users_SearchGroups(System.String,System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Gets a specific group by name, or if a wildcard search is performed, a group whose name starts with the specified name
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Users_SearchUsers(System.String,System.String,System.String,System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Gets the specified user, or searchs for a user whose name starts with any of the specified criteria
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Users_SetPassword(System.String,System.Byte[],System.Byte[],System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Stored procedure for internal use only.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Users_ValidateLogin(System.String,System.String,System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Validates the password of a specified user
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Variables_CreateOrUpdatePackageVariable(System.Nullable{System.Int32},System.String,System.String,System.Byte[],System.Nullable{Inedo.Data.YNIndicator},System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Creates a new package variable or sets an existing release package variable's value.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Variables_CreateOrUpdateReleaseVariable(System.Nullable{System.Int32},System.String,System.String,System.Byte[],System.Nullable{Inedo.Data.YNIndicator},System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Creates a new release variable or sets an existing release variable's value.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Variables_CreateOrUpdateVariable(System.String,System.String,System.Byte[],System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{Inedo.Data.YNIndicator},System.Nullable{Inedo.Data.YNIndicator},System.Nullable{System.Int32})">
            <summary>
            Creates a new variable or sets an existing variable's value.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Variables_CreateOrUpdateVariableDeclaration(System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{Inedo.Data.YNIndicator},System.String,System.String,System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Creates a new variable declaration or updates an existing one.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Variables_CreateOrUpdateVariableDefinition(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Creates a new variable definition or updates an existing one.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Variables_DeletePackageVariable(System.Nullable{System.Int32},System.String)">
            <summary>
            Deletes a release package variable.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Variables_DeleteReleaseVariable(System.Nullable{System.Int32},System.String)">
            <summary>
            Deletes a release variable.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Variables_DeleteVariable(System.Nullable{System.Int32})">
            <summary>
            Deletes a variable.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Variables_DeleteVariableDeclaration(System.Nullable{System.Int32})">
            <summary>
            Deletes a variable declaration.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Variables_DeleteVariableDefinition(System.Nullable{System.Int32})">
            <summary>
            Deletes a variable definition
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Variables_GetAllVariableDefinitions(System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Gets all the variable definitions in the system.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Variables_GetPackageVariables(System.Nullable{System.Int32})">
            <summary>
            Gets the package variables for a specific release package.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Variables_GetReleaseVariables(System.Nullable{System.Int32})">
            <summary>
            Gets the release variables for a specific release.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Variables_GetSystemVariableDefinitions">
            <summary>
            Gets the variable definitions for system-scoped variables.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Variables_GetVariable(System.Nullable{System.Int32})">
            <summary>
            Gets a variable from a specified id.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Variables_GetVariableDeclaration(System.Nullable{System.Int32})">
            <summary>
            Gets the variable declaration in the system that has the specified ID.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Variables_GetVariableDeclarations(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Gets the variable declarations in the system that are defined in the specified scope.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Variables_GetVariableDefinition(System.Nullable{System.Int32})">
            <summary>
            Gets the specified variable definition.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Variables_GetVariableDefinitions(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets the variable definitions in the system that are defined in the specified scope
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Variables_GetVariables">
            <summary>
            Gets all variables.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Variables_GetVariablesAccessibleFromScope(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{Inedo.Data.YNIndicator},System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Gets the variables that are defined in any of the specified scopes.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Variables_GetVariablesForScope(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets the variables that are defined only in the specified scope.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.DB.Variables_GetVariableValues(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets the variable values for the specified scope.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.Domains">
            <summary>
            Contains valid values for various discrete domains.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.Domains.ExecutionRunState">
            <summary>
            Represents the running state of an execution.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.Domains.ExecutionStatus">
            <summary>
            Represents the status of an execution; that is, whether it's currently successful or not.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.Domains.ExecutionMode">
            <summary>
            Represents the mode of an execution.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Actions.ActionBase">
            <summary>
            Represents the base class for all Actions.
            </summary>
            <remarks>
            It is normally not necessary to inherit <see cref="T:Inedo.BuildMaster.Extensibility.Actions.ActionBase"/> directly. A direct subclass
            will only be able to execute on the BuildMaster server and not on an Agent without
            explicit remoting calls. In most cases, you should inherit <see cref="T:Inedo.BuildMaster.Extensibility.Actions.RemoteActionBase"/> or
            <see cref="T:Inedo.BuildMaster.Extensibility.Actions.AgentBasedActionBase"/> instead.
            </remarks>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.ActionBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Actions.ActionBase"/> class.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.ActionBase.Timeout">
            <summary>
            Gets the number of seconds the action should execute before failing.
            </summary>
            <remarks>
            When 0, timeout is infinite.
            </remarks>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.ActionBase.IsExecuting">
            <summary>
            Gets a value indicating whether the Action is in the primary stage
            (i.e. <see cref="M:Inedo.BuildMaster.Extensibility.Actions.ActionBase.Execute"/>) of execution.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.ActionBase.ResumeNextOnError">
            <summary>
            Gets a value indicating whether the plan should continue executing even if this Action
            throws an exception or logs an error.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.ActionBase.LogErrorsAsWarnings">
            <summary>
            Gets a value indicating whether errors will be logged as warnings.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.ActionBase.Context">
            <summary>
            Gets the action context.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.ActionBase.Execute">
            <summary>
            Executes the action.
            </summary>
            <remarks>
            This method is always called on the BuildMaster server.
            </remarks>
        </member>
        <member name="E:Inedo.BuildMaster.Extensibility.Actions.ActionBase.BeforeExecute">
            <summary>
            Raised before the <see cref="M:Inedo.BuildMaster.Extensibility.Actions.ActionBase.Execute"/> method is invoked.
            </summary>
        </member>
        <member name="E:Inedo.BuildMaster.Extensibility.Actions.ActionBase.LogReceived">
            <summary>
            Raised when a log message has been received.
            </summary>
        </member>
        <member name="E:Inedo.BuildMaster.Extensibility.Actions.ActionBase.AfterExecute">
            <summary>
            Raised after the <see cref="M:Inedo.BuildMaster.Extensibility.Actions.ActionBase.Execute"/> method has returned.
            </summary>
        </member>
        <member name="E:Inedo.BuildMaster.Extensibility.Actions.ActionBase.MessageLogged">
            <summary>
            Occurs when a message is logged.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.ActionBase.GetActionDescription">
            <summary>
            Returns a description of the current configuration of the action.
            </summary>
            <returns>Description of the action's current configuration.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.ActionBase.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the action.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the action.
            </returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.ActionBase.HasConfigurerSettings">
            <summary>
            Returns a value indicating whether the action uses one or more settings in its
            extension configurer.
            </summary>
            <returns>True if the action uses at least one configurer settings; otherwise false.</returns>
            <remarks>
            Unless overridden by an action, this method returns true if the extension has a configurer
            regardless of whether it actually uses the configurer.
            </remarks>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.ActionBase.IsConfigurerSettingRequired">
            <summary>
            Returns a value indicating whether the extension's configurer currently needs to be
            configured.
            </summary>
            <returns>True if configurer requires configuration; otherwise false.</returns>
            <remarks>
            Unless overridden by an action, this method always returns false.
            </remarks>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.ActionBase.Log(Inedo.Diagnostics.MessageLevel,System.String)">
            <summary>
            Writes the specified message to the Action's log.
            </summary>
            <param name="logLevel">Log level of the message.</param>
            <param name="message">Message to log.</param>
            <remarks>
            Instead of calling <see cref="M:Inedo.BuildMaster.Extensibility.Actions.ActionBase.Log(Inedo.Diagnostics.MessageLevel,System.String)"/> directly, it is often more convenient
            to call the more specific <see cref="M:Inedo.BuildMaster.Extensibility.Actions.ActionBase.LogDebug(System.String,System.Object[])"/>,
            <see cref="M:Inedo.BuildMaster.Extensibility.Actions.ActionBase.LogError(System.String,System.Object[])"/>, <see cref="M:Inedo.BuildMaster.Extensibility.Actions.ActionBase.LogInformation(System.String,System.Object[])"/>,
            or <see cref="M:Inedo.BuildMaster.Extensibility.Actions.ActionBase.LogWarning(System.String,System.Object[])"/> method.
            </remarks>
            <seealso cref="M:Inedo.BuildMaster.Extensibility.Actions.ActionBase.LogDebug(System.String,System.Object[])"/>
            <seealso cref="M:Inedo.BuildMaster.Extensibility.Actions.ActionBase.LogInformation(System.String,System.Object[])"/>
            <seealso cref="M:Inedo.BuildMaster.Extensibility.Actions.ActionBase.LogWarning(System.String,System.Object[])"/>
            <seealso cref="M:Inedo.BuildMaster.Extensibility.Actions.ActionBase.LogError(System.String,System.Object[])"/>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.ActionBase.LogDebug(System.String)">
            <summary>
            Logs the specified message to the Action's log with a Debug log level.
            </summary>
            <param name="message">Message to log.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.ActionBase.LogDebug(System.String,System.Object[])">
            <summary>
            Logs the specified message to the Action's log with a Debug log level.
            </summary>
            <param name="messageFmt">Message to log as a composite format string.</param>
            <param name="args">Arguments for the composite format string.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.ActionBase.LogError(System.String)">
            <summary>
            Logs the specified message to the Action's log with an Error log level.
            </summary>
            <param name="message">Message to log.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.ActionBase.LogError(System.String,System.Object[])">
            <summary>
            Logs the specified message to the Action's log with an Error log level.
            </summary>
            <param name="messageFmt">Message to log as a composite format string.</param>
            <param name="args">Arguments for the composite format string.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.ActionBase.LogInformation(System.String)">
            <summary>
            Logs the specified message to the Action's log with an Information log level.
            </summary>
            <param name="message">Message to log.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.ActionBase.LogInformation(System.String,System.Object[])">
            <summary>
            Logs the specified message to the Action's log with an Information log level.
            </summary>
            <param name="messageFmt">Message to log as a composite format string.</param>
            <param name="args">Arguments for the composite format string.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.ActionBase.LogWarning(System.String)">
            <summary>
            Logs the specified message to the Action's log with a Warning log level.
            </summary>
            <param name="message">Message to log.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.ActionBase.LogWarning(System.String,System.Object[])">
            <summary>
            Logs the specified message to the Action's log with a Warning log level.
            </summary>
            <param name="messageFmt">Message to log as a composite format string.</param>
            <param name="args">Arguments for the composite format string.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.ActionBase.GetExtensionConfigurer">
            <summary>
            Gets the <see cref="T:Inedo.BuildMaster.Extensibility.Configurers.Extension.ExtensionConfigurerBase"/> associated with the action.
            </summary>
            <returns>The extension configurer.</returns>
            <remarks>
                <para>
                    When an <see cref="T:Inedo.BuildMaster.Extensibility.Configurers.Extension.ExtensionConfigurerBase"/> is associated with this assembly, 
                    this will return the first item below that is available:
                </para>
                <list type="number">
                    <item>
                        <description>The configuration associated with the profile selected in the deployment plan.</description>
                    </item>
                    <item>
                        <description>The global configuration.</description>
                    </item>
                    <item>
                        <description>An instance with default values.</description>
                    </item>
                </list>
            </remarks>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.ActionBase.ThrowIfCanceledOrTimeoutExpired">
            <summary>
            Throws a <see cref="T:Inedo.BuildMaster.Extensibility.Actions.ActionTimeoutException"/> if the action has been executing for at least
            <see cref="P:Timeout"/> seconds or throws a <see cref="T:Inedo.BuildMaster.Extensibility.Actions.ActionCanceledException"/> if the
            action has been canceled.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.ActionBase.OnBeforeExecute(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Inedo.BuildMaster.Extensibility.Actions.ActionBase.BeforeExecute"/> event.
            </summary>
            <param name="e">Unused <see cref="T:System.EventArgs"/> instance.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.ActionBase.OnLogReceived(Inedo.BuildMaster.Extensibility.Actions.LogReceivedEventArgs)">
            <summary>
            Raises the <see cref="E:Inedo.BuildMaster.Extensibility.Actions.ActionBase.LogReceived"/> event.
            </summary>
            <param name="e">Contains information about the log message.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.ActionBase.OnAfterExecute(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Inedo.BuildMaster.Extensibility.Actions.ActionBase.AfterExecute"/> event.
            </summary>
            <param name="e">Unused <see cref="T:System.EventArgs"/> instance.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.ActionBase.CreateActionLogMessageDelegator">
            <summary>
            Creates the action log message delegator used to allow external resources to write to the action log.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Actions.ActionCanceledException">
            <summary>
            Thrown when a <see cref="T:Inedo.BuildMaster.Extensibility.Actions.ActionBase"/> has been canceled.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.ActionCanceledException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Actions.ActionCanceledException"/> class.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.ActionCanceledException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Actions.ActionCanceledException"/> class.
            </summary>
            <param name="info">The serialization info.</param>
            <param name="context">The streaming context.</param>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Actions.ActionExecuterBase">
            <summary>
            Helper class used to execute an action.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.ActionExecuterBase.#ctor(Inedo.BuildMaster.Extensibility.Actions.ActionBase,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Actions.ActionExecuterBase" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="extensionConfigurationId">The extension configuration id.</param>
            <exception cref="T:System.ArgumentNullException">action</exception>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.ActionExecuterBase.Action">
            <summary>
            Gets the underlying action associated with the executer.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.ActionExecuterBase.ExtensionConfigurationId">
            <summary>
            Gets the extension configuration id.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.ActionExecuterBase.Log(Inedo.Diagnostics.MessageLevel,System.String)">
            <summary>
            Writes the specified message to the action's log.
            </summary>
            <param name="logLevel">Log level of the message.</param>
            <param name="message">Message to log.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.ActionExecuterBase.GetExecutionContext">
            <summary>
            When implemented in a derived class, creates the <see cref="T:Inedo.BuildMaster.Extensibility.Actions.IActionExecutionContext"/> used in the
            <see cref="M:Inedo.BuildMaster.Extensibility.Actions.ActionExecuterBase.ExecuteAction(System.Boolean,System.Boolean)"/> method.
            </summary>
            <returns>Instance of <see cref="T:Inedo.BuildMaster.Extensibility.Actions.IActionExecutionContext"/>.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.ActionExecuterBase.GetExtensionConfigurer">
            <summary>
            Returns the <see cref="T:Inedo.BuildMaster.Extensibility.Configurers.Extension.ExtensionConfigurerBase" /> used internally by
            the <see cref="T:Inedo.BuildMaster.Extensibility.Actions.ActionBase" /> when executed within the <see cref="M:Inedo.BuildMaster.Extensibility.Actions.ActionExecuterBase.ExecuteAction(System.Boolean,System.Boolean)" /> method, or null
            if <see cref="T:Inedo.BuildMaster.Extensibility.Configurers.Extension.ExtensionConfigurerBase" /> is used by the <see cref="T:Inedo.BuildMaster.Extensibility.Actions.ActionBase" />.
            </summary>
            <returns>Instance of <see cref="T:Inedo.BuildMaster.Extensibility.Configurers.Extension.ExtensionConfigurerBase" />, or null.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.ActionExecuterBase.ExecuteAction(System.Boolean,System.Boolean)">
            <summary>
            Executes the action.
            </summary>
            <param name="resumeOnError">Value indicating whether exeuction should continue if there is an error.</param>
            <param name="logErrorsAsWarnings">Value indicating whether errors should be logged as warnings.</param>
            <returns>Value indicating whether the execution was successful.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.ActionExecuterBase.Dispose">
            <summary>
            Releases resources used by this instance.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.ActionExecuterBase.Dispose(System.Boolean)">
            <summary>
            Releases resources used by this instance.
            </summary>
            <param name="disposing">Value indicating whether managed resources should be disposed.</param>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Actions.ConvertibleToOperationAttribute">
            <summary>
            Applied to a <see cref="T:Inedo.BuildMaster.Extensibility.Actions.ActionBase"/> to indicate that it can be
            converted to a <see cref="T:Inedo.BuildMaster.Extensibility.Operations.Operation"/>.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.ConvertibleToOperationAttribute.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Actions.ConvertibleToOperationAttribute"/> class.
            </summary>
            <param name="converterType">The converter type which implements <see cref="T:Inedo.BuildMaster.Extensibility.Operations.IActionOperationConverter`2"/>.</param>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.ConvertibleToOperationAttribute.ConverterType">
            <summary>
            Gets the type of the action converter.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Actions.DualAgentBasedActionBase">
            <summary>
            The base class for actions which require a source and target agent.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.DualAgentBasedActionBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Actions.DualAgentBasedActionBase"/> class.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.DualAgentBasedActionBase.Context">
            <summary>
            Gets the action context.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Actions.IActionExecutionContext">
            <summary>
            Provides information about the current execution of an action.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.IActionExecutionContext.ExecutionId">
            <summary>
            Gets the ID of the execution in which the plan is running.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.IActionExecutionContext.ExecutionPlanActionId">
            <summary>
            Gets the ID of the plan that the Action is executing in.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.IActionExecutionContext.ApplicationId">
            <summary>
            Gets the ID of the application which contains the executing plan.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.IActionExecutionContext.ApplicationGroupId">
            <summary>
            Gets the ID of the application group which contains the executing plan.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.IActionExecutionContext.DeployableId">
            <summary>
            Gets the ID of the deployable associated with the executing plan.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.IActionExecutionContext.EnvironmentId">
            <summary>
            Gets the ID of the environment associated with the executing plan.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.IActionExecutionContext.ReleaseNumber">
            <summary>
            Gets the release number of the application which
            contains the executing plan.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.IActionExecutionContext.BuildNumber">
            <summary>
            Gets the build number of the application which
            contains the executing plan.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.IActionExecutionContext.NumericReleaseNumber">
            <summary>
            Gets the numeric representation of the release number of
            the application which contains the executing plan.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.IActionExecutionContext.PromotionId">
            <summary>
            Gets the promotion ID.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.IActionExecutionContext.Variables">
            <summary>
            Gets a collection of variable names and values.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.IActionExecutionContext.CancellationToken">
            <summary>
            Gets the action cancellation token.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Actions.ActionTimeoutException">
            <summary>
            Thrown when a <see cref="T:Inedo.BuildMaster.Extensibility.Actions.ActionBase"/> has timed out.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.ActionTimeoutException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Actions.ActionTimeoutException"/> class.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.ActionTimeoutException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Actions.ActionTimeoutException"/> class.
            </summary>
            <param name="info">The serialization info.</param>
            <param name="context">The streaming context.</param>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Actions.AgentBasedActionBase">
            <summary>
            The base class for actions which execute on an agent.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.AgentBasedActionBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Actions.AgentBasedActionBase"/> class.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.AgentBasedActionBase.OverriddenWorkingDirectory">
            <summary>
            Gets or sets the Working Directory override.
            </summary>
            <remarks>
            When null or string.Empty, the default Working Directory is used.
            </remarks>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.AgentBasedActionBase.OverriddenSourceDirectory">
            <summary>
            Gets or sets the Source Directory override.
            </summary>
            <remarks>
            When null or string.Empty, the default Source Directory is used.
            </remarks>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.AgentBasedActionBase.OverriddenTargetDirectory">
            <summary>
            Gets or sets the Target Directory override.
            </summary>
            <remarks>
            When null or string.Empty, the default Target Directory is used.
            </remarks>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.AgentBasedActionBase.Context">
            <summary>
            Gets the action context.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.AgentBasedActionBase.LogProcessStandardErrorAsError">
            <summary>
            Gets a value indicating whether the executed process's Standard Error should be logged 
            with a <see cref="T:Inedo.Diagnostics.MessageLevel"/> of <see cref="F:Inedo.Diagnostics.MessageLevel.Error"/>
            or <see cref="F:Inedo.Diagnostics.MessageLevel.Information"/>.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.AgentBasedActionBase.AddBuildMasterVariablesAsEnvironmentVariables">
            <summary>
            Gets a value indicating whether the new process environment should contain all of the
            variables in the current execution context.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.AgentBasedActionBase.LogProcessErrorData(System.String)">
            <summary>
            Invoked when data is written to the process's Standard Error output.
            </summary>
            <param name="data">Data written to Standard Error.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.AgentBasedActionBase.LogProcessOutputData(System.String)">
            <summary>
            Invoked when data is written to the process's Standard Out output.
            </summary>
            <param name="data">Data written to Standard Out.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.AgentBasedActionBase.ExecuteCommandLine(Inedo.Agents.RemoteProcessStartInfo)">
            <summary>
            Executes a process on the associated agent, blocking until the process terminates,
            the action is canceled, or the action timeout is reached.
            </summary>
            <param name="startInfo">Process initialization information.</param>
            <returns>Exit code of the process.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.AgentBasedActionBase.ExecuteCommandLine(System.String)">
            <summary>
            Executes a process on the associated agent, blocking until the process terminates,
            the action is canceled, or the action timeout is reached.
            </summary>
            <param name="fileName">Full path of the process to start.</param>
            <returns>Exit code of the process.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.AgentBasedActionBase.ExecuteCommandLine(System.String,System.String)">
            <summary>
            Executes a process on the associated agent, blocking until the process terminates,
            the action is canceled, or the action timeout is reached.
            </summary>
            <param name="fileName">Full path of the process to start.</param>
            <param name="arguments">Arguments to pass to the process.</param>
            <returns>Exit code of the process.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.AgentBasedActionBase.ExecuteCommandLine(System.String,System.String,System.String)">
            <summary>
            Executes a process on the associated agent, blocking until the process terminates,
            the action is canceled, or the action timeout is reached.
            </summary>
            <param name="fileName">Full path of the process to start.</param>
            <param name="arguments">Arguments to pass to the process.</param>
            <param name="workingDirectory">Initial working directory of the process. If not specified, the source directory is used.</param>
            <returns>Exit code of the process.</returns>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Actions.IActionCancellationToken">
            <summary>
            Represents a token which an action uses to determine if it was canceled.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.IActionCancellationToken.IsCancellationRequested">
            <summary>
            Gets a value indicating whether cancellation has been requested.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.IActionCancellationToken.WaitHandle">
            <summary>
            Gets a <see cref="T:WaitHandle"/> that is signaled when the token is canceled.
            </summary>
            <remarks>
            Accessing this property causes a <see cref="T:WaitHandle"/> to be instantiated. It is preferable to only use this property when necessary.
            </remarks>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.IActionCancellationToken.ThrowIfCancellationRequested">
            <summary>
            Throws a <see cref="T:ActionCanceledException"/> if this token has had cancellation requested.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Actions.IAgentBasedActionExecutionContext">
            <summary>
            Provides information about the current execution of an agent-based action.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.IAgentBasedActionExecutionContext.ServerId">
            <summary>
            Gets the server ID which the action is executing on.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.IAgentBasedActionExecutionContext.Agent">
            <summary>
            Gets the <see cref="T:Inedo.BuildMaster.Extensibility.Agents.BuildMasterAgent"/> which the action executes on.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.IAgentBasedActionExecutionContext.TempDirectory">
            <summary>
            Gets the temporary directory used for file operations.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.IAgentBasedActionExecutionContext.SourceDirectory">
            <summary>
            Gets the source directory used for file operations.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.IAgentBasedActionExecutionContext.TargetDirectory">
            <summary>
            Gets the target directory used for file operations.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.IAgentBasedActionExecutionContext.BaseWorkingDirectory">
            <summary>
            Gets the base working directory for the agent.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.IAgentBasedActionExecutionContext.ApplicationDirectory">
            <summary>
            Gets the application working directory for the agent.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Actions.IDualAgentBasedActionExecutionContext">
            <summary>
            Provides information about the current execution of a dual-agent-based action.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.IDualAgentBasedActionExecutionContext.SourceServerId">
            <summary>
            Gets the source server ID.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.IDualAgentBasedActionExecutionContext.TargetServerId">
            <summary>
            Gets the target server ID.
            </summary>
            <remarks>
            This may be a server group.
            </remarks>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.IDualAgentBasedActionExecutionContext.SourceAgent">
            <summary>
            Gets the <see cref="T:Inedo.BuildMaster.Extensibility.Agents.BuildMasterAgent"/> for the source server.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Actions.IssueTracking.IssueTrackingActionBase">
            <summary>
            Base class for an action that is to be used with a <see cref="T:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IssueTrackingProviderBase"/>.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.IssueTracking.IssueTrackingActionBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Actions.IssueTracking.IssueTrackingActionBase"/> class.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.IssueTracking.IssueTrackingActionBase.Execute">
            <summary>
            Executes the action.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.IssueTracking.IssueTrackingActionBase.ExecuteForConnection(Inedo.BuildMaster.Extensibility.IssueTrackerConnections.IssueTrackerConnectionBase,Inedo.BuildMaster.Extensibility.IssueTrackerConnections.IssueTrackerConnectionContext)">
            <summary>
            Invoked to execute the action for a <see cref="T:Inedo.BuildMaster.Extensibility.IssueTrackerConnections.IssueTrackerConnectionBase"/>.
            </summary>
            <param name="connection">The connection.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.IssueTracking.IssueTrackingActionBase.ExecuteForLegacyProvider(Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IssueTrackingProviderBase)">
            <summary>
            Invoked to execute the action for a legacy <see cref="T:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IssueTrackingProviderBase"/>.
            </summary>
            <param name="provider">The provider.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.IssueTracking.IssueTrackingActionBase.ExecuteForBuildMaster">
            <summary>
            Invoked to execute the action for the BuildMaster issue tracker.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Actions.IActionNameProvider">
            <summary>
            Represents an <see cref="T:Inedo.BuildMaster.Extensibility.Actions.ActionBase"/> that can provide an alternate name once instantiated.
            </summary>
            <remarks>
            The <see cref="P:Inedo.BuildMaster.Extensibility.Actions.IActionNameProvider.ActionName"/> property will be displayed instead of the <see cref="P:System.ComponentModel.DisplayNameAttribute.DisplayName"/> property;
            this is entirely dependent on the consumer, and may not occur all the time.
            </remarks>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.IActionNameProvider.ActionName">
            <summary>
            Gets the name of the Action that will be displayed in BuildMaster.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Actions.ActionLogMessageDelegator">
            <summary>
            An object that allows external resources to write to an action's log.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.ActionLogMessageDelegator.#ctor(System.Action{Inedo.Diagnostics.MessageLevel,System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Actions.ActionLogMessageDelegator"/> class.
            </summary>
            <param name="logMethod">The log method.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="logMethod"/> is null.</exception>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.ActionLogMessageDelegator.Log(Inedo.Diagnostics.MessageLevel,System.String)">
            <summary>
            Writes the specified message to the delegate log.
            </summary>
            <param name="logLevel">Log level of the message.</param>
            <param name="message">Message to log.</param>
            <remarks>
            Instead of calling <see cref="M:Inedo.BuildMaster.Extensibility.Actions.ActionLogMessageDelegator.Log(Inedo.Diagnostics.MessageLevel,System.String)"/> directly, it is often more convenient
            to call the more specific <see cref="M:Inedo.BuildMaster.Extensibility.Actions.ActionLogMessageDelegator.LogDebug(System.String,System.Object[])"/>,
            <see cref="M:Inedo.BuildMaster.Extensibility.Actions.ActionLogMessageDelegator.LogError(System.String,System.Object[])"/>, <see cref="M:Inedo.BuildMaster.Extensibility.Actions.ActionLogMessageDelegator.LogInformation(System.String,System.Object[])"/>,
            or <see cref="M:Inedo.BuildMaster.Extensibility.Actions.ActionLogMessageDelegator.LogWarning(System.String,System.Object[])"/> method.
            </remarks>
            <seealso cref="M:Inedo.BuildMaster.Extensibility.Actions.ActionLogMessageDelegator.LogDebug(System.String,System.Object[])"/>
            <seealso cref="M:Inedo.BuildMaster.Extensibility.Actions.ActionLogMessageDelegator.LogInformation(System.String,System.Object[])"/>
            <seealso cref="M:Inedo.BuildMaster.Extensibility.Actions.ActionLogMessageDelegator.LogWarning(System.String,System.Object[])"/>
            <seealso cref="M:Inedo.BuildMaster.Extensibility.Actions.ActionLogMessageDelegator.LogError(System.String,System.Object[])"/>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.ActionLogMessageDelegator.LogDebug(System.String)">
            <summary>
            Logs the specified message to the delegate log with a Debug log level.
            </summary>
            <param name="message">Message to log.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.ActionLogMessageDelegator.LogDebug(System.String,System.Object[])">
            <summary>
            Logs the specified message to the delegate log with a Debug log level.
            </summary>
            <param name="messageFmt">Message to log as a composite format string.</param>
            <param name="args">Arguments for the composite format string.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.ActionLogMessageDelegator.LogError(System.String)">
            <summary>
            Logs the specified message to the delegate log with an Error log level.
            </summary>
            <param name="message">Message to log.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.ActionLogMessageDelegator.LogError(System.String,System.Object[])">
            <summary>
            Logs the specified message to the delegate log with an Error log level.
            </summary>
            <param name="messageFmt">Message to log as a composite format string.</param>
            <param name="args">Arguments for the composite format string.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.ActionLogMessageDelegator.LogInformation(System.String)">
            <summary>
            Logs the specified message to the delegate log with an Information log level.
            </summary>
            <param name="message">Message to log.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.ActionLogMessageDelegator.LogInformation(System.String,System.Object[])">
            <summary>
            Logs the specified message to the delegate log with an Information log level.
            </summary>
            <param name="messageFmt">Message to log as a composite format string.</param>
            <param name="args">Arguments for the composite format string.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.ActionLogMessageDelegator.LogWarning(System.String)">
            <summary>
            Logs the specified message to the delegate log with a Warning log level.
            </summary>
            <param name="message">Message to log.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.ActionLogMessageDelegator.LogWarning(System.String,System.Object[])">
            <summary>
            Logs the specified message to the Action's log with a Warning log level.
            </summary>
            <param name="messageFmt">Message to log as a composite format string.</param>
            <param name="args">Arguments for the composite format string.</param>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Actions.LogReceivedEventArgs">
            <summary>
            Contains information about a log message.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.LogReceivedEventArgs.#ctor(System.String,Inedo.Diagnostics.MessageLevel)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Actions.LogReceivedEventArgs"/> class.
            </summary>
            <param name="message">The message to log.</param>
            <param name="level">The message log level.</param>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.LogReceivedEventArgs.Message">
            <summary>
             Gets the message that was logged.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.LogReceivedEventArgs.LogLevel">
            <summary>
            Gets or sets the message log level.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Actions.ProviderInitializedEventArgs">
            <summary>
            Contains information about a provider in a <see cref="T:Inedo.BuildMaster.Extensibility.Actions.ProviderBasedAction"/>.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.ProviderInitializedEventArgs.Provider">
            <summary>
            Gets or sets the provider.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Actions.RemoteActionBase">
            <summary>
            The base class for Actions that can execute remotely
            on a BuildMaster Agent.
            </summary>
            <remarks>
            Inheriting from the class will allow an Action to be executed
            on any server in the BuildMaster UI. For a more specialized
            class which wraps command-line execution on a remote server,
            see <see cref="T:Inedo.BuildMaster.Extensibility.Actions.AgentBasedActionBase"/>. For an Action that
            will only execute on the BuildMaster server, see <see cref="T:Inedo.BuildMaster.Extensibility.Actions.ActionBase"/>.
            </remarks>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.RemoteActionBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Actions.RemoteActionBase"/> class.
            </summary>
        </member>
        <member name="E:Inedo.BuildMaster.Extensibility.Actions.RemoteActionBase.BeforeProcessRemoteCommand">
            <summary>
            Raised before the <see cref="M:Inedo.BuildMaster.Extensibility.Actions.RemoteActionBase.ProcessRemoteCommand(System.String,System.String[])"/> method is invoked.
            </summary>
        </member>
        <member name="E:Inedo.BuildMaster.Extensibility.Actions.RemoteActionBase.AfterProcessRemoteCommand">
            <summary>
            Raised after the <see cref="M:Inedo.BuildMaster.Extensibility.Actions.RemoteActionBase.ProcessRemoteCommand(System.String,System.String[])"/> method is invoked.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.RemoteActionBase.IsExecutingRemotely">
            <summary>
            Gets a value indicating whether the code is executing locally or on the remote agent.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.RemoteActionBase.ExecuteRemoteCommand(System.String)">
            <summary>
            Executes the specified Action-defined command against the remotely running
            agent, which is then processed by the Action-defined <see cref="M:Inedo.BuildMaster.Extensibility.Actions.RemoteActionBase.ProcessRemoteCommand(System.String,System.String[])"/>.
            </summary>
            <param name="name">Action-defined command name.</param>
            <returns>Action-defined return string.</returns>
            <remarks>
            This method is meant to be called from the <see cref="M:Inedo.BuildMaster.Extensibility.Actions.ActionBase.Execute"/> method to
            begin remote execution. Additionally, this method has been deprecated if the consuming agent
            type is anything other than the SOAP/TCP variety. The new recommended approach is to call
            Util.Agents.CreateAgentFromId(...) and cast to the appropriate interface (e.g. IFileOperationsExecuter)
            in order to perform remote actions on an agent.
            </remarks>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.RemoteActionBase.ExecuteRemoteCommand(System.String,System.String[])">
            <summary>
            Executes the specified Action-defined command with the specified Action-defined arguments
            against the remotely running
            agent, which is then processed by the Action-defined <see cref="M:Inedo.BuildMaster.Extensibility.Actions.RemoteActionBase.ProcessRemoteCommand(System.String,System.String[])"/>.
            </summary>
            <param name="name">Action-defined command name.</param>
            <param name="args">Action-defined command arguments.</param>
            <returns>Action-defined return string</returns>
            <remarks>
            This method is meant to be called from the <see cref="M:Inedo.BuildMaster.Extensibility.Actions.ActionBase.Execute"/> method to
            begin remote execution.
            </remarks>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.RemoteActionBase.ProcessRemoteCommand(System.String,System.String[])">
            <summary>
            When implemented in a derived class, processes an arbitrary command
            on the appropriate server.
            </summary>
            <param name="name">Name of command to process.</param>
            <param name="args">Optional command arguments.</param>
            <returns>Result of the command.</returns>
            <remarks>
            This method is always invoked on the remote server by the system and should
            never be called directly. To begin remote execution from the <see cref="M:Inedo.BuildMaster.Extensibility.Actions.ActionBase.Execute"/>
            method, call <see cref="M:Inedo.BuildMaster.Extensibility.Actions.RemoteActionBase.ExecuteRemoteCommand(System.String,System.String[])"/>.
            </remarks>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.RemoteActionBase.OnBeforeProcessRemoteCommand(System.EventArgs)">
            <summary>
            Raises the <see cref="E:BeforeProcessRemotecommand" /> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.RemoteActionBase.OnAfterProcessRemoteCommand(System.EventArgs)">
            <summary>
            Raises the <see cref="E:AfterProcessRemoteCommand" /> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Actions.RemoteCommandExecution.RemoteCommandExecuter">
            <summary>
            Used for the purpose of executing commands against a <see cref="T:Inedo.BuildMaster.Extensibility.Actions.RemoteActionBase"/>,
            this class provides base functionality for unpackaging and is responsible for calling
            the action's <see cref="M:Inedo.BuildMaster.Extensibility.Actions.RemoteActionBase.ProcessRemoteCommand(System.String,System.String[])"/> method.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.RemoteCommandExecution.RemoteCommandExecuter.ExecuteCommand(Inedo.BuildMaster.Extensibility.Actions.RemoteActionBase,System.String,System.String[])">
            <summary>
            Executes the command.
            </summary>
            <param name="remoteAction">The remote action.</param>
            <param name="commandName">Name of the command.</param>
            <param name="commandArgs">The command args.</param>
            <returns>The command return value.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.RemoteCommandExecution.RemoteCommandExecuter.ExecuteCommandWithoutQueue(Inedo.BuildMaster.Extensibility.Actions.RemoteActionBase,System.String,System.String[])">
            <summary>
            Executes the command.
            </summary>
            <param name="remoteAction">The remote action.</param>
            <param name="commandName">Name of the command.</param>
            <param name="commandArgs">The command args.</param>
            <returns>The command return value.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.RemoteCommandExecution.RemoteCommandExecuter.CancelExecution(System.Int32)">
            <summary>
            Cancels the execution.
            </summary>
            <param name="executionId">The execution identifier.</param>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Actions.CommandLineActionBase">
            <summary>
            This class is obsolete. Use <see cref="T:Inedo.BuildMaster.Extensibility.Actions.AgentBasedActionBase"/> or <see cref="T:Inedo.BuildMaster.Extensibility.Actions.RemoteActionBase"/> instead.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.CommandLineActionBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Actions.CommandLineActionBase"/> class.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Actions.ProviderBasedAction`1">
            <summary>
            A <see cref="T:Inedo.BuildMaster.Extensibility.Actions.AgentBasedActionBase"/> which uses a <see cref="T:Inedo.BuildMaster.Extensibility.Providers.ProviderBase"/>.
            </summary>
            <typeparam name="TProvider">Type derived from <see cref="T:Inedo.BuildMaster.Extensibility.Providers.ProviderBase"/>.</typeparam>
            <remarks>
            Generally, the <see cref="M:Inedo.BuildMaster.Extensibility.Actions.ProviderBasedAction`1.ExecuteProviderBasedAction"/> method should be overridden;
            the <see cref="M:Inedo.BuildMaster.Extensibility.Actions.ProviderBasedAction`1.Execute"/> method simply checks for the <see cref="P:ProviderPropertiesAttribute.RequiresTransparentProxy"/>
            attribute and runs either <see cref="M:Inedo.BuildMaster.Extensibility.Actions.RemoteActionBase.ExecuteRemoteCommand(System.String)"/> or <see cref="M:Inedo.BuildMaster.Extensibility.Actions.ProviderBasedAction`1.ExecuteProviderBasedAction"/>.
            </remarks>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.ProviderBasedAction`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Actions.ProviderBasedAction`1"/> class.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.ProviderBasedAction`1.Provider">
            <summary>
            Gets the provider associated with the action.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.ProviderBasedAction`1.Execute">
            <summary>
            Executes the action.
            </summary>
            <remarks>
            Override this method if you want to implement different behavior for handling transparent proxying
            </remarks>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.ProviderBasedAction`1.ProcessRemoteCommand(System.String,System.String[])">
            <summary>
            When implemented in a derived class, processes an arbitrary command
            on the appropriate server.
            </summary>
            <param name="name">Name of command to process.</param>
            <param name="args">Optional command arguments.</param>
            <returns>
            Result of the command.
            </returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.ProviderBasedAction`1.ExecuteProviderBasedAction">
            <summary>
            Executes the provider based action.
            </summary>
            <remarks>
            If the corresponding <see cref="P:ProviderPropertiesAttribute.RequiresTransparentProxy"/> property is true,
            this will be invoked on the remote agent. If it is false, this will be invoked on the BuildMaster server.
            </remarks>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.ProviderBasedAction`1.OnBeforeExecute(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Inedo.BuildMaster.Extensibility.Actions.ActionBase.BeforeExecute" /> event.
            </summary>
            <param name="e">Unused <see cref="T:System.EventArgs" /> instance.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.ProviderBasedAction`1.OnBeforeProcessRemoteCommand(System.EventArgs)">
            <summary>
            Raises the <see cref="E:BeforeProcessRemotecommand" /> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs" /> instance containing the event data.</param>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Actions.ProviderBasedAction">
            <summary>
            An <see cref="T:Inedo.BuildMaster.Extensibility.Actions.AgentBasedActionBase"/> which uses a <see cref="T:Inedo.BuildMaster.Extensibility.Providers.ProviderBase"/>.
            </summary>
            <remarks>
            This class should not be inherited directly. Instead, see <see cref="T:Inedo.BuildMaster.Extensibility.Actions.ProviderBasedAction`1"/>.
            </remarks>
            <seealso cref="T:Inedo.BuildMaster.Extensibility.Actions.ProviderBasedAction`1"/>
        </member>
        <member name="E:Inedo.BuildMaster.Extensibility.Actions.ProviderBasedAction.ProviderInitialized">
            <summary>
            Occurs when the provider has been initialized.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.ProviderBasedAction.ProviderId">
            <summary>
            Gets or sets the provider ID associated with the action.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.ProviderBasedAction.ProviderName">
            <summary>
            When the <see cref="P:Inedo.BuildMaster.Extensibility.Actions.ProviderBasedAction.ProviderId"/> property is less than or equal to 0, gets or sets the 
            provider name associated with the action.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.ProviderBasedAction.GetProviderNameSafe">
            <summary>
            Gets the name of the provider
            </summary>
            <remarks>
            This will first attempt to use the <see cref="P:Inedo.BuildMaster.Extensibility.Actions.ProviderBasedAction.ProviderName"/> property, and if that's null or empty, then
            look-up the name from the database using <see cref="P:Inedo.BuildMaster.Extensibility.Actions.ProviderBasedAction.ProviderId"/>, and then "(unknown)" if that fails.
            </remarks>
            <returns>Provider name or "(unknown)"</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.ProviderBasedAction.OnProviderInitialized(Inedo.BuildMaster.Extensibility.Actions.ProviderInitializedEventArgs)">
            <summary>
            Raises the <see cref="E:ProviderInitialized" /> event.
            </summary>
            <param name="e">The <see cref="T:Inedo.BuildMaster.Extensibility.Actions.ProviderInitializedEventArgs"/> instance containing the event data.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="e"/> is null.</exception>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Actions.Reporting.ReportFormats">
            <summary>
            Represents the types of report formats for a <see cref="T:Inedo.BuildMaster.Extensibility.Actions.Reporting.ReportingActionBase"/>.
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Extensibility.Actions.Reporting.ReportFormats.Html">
            <summary>
            The report is a single HTML page.
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Extensibility.Actions.Reporting.ReportFormats.ZippedHtml">
            <summary>
            The report is one or more HTML files with associated resources.
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Extensibility.Actions.Reporting.ReportFormats.PlainText">
            <summary>
            The report is a single plain text file.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Actions.Reporting.ReportingActionBase">
            <summary>
            A <see cref="T:Inedo.BuildMaster.Extensibility.Actions.CommandLineActionBase"/> that can report results into build output.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.Reporting.ReportingActionBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Actions.Reporting.ReportingActionBase"/> class.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.Reporting.ReportingActionBase.OutputName">
            <summary>
            Gets or sets the output name of the report
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.Reporting.ReportingActionBase.ExePath">
            <summary>
            Gets or sets the application to start
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.Reporting.ReportingActionBase.Arguments">
            <summary>
            Gets or sets the command line arguments to use when running the command
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.Reporting.ReportingActionBase.SubmitReport(System.String)">
            <summary>
            Submits a string as a report in HTML.
            </summary>
            <param name="buildOutput">HTML content of report to submit.</param>
            <remarks>
            A Build Output Report may not be submitted more than once, or while a remote command is being executed.
            </remarks>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.Reporting.ReportingActionBase.SubmitReport(System.Byte[],Inedo.BuildMaster.Extensibility.Actions.Reporting.ReportFormats)">
            <summary>
            Submits arbitrary data as a report.
            </summary>
            <param name="buildOutput">Report data to submit.</param>
            <param name="format">Format of the report data.</param>
            <remarks>
            A Build Output Report may not be submitted more than once, or while a remote command is being executed.
            </remarks>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.Reporting.ReportingActionBase.ZipAndEncodeDirectory(System.String,System.String,System.String)">
            <summary>
            Zips a directory and returns a base 64 encoded string containing the resulting archive.
            </summary>
            <param name="path">Directory to zip. Files and subdirectories will be added to the archive.</param>
            <param name="defaultPage">Default or main page of the archive.</param>
            <param name="previewPage">Page to display in an iframe as a preview of the report; may be null.</param>
            <returns>Base 64 encoded string containing the zipped directory.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.Reporting.ReportingActionBase.ZipAndEncodeDirectory(System.String,System.String)">
            <summary>
            Zips a directory and returns a base 64 encoded string containing the resulting archive.
            </summary>
            <param name="path">Directory to zip. Files and subdirectories will be added to the archive.</param>
            <param name="defaultPage">Default or main page of the archive.</param>
            <returns>Base 64 encoded string containing the zipped directory.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.Reporting.ReportingActionBase.getAbsPath(System.String)">
            <summary>
            Gets the abs path.
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Actions.Scripting.ExecuteScriptActionBase`1">
            <summary>
            Base class for execute script actions.
            </summary>
            <typeparam name="TScriptType">The type of the script type.</typeparam>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.Scripting.ExecuteScriptActionBase`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Actions.Scripting.ExecuteScriptActionBase`1"/> class.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.Scripting.ExecuteScriptActionBase`1.ScriptMode">
            <summary>
            Gets or sets the mode of the action.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.Scripting.ExecuteScriptActionBase`1.ScriptData">
            <summary>
            Gets or sets the script data.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.Scripting.ExecuteScriptActionBase`1.VariableValues">
            <summary>
            Gets or sets the variable values.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.Scripting.ExecuteScriptActionBase`1.ParameterValues">
            <summary>
            Gets or sets the parameter values.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.Scripting.ExecuteScriptActionBase`1.LogResults">
            <summary>
            Gets or sets a value indicating whether to log script output.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.Scripting.ExecuteScriptActionBase`1.ActionName">
            <summary>
            Gets the name of the Action that will be displayed in BuildMaster.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.Scripting.ExecuteScriptActionBase`1.ScriptId">
            <summary>
            Gets or sets the script ID.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.Scripting.ExecuteScriptActionBase`1.ScriptFileName">
            <summary>
            Gets or sets the script file name.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.Scripting.ExecuteScriptActionBase`1.ScriptText">
            <summary>
            Gets or sets the script text.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.Scripting.ExecuteScriptActionBase`1.UseProxy">
            <summary>
            Gets a value indicating whether proxying is required.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.Scripting.ExecuteScriptActionBase`1.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
            <remarks>
            This should return a user-friendly string describing what the Action does
            and the state of its important persistent properties.
            </remarks>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.Scripting.ExecuteScriptActionBase`1.Execute">
            <summary>
            Executes the action.
            </summary>
            <remarks>
            This method is always called on the BuildMaster server.
            </remarks>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.Scripting.ExecuteScriptActionBase`1.ProcessRemoteCommand(System.String,System.String[])">
            <summary>
            When implemented in a derived class, processes an arbitrary command
            on the appropriate server.
            </summary>
            <param name="name">Name of command to process.</param>
            <param name="args">Optional command arguments.</param>
            <returns>
            Result of the command.
            </returns>
            <exception cref="T:System.ArgumentException">Invalid command.</exception>
            <remarks>
            This method is always invoked on the remote server by the system and should
            never be called directly. To begin remote execution from the <see cref="M:Inedo.BuildMaster.Extensibility.Actions.ActionBase.Execute" />
            method, call <see cref="M:Inedo.BuildMaster.Extensibility.Actions.RemoteActionBase.ExecuteRemoteCommand(System.String,System.String[])" />.
            </remarks>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.Scripting.ExecuteScriptActionBase`1.ExecuteScript(Inedo.BuildMaster.Extensibility.Scripting.ScriptExecutionContext)">
            <summary>
            Executes the script.
            </summary>
            <param name="scriptContext">The script context.</param>
            <exception cref="T:System.ArgumentNullException">scriptContext</exception>
            <exception cref="T:System.InvalidOperationException">ExecuteScript returned null.</exception>
            <exception cref="T:Inedo.BuildMaster.Extensibility.Actions.ActionTimeoutException"></exception>
            <exception cref="T:Inedo.BuildMaster.Extensibility.Actions.ActionCanceledException"></exception>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Actions.Scripting.ScriptActionMode">
            <summary>
            Indicates how a script is specified for a <see cref="T:Inedo.BuildMaster.Extensibility.Actions.Scripting.ExecuteScriptActionBase`1"/>.
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Extensibility.Actions.Scripting.ScriptActionMode.Library">
            <summary>
            The script is in the BuildMaster script library.
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Extensibility.Actions.Scripting.ScriptActionMode.FileName">
            <summary>
            The script is in a file on a server.
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Extensibility.Actions.Scripting.ScriptActionMode.Direct">
            <summary>
            The script is embedded in the action.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Actions.Scripting.ScriptArgumentConverter">
            <summary>
            Contains key value pairs.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.Scripting.ScriptArgumentConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Actions.Scripting.ScriptArgumentConverter"/> class.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Actions.Testing.UnitTestActionBase">
            <summary>
            Base class for an Action that executes unit tests.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.Testing.UnitTestActionBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Actions.Testing.UnitTestActionBase"/> class.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.Testing.UnitTestActionBase.GroupName">
            <summary>
            Gets or sets the unit test group name.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.Testing.UnitTestActionBase.ProcessRemoteCommand(System.String,System.String[])">
            <summary>
            Runs the unit tests on the appropriate server.
            </summary>
            <param name="name">Name of command to process.</param>
            <param name="args">Optional command arguments.</param>
            <returns>
            Result of the command.
            </returns>
            <remarks>
            This method should not be called directly.
            </remarks>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.Testing.UnitTestActionBase.Execute">
            <summary>
            Executes the Unit Test Action.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.Testing.UnitTestActionBase.RunTests">
            <summary>
            Runs a unit test against the target specified in the action.
            After the test is run, use the <see cref="M:RecordResult"/> method
            to save the test results to the database.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.Testing.UnitTestActionBase.RecordResult(System.String,System.Boolean,System.String,System.DateTime,System.DateTime)">
            <summary>
            Records the test result in BuildMaster.
            </summary>
            <param name="testName">The name of the file the test was run against.</param>
            <param name="testPassed">Value indicating whether the test passed.</param>
            <param name="testResult">The XML (or text) result of the test.</param>
            <param name="startTime">The time when the test was started.</param>
            <param name="endTime">The time when the test was completed.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.Testing.UnitTestActionBase.RecordResult(System.String,System.String,System.String,System.DateTime,System.DateTime)">
            <summary>
            Records the test result in BuildMaster.
            </summary>
            <param name="testName">The name of the file the test was run against.</param>
            <param name="testStatusCode">Value indicating whether the test passed (See <see cref="T:Inedo.BuildMaster.Data.Domains.TestStatusCodes"/>).</param>
            <param name="testResult">The XML (or text) result of the test.</param>
            <param name="startTime">The time when the test was started.</param>
            <param name="endTime">The time when the test was completed.</param>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Agents.ServiceRequestedEventArgs">
            <summary>
            Contains information about a service requested by an agent
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Agents.ServiceRequestedEventArgs.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Agents.ServiceRequestedEventArgs"/> class.
            </summary>
            <param name="serviceType">Type of the service.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Agents.ServiceRequestedEventArgs.ServiceType">
            <summary>
            Gets the type of the service requested
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Agents.BuildMasterAgent">
            <summary>
            The base class for all agents.
            </summary>
        </member>
        <member name="E:Inedo.BuildMaster.Extensibility.Agents.BuildMasterAgent.ServiceRequested">
            <summary>
            Occurs when a service is successfully requested
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Agents.BuildMasterAgent.GetDescription">
            <summary>
            Returns a human-friendly description of the agent's configuration.
            </summary>
            <returns>the agent description</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Agents.BuildMasterAgent.TryGetService``1">
            <summary>
            Returns the requested agent service interface if it is supported; otherwise returns null.
            </summary>
            <typeparam name="TService">Type of the requested interface.</typeparam>
            <returns>Requested agent service if it is supported; otherwise null.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Agents.BuildMasterAgent.TryGetServiceAsync``1">
            <summary>
            Returns the requested agent service interface if it is supported; otherwise returns null.
            </summary>
            <typeparam name="TService">Type of the requested interface.</typeparam>
            <returns>Requested agent service if it is supported; otherwise null.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Agents.BuildMasterAgent.GetService``1">
            <summary>
            Returns the requested agent service or throws an exception if it is not available.
            </summary>
            <typeparam name="TService">Type of the requested interface.</typeparam>
            <returns>Requested agent service.</returns>
            <exception cref="T:System.NotSupportedException">The requested interface is not supported.</exception>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Agents.BuildMasterAgent.GetServiceAsync``1">
            <summary>
            Returns the requested agent service or throws an exception if it is not available.
            </summary>
            <typeparam name="TService">Type of the requested interface.</typeparam>
            <returns>Requested agent service.</returns>
            <exception cref="T:System.NotSupportedException">The requested interface is not supported.</exception>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Agents.BuildMasterAgent.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Agents.BuildMasterAgent.OnServiceRequested(Inedo.BuildMaster.Extensibility.Agents.ServiceRequestedEventArgs)">
            <summary>
            Raises the <see cref="E:Inedo.BuildMaster.Extensibility.Agents.BuildMasterAgent.ServiceRequested"/> event.
            </summary>
            <param name="e">The event args.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Agents.BuildMasterAgent.CreateLocalAgent">
            <summary>
            Creates a local agent.
            </summary>
            <returns>A local agent</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Agents.BuildMasterAgent.Create(System.String)">
            <summary>
            Creates an agent from the specified server name
            </summary>
            <param name="serverName">The server name.</param>
            <returns>A deserialized agent</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Agents.BuildMasterAgent.Create(System.Int32)">
            <summary>
            Creates an agent from the specified serverId
            </summary>
            <param name="serverId">The server identifier.</param>
            <returns>A deserialized agent</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Agents.BuildMasterAgent.Create(Inedo.BuildMaster.Data.Tables.Servers)">
            <summary>
            Creates an agent from a <see cref="T:Inedo.BuildMaster.Data.Tables.Servers"/> object
            </summary>
            <param name="serverInfo">The server information.</param>
            <returns>A deserialized agent</returns>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Agents.AgentExtensions">
            <summary>
            Contains agent-related extension methods.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Agents.AgentExtensions.GetExecutionBaseDirectory(Inedo.Agents.IFileOperationsExecuter,Inedo.BuildMaster.Extensibility.IGenericBuildMasterContext)">
            <summary>
            Returns the base working directory for the execution in context.
            </summary>
            <param name="agent">The agent.</param>
            <param name="context">The current context.</param>
            <returns>Base working directory for the execution.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Agents.AgentExtensions.GetLegacyExecutionBaseDirectory(Inedo.Agents.IFileOperationsExecuter,Inedo.BuildMaster.Extensibility.IGenericBuildMasterContext)">
            <summary>
            Returns the base working directory for the execution in context.
            </summary>
            <param name="agent">The agent.</param>
            <param name="context">The current context.</param>
            <returns>Base working directory for the execution.</returns>\
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Agents.AgentExtensions.GetLegacyWorkingDirectory(Inedo.Agents.IFileOperationsExecuter,Inedo.BuildMaster.Extensibility.IGenericBuildMasterContext,System.String)">
            <summary>
            Returns the working directory for the specified execution context.
            </summary>
            <param name="agent">The agent.</param>
            <param name="context">The current context.</param>
            <param name="overridePath">The overridden path.</param>
            <returns>Working directory for the specified context.</returns>
            <remarks>
                The value of <paramref name="overridePath"/> may be either a relative or absolute path:
                <list type="bullet">
                    <item>absolute - <paramref name="overridePath"/> is always returned.</item>
                    <item>relative (starts with ~) - <paramref name="overridePath"/> is combined with the execution base path.</item>
                    <item>relative (does not start with ~) - <paramref name="overridePath"/> is combined with the deployable base path.</item>
                </list>
            </remarks>
            <example>
                <list type="table">
                    <listheader>
                        <term>Value of <paramref name="overridePath"/></term>
                        <description>Result</description>
                    </listheader>
                    <item>
                        <term>(null/empty)</term>
                        <description>C:\[BuildMaster base directory]\_E[ExecutionId]\_S[DplId]\_WRK</description>
                    </item>
                    <item>
                        <term>~</term>
                        <description>C:\[BuildMaster base directory]\_E[ExecutionId]</description>
                    </item>
                    <item>
                        <term>~\MyPath</term>
                        <description>C:\[BuildMaster base directory]\_E[ExecutionId]\MyPath</description>
                    </item>
                    <item>
                        <term>\MyPath</term>
                        <description>C:\MyPath</description>
                    </item>
                    <item>
                        <term>MyPath</term>
                        <description>C:\[BuildMaster base directory]\_E[ExecutionId]\_S[DplId]\_WRK\MyPath</description>
                    </item>
                </list>
            </example>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.ComponentConfigurationValue">
            <summary>
            Represents a stored configuration value of an component.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.ComponentConfigurationValue.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.ComponentConfigurationValue"/> struct.
            </summary>
            <param name="rawValue">The string value.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.ComponentConfigurationValue.op_Implicit(Inedo.BuildMaster.Extensibility.ComponentConfigurationValue)~System.String">
            <summary>
            Returns a string representation of the value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.ComponentConfigurationValue.op_Implicit(Inedo.BuildMaster.Extensibility.ComponentConfigurationValue)~System.String[]">
            <summary>
            Returns an array representation of the value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.ComponentConfigurationValue.AsEnumerable">
            <summary>
            Returns an enumeration if possible.
            </summary>
            <returns>An enumeration.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.ComponentConfigurationValue.ToString">
            <summary>
            Returns a string representation of the value.
            </summary>
            <returns>String representation of the value.</returns>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Configurations.ConfigurationKeyAttribute">
            <summary>
            Marks a persistent property on a <see cref="T:Inedo.BuildMaster.Extensibility.Configurations.PersistedConfiguration"/> whose string value 
            will uniquely identify a configuration item of the same type on the same server.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Configurations.ConfigurationKeyAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Configurations.ConfigurationKeyAttribute"/> class.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Configurations.IExistential">
            <summary>
            Provided for compatibility with the Otter SDK.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Configurations.IExistential.Exists">
            <summary>
            Gets a value indicating whether the configuration exists.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Configurations.PersistedConfiguration">
            <summary>
            Provided for compatibility with the Otter SDK.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Configurations.PersistedConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Configurations.PersistedConfiguration"/> class.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Credentials.CredentialExtensions">
            <summary>
            Extension methods for credentials.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Credentials.CredentialExtensions.TryGetCredentials``1(Inedo.BuildMaster.Extensibility.Credentials.IHasCredentials{``0})">
            <summary>
            Gets the credentials assigned to an <see cref="T:Inedo.BuildMaster.Extensibility.Credentials.IHasCredentials`1"/> operation.
            </summary>
            <typeparam name="TCredential">The type of the credential.</typeparam>
            <param name="obj">The object that has the credentials.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Credentials.CredentialExtensions.TryGetCredentials(Inedo.BuildMaster.Extensibility.Credentials.IHasCredentials)">
            <summary>
            Gets the credentials assigned to an <see cref="T:Inedo.BuildMaster.Extensibility.Credentials.IHasCredentials"/> operation.
            </summary>
            <param name="obj">The object that has the credentials.</param>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Credentials.CredentialName">
            <summary>
            Represents the name of a credential in a plan.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Credentials.CredentialName.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Credentials.CredentialName"/> class.
            </summary>
            <param name="typeName">Name of the type.</param>
            <param name="name">The name.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Credentials.CredentialName.TryParse(System.String)">
            <summary>
            Parses a string into a credential name, or null if the name is an invalid credential name;
            </summary>
            <param name="s">The s.</param>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Credentials.CredentialName.TypeName">
            <summary>
            Gets the type name of the credential.
            </summary>
            <remarks>This value is the same as the <see cref="T:System.ComponentModel.DisplayNameAttribute"/> on the
            <see cref="T:Inedo.BuildMaster.Extensibility.Credentials.ResourceCredentials"/> subclass implementation.
            </remarks>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Credentials.CredentialName.Name">
            <summary>
            Gets the name of the credential.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Credentials.CredentialName.FullName">
            <summary>
            Gets the fully-qualified credential name.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Credentials.IHasCredentials`1">
            <summary>
            Indicates that an operation uses a <see cref="T:Inedo.BuildMaster.Extensibility.Credentials.ResourceCredentials"/> of the
            type <typeparamref name="TCredentials"/>
            </summary>
            <typeparam name="TCredentials">The type of the credentials.</typeparam>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Credentials.IHasCredentials">
            <summary>
            Indicates that an operation uses a <see cref="T:Inedo.BuildMaster.Extensibility.Credentials.ResourceCredentials"/>
            </summary>
            <remarks>This interface is not intended to be implemented directly, use 
            the generic <see cref="T:Inedo.BuildMaster.Extensibility.Credentials.IHasCredentials`1"/> instead.</remarks>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Credentials.IHasCredentials.CredentialName">
            <summary>
            Gets or sets the name of the credential, which may be fully qualified with the scope resolution operator.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Credentials.MappedCredentialAttribute">
            <summary>
            Indicates that a property is mapped to a credential.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Credentials.MappedCredentialAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Credentials.MappedCredentialAttribute"/> class.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Credentials.MappedCredentialAttribute.PropertyName">
            <summary>
            Gets the name of the property.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Credentials.ResourceCredentials">
            <summary>
            Represents a set of credentials used for a specific resource.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Credentials.ResourceCredentials.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Credentials.ResourceCredentials"/> class.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Credentials.ResourceCredentials.GetDescription">
            <summary>
            Gets the description.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Credentials.ResourceCredentials.Create``1(System.String)">
            <summary>
            Creates a <see cref="T:Inedo.BuildMaster.Extensibility.Credentials.ResourceCredentials"/> from the specified type and name
            </summary>
            <typeparam name="TCredential">The type of the credential.</typeparam>
            <param name="credentialName">Name of the credential.</param>
            <returns>An instance of a <see cref="T:Inedo.BuildMaster.Extensibility.Credentials.ResourceCredentials"/></returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Credentials.ResourceCredentials.Create(System.String,System.String)">
            <summary>
            Creates a <see cref="T:Inedo.BuildMaster.Extensibility.Credentials.ResourceCredentials"/> from the specified type name and name
            </summary>
            <param name="credentialTypeName">Name of the credential type.</param>
            <param name="credentialName">Name of the credential.</param>
            <returns>An instance of a <see cref="T:Inedo.BuildMaster.Extensibility.Credentials.ResourceCredentials"/></returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Credentials.ResourceCredentials.Create(System.Int32)">
            <summary>
            Creates a <see cref="T:Inedo.BuildMaster.Extensibility.Credentials.ResourceCredentials"/> from the specified id
            </summary>
            <param name="credentialId">The id of the credential.</param>
            <returns>An instance of a <see cref="T:Inedo.BuildMaster.Extensibility.Credentials.ResourceCredentials"/></returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Credentials.ResourceCredentials.Create(Inedo.BuildMaster.Data.Tables.Credentials_Extended)">
            <summary>
            Creates a <see cref="T:Inedo.BuildMaster.Extensibility.Credentials.ResourceCredentials"/> from the specified info
            </summary>
            <param name="credentialInfo">The info the credential.</param>
            <returns>An instance of a <see cref="T:Inedo.BuildMaster.Extensibility.Credentials.ResourceCredentials"/></returns>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Credentials.BuildMasterCredentials">
            <summary>
            Represents BuildMaster credentials.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Credentials.BuildMasterCredentials.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Credentials.BuildMasterCredentials"/> class.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Credentials.BuildMasterCredentials.Host">
            <summary>
            Gets or sets the host name.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Credentials.BuildMasterCredentials.ApiKey">
            <summary>
            Gets or sets the API key.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Credentials.BuildMasterCredentials.GetDescription">
            <summary>
            Gets the description.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Credentials.IInedoProductCredentials">
            <summary>
            Implemented by resource credentials which are used for connecting
            to another Inedo product.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Credentials.IInedoProductCredentials.Host">
            <summary>
            Gets the host name.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Credentials.IInedoProductCredentials.ApiKey">
            <summary>
            Gets the API key.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Credentials.OtterCredentials">
            <summary>
            Represents Otter credentials.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Credentials.OtterCredentials.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Credentials.OtterCredentials"/> class.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Credentials.OtterCredentials.Host">
            <summary>
            Gets the host name.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Credentials.OtterCredentials.ApiKey">
            <summary>
            Gets the API key.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Credentials.OtterCredentials.GetDescription">
            <summary>
            Gets the description.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Credentials.PrivateKeyCredentials">
            <summary>
            Represents a private key with an optional user name and passphrase.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Credentials.PrivateKeyCredentials.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Credentials.PrivateKeyCredentials"/> class.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Credentials.PrivateKeyCredentials.UserName">
            <summary>
            Gets or sets the user name.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Credentials.PrivateKeyCredentials.PrivateKey">
            <summary>
            Gets or sets the private key.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Credentials.PrivateKeyCredentials.Passphrase">
            <summary>
            Gets or sets the passphrase.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Credentials.PrivateKeyCredentials.PublicKey">
            <summary>
            Gets or sets the public key.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Credentials.PrivateKeyCredentials.GetDescription">
            <summary>
            Returns the description.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Credentials.ProGetCredentials">
            <summary>
            Represents ProGet credentials.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Credentials.ProGetCredentials.Url">
            <summary>
            Gets or sets the server URL.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Credentials.ProGetCredentials.UserName">
            <summary>
            Gets or sets the user name.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Credentials.ProGetCredentials.Password">
            <summary>
            Gets or sets the password.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Credentials.ProGetCredentials.GetDescription">
            <summary>
            Returns the description.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Credentials.UsernamePasswordCredentials">
            <summary>
            Represents a user name and password.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Credentials.UsernamePasswordCredentials.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Credentials.UsernamePasswordCredentials"/> class.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Credentials.UsernamePasswordCredentials.UserName">
            <summary>
            Gets or sets the user name.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Credentials.UsernamePasswordCredentials.Password">
            <summary>
            Gets or sets the password.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Credentials.UsernamePasswordCredentials.GetDescription">
            <summary>
            Gets the description.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Credentials.UsernamePasswordCredentials.Equals(Inedo.BuildMaster.Extensibility.Credentials.UsernamePasswordCredentials)">
            <summary>
            Returns a value indicating whether this instance is equivalent to another.
            </summary>
            <param name="other">The other instance.</param>
            <returns>True if objects are equivalent; otherwise false.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Credentials.UsernamePasswordCredentials.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equivalent to another.
            </summary>
            <param name="obj">The other instance.</param>
            <returns>True if objects are equivalent; otherwise false.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Credentials.UsernamePasswordCredentials.GetHashCode">
            <summary>
            Returns a hash code.
            </summary>
            <returns>Hash code.</returns>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.CustomVariableReplacerAttribute">
            <summary>
            Indicates that a persistent property has a custom variable replacer.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.CustomVariableReplacerAttribute.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.CustomVariableReplacerAttribute"/> class.
            </summary>
            <param name="customVariableReplacer">The type of custom variable replacer to use for the property. This type should implement <see cref="T:Inedo.BuildMaster.Extensibility.ICustomVariableReplacer"/>.</param>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.CustomVariableReplacerAttribute.CustomVariableReplacer">
            <summary>
            Gets the type of custom variable replacer to use for the property.
            </summary>
            <remarks>
            This type should implement <see cref="T:Inedo.BuildMaster.Extensibility.ICustomVariableReplacer"/>.
            </remarks>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.DatabaseConnections.ChangeScriptExecutionRecord">
            <summary>
            Contains information about a previously executed database change script.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.DatabaseConnections.ChangeScriptExecutionRecord.#ctor(Inedo.BuildMaster.Extensibility.DatabaseConnections.ChangeScriptId,System.String,System.DateTime,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.DatabaseConnections.ChangeScriptExecutionRecord"/> class.
            </summary>
            <param name="id">The script ID.</param>
            <param name="name">The script name.</param>
            <param name="executionDate">The script execution date in UTC.</param>
            <param name="successfullyExecuted">Value indicating whether the script was successful.</param>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.DatabaseConnections.ChangeScriptExecutionRecord.Id">
            <summary>
            Gets the unique script ID.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.DatabaseConnections.ChangeScriptExecutionRecord.Name">
            <summary>
            Gets the script name.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.DatabaseConnections.ChangeScriptExecutionRecord.ExecutionDate">
            <summary>
            Gets the script execution date in UTC.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.DatabaseConnections.ChangeScriptExecutionRecord.SuccessfullyExecuted">
            <summary>
            Gets a value indicating whether the script was successful.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.DatabaseConnections.ChangeScriptId">
            <summary>
            A value which uniquely identifies a change script.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.DatabaseConnections.ChangeScriptId.#ctor(System.Int32,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.DatabaseConnections.ChangeScriptId"/> class.
            </summary>
            <param name="scriptId">The somewhat unique identifier.</param>
            <param name="guid">The unique identifier.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.DatabaseConnections.ChangeScriptId.#ctor(System.Int32,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.DatabaseConnections.ChangeScriptId"/> class.
            </summary>
            <param name="scriptId">The somewhat unique identifier.</param>
            <param name="legacyReleaseSequence">The legacy release sequence.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.DatabaseConnections.ChangeScriptId.#ctor(System.Int32,System.Int64,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.DatabaseConnections.ChangeScriptId"/> class.
            </summary>
            <param name="scriptId">The somewhat unique identifier.</param>
            <param name="legacyReleaseSequence">The legacy release sequence.</param>
            <param name="guid">The unique identifier.</param>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.DatabaseConnections.ChangeScriptId.ScriptId">
            <summary>
            Gets the identifier as a legacy <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.DatabaseConnections.ChangeScriptId.LegacyReleaseSequence">
            <summary>
            Gets the release sequence number if available.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.DatabaseConnections.ChangeScriptId.Guid">
            <summary>
            Gets the identifier as a <see cref="P:Inedo.BuildMaster.Extensibility.DatabaseConnections.ChangeScriptId.Guid"/> if available.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.DatabaseConnections.ChangeScriptId.ToString">
            <summary>
            Returns a string representation of the ID.
            </summary>
            <returns>String representation of the ID.</returns>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.DatabaseConnections.ChangeScriptState">
            <summary>
            Represents the current state of a database that supports change scripts.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.DatabaseConnections.ChangeScriptState.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.DatabaseConnections.ChangeScriptState"/> class.
            </summary>
            <param name="initialized">Value indicating whether the database has been intialized.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.DatabaseConnections.ChangeScriptState.#ctor(System.Boolean,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.DatabaseConnections.ChangeScriptState"/> class.
            </summary>
            <param name="initialized">Value indicating whether the database has been intialized.</param>
            <param name="version">The version of the change scripts table.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.DatabaseConnections.ChangeScriptState.#ctor(System.Int32,System.Collections.Generic.IEnumerable{Inedo.BuildMaster.Extensibility.DatabaseConnections.ChangeScriptExecutionRecord})">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.DatabaseConnections.ChangeScriptState"/> class.
            </summary>
            <param name="scripts">The scripts which have been executed.</param>
            <param name="version">The version of the change scripts table.</param>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.DatabaseConnections.ChangeScriptState.IsInitialized">
            <summary>
            Gets a value indicating whether the database has been initialized.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.DatabaseConnections.ChangeScriptState.ChangeScripterVersion">
            <summary>
            Gets the version number of the change script schema table.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.DatabaseConnections.ChangeScriptState.Scripts">
            <summary>
            Gets the scripts which have been executed.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.DatabaseConnections.DatabaseConnection">
            <summary>
            Represents a connection to a database.
            </summary>
            <seealso cref="T:Inedo.BuildMaster.Extensibility.DatabaseConnections.IBackupRestore"/>
            <see cref="T:Inedo.BuildMaster.Extensibility.DatabaseConnections.IChangeScriptExecuter"/>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.DatabaseConnections.DatabaseConnection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.DatabaseConnections.DatabaseConnection"/> class.
            </summary>
        </member>
        <member name="E:Inedo.BuildMaster.Extensibility.DatabaseConnections.DatabaseConnection.MessageLogged">
            <summary>
            Occurs when a message is logged.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.DatabaseConnections.DatabaseConnection.ConnectionString">
            <summary>
            Gets or sets the connection string required to connect to the database.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.DatabaseConnections.DatabaseConnection.VerboseLogging">
            <summary>
            Gets or sets a value indicating whether verbose logging is enabled.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.DatabaseConnections.DatabaseConnection.ExecuteQueryAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Runs the specified query against the database.
            </summary>
            <param name="query">The query to execute.</param>
            <param name="cancellationToken">Task cancellation token.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.DatabaseConnections.DatabaseConnection.Dispose">
            <summary>
            Releases resources used by the instance.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.DatabaseConnections.DatabaseConnection.Log(Inedo.Diagnostics.MessageLevel,System.String)">
            <summary>
            Writes the message to the log.
            </summary>
            <param name="logLevel">The log level.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.DatabaseConnections.DatabaseConnection.Dispose(System.Boolean)">
            <summary>
            Releases resources used by the instance.
            </summary>
            <param name="disposing">True if managed resources should be disposed; otherwise false.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.DatabaseConnections.DatabaseConnection.OnMessageLogged(Inedo.Diagnostics.LogMessageEventArgs)">
            <summary>
            Raises the <see cref="E:Inedo.BuildMaster.Extensibility.DatabaseConnections.DatabaseConnection.MessageLogged"/> event.
            </summary>
            <param name="e">The event args.</param>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.DatabaseConnections.IBackupRestore">
            <summary>
            Implemented by database connections which provide backup and restore capabilities.
            </summary>
            <seealso cref="T:Inedo.BuildMaster.Extensibility.DatabaseConnections.DatabaseConnection"/>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.DatabaseConnections.IBackupRestore.BackupDatabaseAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            When implemented by a derived class, backs up the specified database to the specified path.
            </summary>
            <param name="databaseName">The name of the database to be backed up.</param>
            <param name="destinationPath">
            The path that the database will be backed up to. This may either be a file or a directory
            depending on the database provider.
            </param>
            <param name="cancellationToken">Cancellation token.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.DatabaseConnections.IBackupRestore.RestoreDatabaseAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            When implemented by a derived class, restores the specified database from the specified path.
            </summary>
            <param name="databaseName">The name of the database to restore</param>
            <param name="sourcePath">
            The path that the database will be restored from. This may either be a file or a directory
            depending on the database provider.
            </param>
            <param name="cancellationToken">Cancellation token.</param>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.DatabaseConnections.IChangeScriptExecuter">
            <summary>
            Implemented by database connections which provide change script execution.
            </summary>
            <seealso cref="T:Inedo.BuildMaster.Extensibility.DatabaseConnections.DatabaseConnection"/>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.DatabaseConnections.IChangeScriptExecuter.MaxChangeScriptVersion">
            <summary>
            Gets the highest supported version of change scripts.
            </summary>
            <remarks>
            For legacy change script management, this is 1. For GUID-based change scripts, this is 2.
            All other values are currently undefined.
            </remarks>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.DatabaseConnections.IChangeScriptExecuter.InitializeDatabaseAsync(System.Threading.CancellationToken)">
            <summary>
            When implemented by a derived class, initializes the database by installing metadata tables
            for tracking change scripts and version numbers.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.DatabaseConnections.IChangeScriptExecuter.UpgradeSchemaAsync(System.Collections.Generic.IReadOnlyDictionary{System.Int32,System.Guid},System.Threading.CancellationToken)">
            <summary>
            When implemented by a derived class, migrates existing v1 script execution records to a new v2 table.
            </summary>
            <param name="canoncialGuids">Map of script IDs to script GUIDs.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.DatabaseConnections.IChangeScriptExecuter.GetStateAsync(System.Threading.CancellationToken)">
            <summary>
            When implemented by a derived class, retrieves the changes that occurred in the database.
            </summary>
            <param name="cancellationToken">Task cancellation token.</param>
            <returns>Changes that occurred in the database.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.DatabaseConnections.IChangeScriptExecuter.ExecuteChangeScriptAsync(Inedo.BuildMaster.Extensibility.DatabaseConnections.ChangeScriptId,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            When implemented by a derived class, executes the specified script provided that the
            specified script has not already been executed, and returns a Boolean indicating whether
            the script was skipped as a result of being executed.
            </summary>
            <param name="scriptId">BuildMaster's script identifier to be executed.</param>
            <param name="scriptName">Name of the script to be executed.</param>
            <param name="scriptText">Script text to be run.</param>
            <param name="cancellationToken">Task cancellation token.</param>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.IComponentConfiguration">
            <summary>
            Contains the stored configuration of an component
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.IComponentConfiguration.Item(System.String)">
            <summary>
            Gets the value of the item with the specified property name.
            </summary>
            <param name="propertyName">The name of the property on the operation.</param>
            <returns>Value of the property if found; otherwise an empty string.</returns>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.ITemplateContainer`1">
            <summary>
            Indicates that a type has special handling for enumerating properties.
            </summary>
            <typeparam name="TTemplate">The type of the template.</typeparam>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.ITemplateContainer`1.Template">
            <summary>
            Gets the template instance used by the type.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.ListVariableSources.ListVariableSource">
            <summary>
            A source of possible values for a variable in a release template.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.ListVariableSources.ListVariableSource.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.ListVariableSources.ListVariableSource"/> class.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.ListVariableSources.ListVariableSource.EnumerateValuesAsync(Inedo.BuildMaster.Extensibility.ListVariableSources.ValueEnumerationContext)">
            <summary>
            Returns the sequence of list values.
            </summary>
            <returns>An enumeration of strings.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="context"/> is null.</exception>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.ListVariableSources.ListVariableSource.GetDescription">
            <summary>
            Returns a friendly description.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.ListVariableSources.ValueEnumerationContext">
            <summary>
            The context information used for <see cref="M:Inedo.BuildMaster.Extensibility.ListVariableSources.ListVariableSource.EnumerateValuesAsync(Inedo.BuildMaster.Extensibility.ListVariableSources.ValueEnumerationContext)" />.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.ListVariableSources.ValueEnumerationContext.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.ListVariableSources.ValueEnumerationContext"/> class.
            </summary>
            <param name="applicationId">The application identifier.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.ListVariableSources.ValueEnumerationContext.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.ListVariableSources.ValueEnumerationContext"/> class.
            </summary>
            <param name="applicationId">The application identifier.</param>
            <param name="releaseNumber">The release number.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.ListVariableSources.ValueEnumerationContext.#ctor(System.Int32,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.ListVariableSources.ValueEnumerationContext"/> class.
            </summary>
            <param name="applicationId">The application identifier.</param>
            <param name="releaseNumber">The release number.</param>
            <param name="buildNumber">The build number.</param>
            <param name="pipelineStageName">Name of the pipeline stage.</param>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.ListVariableSources.ValueEnumerationContext.ApplicationId">
            <summary>
            Gets the application identifier.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.ListVariableSources.ValueEnumerationContext.ReleaseNumber">
            <summary>
            Gets the release number.
            </summary>
            <remarks>
            This is not null when creating a release package and deployment variable.
            </remarks>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.ListVariableSources.ValueEnumerationContext.BuildNumber">
            <summary>
            Gets the build number.
            </summary>
            <remarks>
            This is not null when creating a deployment variable.
            </remarks>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.ListVariableSources.ValueEnumerationContext.PipelineStageName">
            <summary>
            Gets the name of the pipeline stage.
            </summary>
            <remarks>
            This is not null when creating a deployment variable.
            </remarks>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Operations.EnsureOperation">
            <summary>
            Provided for compatibility with the Otter SDK.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Operations.EnsureOperation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Operations.EnsureOperation"/> class.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Operations.EnsureOperation.GetConfigurationTemplate">
            <summary>
            Gets the desired state of a configuration.
            </summary>
            <returns>The desired state.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Operations.EnsureOperation.Complete">
            <summary>
            Returns a <see cref="T:System.Threading.Tasks.Task"/> that can be returned from the <see cref="M:Inedo.BuildMaster.Extensibility.Operations.EnsureOperation.ConfigureAsync(Inedo.BuildMaster.Extensibility.Operations.IOperationExecutionContext)"/>
            method to indicate that the operation completed synchronously.
            </summary>
            <returns>Completed task.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Operations.EnsureOperation.ConfigureAsync(Inedo.BuildMaster.Extensibility.Operations.IOperationExecutionContext)">
            <summary>
            Performs the operation.
            </summary>
            <param name="context">The current context.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Operations.EnsureOperation.ExecuteAsync(Inedo.BuildMaster.Extensibility.Operations.IOperationExecutionContext)">
            <summary>
            Performs the operation.
            </summary>
            <param name="context">The current context.</param>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Operations.EnsureOperation`1">
            <summary>
            Provided for compatibility with the Otter SDK.
            </summary>
            <typeparam name="TConfig">The type of the configuration.</typeparam>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Operations.EnsureOperation`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Operations.EnsureOperation"/> class.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Operations.EnsureOperation`1.Template">
            <summary>
            Gets or sets the configuration template.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Operations.EnsureOperation`1.GetConfigurationTemplate">
            <summary>
            Gets the desired state of a configuration.
            </summary>
            <returns>The desired state.</returns>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Operations.ICustomArgumentMapper">
            <summary>
            Implemented by operations that provide their own script argument mapping.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Operations.ICustomArgumentMapper.DefaultArgument">
            <summary>
            Gets the value of the default argument.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Operations.ICustomArgumentMapper.NamedArguments">
            <summary>
            Sets the values of the named arguments.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Operations.ICustomArgumentMapper.OutArguments">
            <summary>
            Gets or sets the dictionary containing out arguments.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Operations.OperationExecutionContext">
            <summary>
            Conains extension methods for the <see cref="T:Inedo.BuildMaster.Extensibility.Operations.IOperationExecutionContext"/> interface.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Operations.OperationExecutionContext.ResolvePath(Inedo.BuildMaster.Extensibility.Operations.IOperationExecutionContext,System.String,System.String)">
            <summary>
            Returns a fully-resolved absolute path of the specified file or directory, using the supplied default
            source path if supplied with a relative path.
            </summary>
            <param name="context">The context.</param>
            <param name="path">The path to resolve.</param>
            <param name="defaultSourcePath">The working directory to use for resolving <paramref name="path"/>.</param>
            <returns>Fully-resolved absolute path.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="context"/> is null.</exception>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Operations.OperationProgress">
            <summary>
            Contains information about a currently executing operation.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Operations.OperationProgress.#ctor(System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Operations.OperationProgress"/> class.
            </summary>
            <param name="percent">The percent complete.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Operations.OperationProgress.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Operations.OperationProgress"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Operations.OperationProgress.#ctor(System.Nullable{System.Int32},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Operations.OperationProgress"/> class.
            </summary>
            <param name="percent">The percent complete.</param>
            <param name="message">The message.</param>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Operations.OperationProgress.Percent">
            <summary>
            Gets the percent complete.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Operations.OperationProgress.Message">
            <summary>
            Gets the message.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Operations.OtterScriptSymbolComparer">
            <summary>
            Represents a string comparison operation that ignores case and also treats
            - and _ characters as identical.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Operations.OtterScriptSymbolComparer.Instance">
            <summary>
            Gets the instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Operations.OtterScriptSymbolComparer"/> class.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Operations.RemoteEnsureOperation">
            <summary>
            Provided for compatibility with the Otter SDK.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Operations.RemoteEnsureOperation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Operations.RemoteEnsureOperation"/> class.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Operations.RemoteEnsureOperation.GetConfigurationTemplate">
            <summary>
            Gets the desired state of a configuration.
            </summary>
            <returns>The desired state.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Operations.RemoteEnsureOperation.Complete">
            <summary>
            Returns a <see cref="T:System.Threading.Tasks.Task"/> that can be returned from the <see cref="M:Inedo.BuildMaster.Extensibility.Operations.RemoteEnsureOperation.RemoteConfigureAsync(Inedo.BuildMaster.Extensibility.Operations.IRemoteOperationExecutionContext)"/>
            method to indicate that the operation completed synchronously.
            </summary>
            <returns>Completed task.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Operations.RemoteEnsureOperation.RemoteConfigureAsync(Inedo.BuildMaster.Extensibility.Operations.IRemoteOperationExecutionContext)">
            <summary>
            Performs the configuration remotely.
            </summary>
            <param name="context">The remote execution context.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Operations.RemoteEnsureOperation.RemoteExecuteAsync(Inedo.BuildMaster.Extensibility.Operations.IRemoteOperationExecutionContext)">
            <summary>
            Executes the operation. This method is called on the remote server.
            </summary>
            <param name="context">The remote context.</param>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Operations.RemoteEnsureOperation`1">
            <summary>
            Provided for compatibility with the Otter SDK.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Operations.RemoteEnsureOperation`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Operations.RemoteEnsureOperation"/> class.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Operations.RemoteEnsureOperation`1.Template">
            <summary>
            Gets or sets the configuration template.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Operations.RemoteEnsureOperation`1.GetConfigurationTemplate">
            <summary>
            Gets the desired state of a configuration.
            </summary>
            <returns>The desired state.</returns>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Operations.ConvertedOperation`1">
            <summary>
            Represents an operation configuration that has been imported from an action.
            </summary>
            <typeparam name="TOperation">Type of the operation.</typeparam>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Operations.ConvertedOperation`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Operations.ConvertedOperation`1"/> class.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Operations.ConvertedOperation`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Operations.ConvertedOperation`1"/> class.
            </summary>
            <param name="operation">The operation to extract configuration from.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Operations.ConvertedOperation`1.op_Implicit(`0)~Inedo.BuildMaster.Extensibility.Operations.ConvertedOperation{`0}">
            <summary>
            Converts the operation.
            </summary>
            <param name="operation">The operation.</param>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Operations.ConvertedOperation`1.Item(System.String)">
            <summary>
            Sets the value associated with the specified operation property name.
            </summary>
            <param name="propertyName">The name of the property on the operation.</param>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Operations.ConvertedOperation`1.DefaultArgument">
            <summary>
            Gets or sets the default argument value for the operation.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Operations.ConvertedOperation`1.NamedArguments">
            <summary>
            Gets the dictionary which contains explicitly defined named arguments for the operation.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Operations.ConvertedOperation`1.ServerId">
            <summary>
            Gets the server id to use for this specific operation. Only set this if you know what you are doing.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Operations.ExecuteOperation">
            <summary>
            An operation that will execute commands and configuration against a server.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Operations.ExecuteOperation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Operations.ExecuteOperation"/> class.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Operations.ExecuteOperation.Complete">
            <summary>
            Gets a completed <see cref="T:System.Threading.Tasks.Task"/> which can be returned from the <see cref="M:Inedo.BuildMaster.Extensibility.Operations.ExecuteOperation.ExecuteAsync(Inedo.BuildMaster.Extensibility.Operations.IOperationExecutionContext)"/> method.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Operations.ExecuteOperation.ExecuteAsync(Inedo.BuildMaster.Extensibility.Operations.IOperationExecutionContext)">
            <summary>
            Performs the operation.
            </summary>
            <param name="context">The current context.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Operations.ExecuteOperation.ExecuteCommandLineAsync(Inedo.BuildMaster.Extensibility.Operations.IOperationExecutionContext,Inedo.Agents.RemoteProcessStartInfo)">
            <summary>
            Executes the specified process asychronously and writes process output to the operation's log.
            </summary>
            <param name="context">The execution context.</param>
            <param name="startInfo">The process start info.</param>
            <returns>Exit code of the process.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Operations.ExecuteOperation.LogProcessOutput(System.String)">
            <summary>
            Invoked when process output data is received after calling ExecuteCommandLine.
            </summary>
            <param name="text">The text to log.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Operations.ExecuteOperation.LogProcessError(System.String)">
            <summary>
            Invoked when process error data is received after calling ExecuteCommandLine.
            </summary>
            <param name="text">The text to log.</param>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Operations.IActionOperationConverter`2">
            <summary>
            Defines a method for converting a legacy <see cref="T:Inedo.BuildMaster.Extensibility.Actions.ActionBase"/> into a <see cref="T:Inedo.BuildMaster.Extensibility.Operations.Operation"/>.
            </summary>
            <typeparam name="TAction">The type of action to convert.</typeparam>
            <typeparam name="TOperation">The type of operation to convert to.</typeparam>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Operations.IActionOperationConverter`2.ConvertActionToOperation(`0,Inedo.BuildMaster.Extensibility.Operations.IActionConverterContext)">
            <summary>
            Returns a <see cref="T:Inedo.BuildMaster.Extensibility.Operations.Operation"/> that is functionally equivalent to the supplied <typeparamref name="TAction"/>.
            </summary>
            <param name="action">An instance of <typeparamref name="TAction"/> to convert.</param>
            <param name="context">Contains context information and conversion helper methods.</param>
            <returns><see cref="T:Inedo.BuildMaster.Extensibility.Operations.Operation"/> that is functionally equivalent to the supplied <typeparamref name="TAction"/>.</returns>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Operations.IActionConverterContext">
            <summary>
            Contains context information and conversion helper methods for an action converter.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Operations.IActionConverterContext.ActionServerName">
            <summary>
            Gets the name of the server that the action will execute on.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Operations.IActionConverterContext.ActionGroupServerName">
            <summary>
            Gets the name of the server assigned to the action group that the action belongs to.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Operations.IActionConverterContext.Configurer">
            <summary>
            Gets the configurer associated with the action.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Operations.IActionConverterContext.ConvertLegacyMask(System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>
            Returns a <see cref="T:Inedo.IO.MaskingContext"/> instance that is functionally equivalent
            to the supplied legacy masks.
            </summary>
            <param name="legacyMasks">Legacy file masks.</param>
            <param name="recursive">Value indicating whether the mask should be recursive.</param>
            <returns><see cref="T:Inedo.IO.MaskingContext"/> instance that is functionally equivalent to the supplied legacy masks.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Operations.IActionConverterContext.ConvertLegacyExpression(System.String)">
            <summary>
            Returns a variable-containing string that has been converted from the specified legacy expression.
            </summary>
            <param name="legacyExpression">The legacy expression to convert.</param>
            <returns>Variable-containing string that has been converted from the specified legacy expression.</returns>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Operations.IExecutingOperation">
            <summary>
            Represents an operation that executes.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Operations.IExecutingOperation.ExecuteAsync(Inedo.BuildMaster.Extensibility.Operations.IOperationExecutionContext)">
            <summary>
            Performs the operation.
            </summary>
            <param name="context">The current context.</param>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Operations.IOperationConfiguration">
            <summary>
            Contains the stored configuration of an operation.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Operations.IOperationConfiguration.Item(System.String)">
            <summary>
            Gets the value of the item with the specified property name.
            </summary>
            <param name="propertyName">The name of the property on the operation.</param>
            <returns>Value of the property if found; otherwise an empty string.</returns>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Operations.IOperationConfiguration.DefaultArgument">
            <summary>
            Gets the value of the default argument.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Operations.IOperationConfiguration.NamedArguments">
            <summary>
            Gets the named arguments.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Operations.IOperationConfiguration.OutArguments">
            <summary>
            Gets the named out arguments.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Operations.IOperationExecutionContext">
            <summary>
            Provides the context for an execution.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Operations.IOperationExecutionContext.ExecutionId">
            <summary>
            Gets the current execution ID.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Operations.IOperationExecutionContext.Deployable">
            <summary>
            Gets the current deployable.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Operations.IOperationExecutionContext.WorkingDirectory">
            <summary>
            Gets the default working directory used for operations.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Operations.IOperationExecutionContext.Agent">
            <summary>
            Gets the current agent.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Operations.IOperationExecutionContext.Simulation">
            <summary>
            Gets a value indicating whether state-modifying actions should be simulated.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Operations.IOperationExecutionContext.CancellationToken">
            <summary>
            Gets the current <see cref="T:System.Threading.CancellationToken"/> for the operation.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Operations.IOperationExecutionContext.ExecutionStatus">
            <summary>
            Gets the current execution status.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Operations.IOperationExecutionContext.TryGetVariableValue(System.String)">
            <summary>
            Returns the value of the specified variable or null if the variable is not defined.
            </summary>
            <param name="variableName">The name of the variable.</param>
            <returns>The value of the variable if it is defined; otherwise null.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Operations.IOperationExecutionContext.TryGetVariableValue(Inedo.ExecutionEngine.RuntimeVariableName)">
            <summary>
            Returns the value of the specified variable or null if the variable is not defined.
            </summary>
            <param name="variableName">The name of the variable.</param>
            <returns>The value of the variable if it is defined; otherwise null.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Operations.IOperationExecutionContext.TryGetFunctionValue(System.String,Inedo.ExecutionEngine.RuntimeValue[])">
            <summary>
            Returns the value of the specified function or null if the function is not defined.
            </summary>
            <param name="functionName">The name of the function.</param>
            <param name="args">Arguments to pass to the function.</param>
            <returns>The value of the function if it is defined; otherwise null.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Operations.IOperationExecutionContext.SetVariableValue(System.String,Inedo.ExecutionEngine.RuntimeValue)">
            <summary>
            Sets the value of the specified execution variable, or creates a new one in the current scope.
            </summary>
            <param name="variableName">The name of the variable.</param>
            <param name="variableValue">The value to assign to the variable.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Operations.IOperationExecutionContext.SetVariableValue(Inedo.ExecutionEngine.RuntimeVariableName,Inedo.ExecutionEngine.RuntimeValue)">
            <summary>
            Sets the value of the specified execution variable, or creates a new one in the current scope.
            </summary>
            <param name="variableName">The name of the variable.</param>
            <param name="variableValue">The value to assign to the variable.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Operations.IOperationExecutionContext.GetAgent(System.String)">
            <summary>
            Returns the agent with the specified server name and associates it with the current execution.
            </summary>
            <param name="serverName">The name of the server.</param>
            <returns>Agent with the specified server name.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Operations.IOperationExecutionContext.GetAgentAsync(System.String)">
            <summary>
            Returns the agent with the specified server name and associates it with the current execution.
            </summary>
            <param name="serverName">The name of the server.</param>
            <returns>Agent with the specified server name.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Operations.IOperationExecutionContext.GetDeployable(System.String)">
            <summary>
            Returns information about the deployable with the specified name.
            </summary>
            <param name="deployableName">The name of the deployable.</param>
            <returns>Information about the deployable.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Operations.IOperationExecutionContext.ExpandVariables(System.String)">
            <summary>
            Expands variables in the specified string using the current execution context.
            </summary>
            <param name="text">Text containing variables to expand.</param>
            <returns>Expanded values.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Operations.IOperationExecutionContext.ExpandVariablesAsync(System.String)">
            <summary>
            Expands variables in the specified string using the current execution context.
            </summary>
            <param name="text">Text containing variables to expand.</param>
            <returns>Expanded values.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Operations.IOperationExecutionContext.ResolvePath(System.String)">
            <summary>
            Returns a fully-resolved absolute path of the specified file or directory.
            </summary>
            <param name="path">The path to resolve.</param>
            <returns>Fully-resolved absolute path.</returns>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Operations.IRemoteOperationExecutionContext">
            <summary>
            Represents the context available to a remote operation.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Operations.IRemoteOperationExecutionContext.WorkingDirectory">
            <summary>
            Gets the default working directory used for operations.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Operations.IRemoteOperationExecutionContext.Simulation">
            <summary>
            Gets a value indicating whether state-modifying actions should be simulated.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Operations.IRemoteOperationExecutionContext.CancellationToken">
            <summary>
            Gets the current <see cref="T:System.Threading.CancellationToken"/> for the operation.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Operations.IRemoteOperationExecutionContext.ResolvePath(System.String)">
            <summary>
            Returns a fully-resolved absolute path of the specified file or directory.
            </summary>
            <param name="path">The path to resolve.</param>
            <returns>Fully-resolved absolute path.</returns>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Operations.Operation">
            <summary>
            The common base class for all types of operations.
            </summary>
            <remarks>
            This class should not be inherited directly. Instead, see <see cref="T:Inedo.BuildMaster.Extensibility.Operations.ExecuteOperation"/>.
            </remarks>
            <seealso cref="T:Inedo.BuildMaster.Extensibility.Operations.ExecuteOperation"/>
        </member>
        <member name="E:Inedo.BuildMaster.Extensibility.Operations.Operation.MessageLogged">
            <summary>
            Occurs when a message is logged.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Operations.Operation.GetProgress">
            <summary>
            Returns the current progress of the action as a percentage if it is executing.
            </summary>
            <returns>Current progress of the action.</returns>
            <remarks>
            If the action is not executing or does not support reporting progress,
            this method should return null.
            </remarks>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Operations.Operation.Log(Inedo.Diagnostics.MessageLevel,System.String)">
            <summary>
            Writes the specified message to the corresponding log.
            </summary>
            <param name="logLevel">Log level of the message.</param>
            <param name="message">Message to log.</param>
            <seealso cref="T:Inedo.Diagnostics.LoggerExtensions" />
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Operations.Operation.GetLogScopeName(System.Type,Inedo.ExecutionEngine.ActionStatement)">
            <summary>
            Returns the log scope name for the operation.
            </summary>
            <param name="operationType">The operation type.</param>
            <param name="statement">The action.</param>
            <returns>The log scope name.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Operations.Operation.GetOperationDescription(System.Type,Inedo.ExecutionEngine.ActionStatement)">
            <summary>
            Returns the operation description for the operation.
            </summary>
            <param name="operationType">The operation type.</param>
            <param name="statement">The action.</param>
            <returns>The operation description.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Operations.Operation.ExecuteCommandLineAsync(Inedo.BuildMaster.Extensibility.Operations.IOperationExecutionContext,Inedo.Agents.RemoteProcessStartInfo)">
            <summary>
            Executes the specified process asychronously and writes process output to the operation's log.
            </summary>
            <param name="context">The execution context.</param>
            <param name="startInfo">The process start info.</param>
            <returns>Exit code of the process.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Operations.Operation.LogProcessOutput(System.String)">
            <summary>
            Invoked when process output data is received after calling ExecuteCommandLine.
            </summary>
            <param name="text">The text to log.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Operations.Operation.LogProcessError(System.String)">
            <summary>
            Invoked when process error data is received after calling ExecuteCommandLine.
            </summary>
            <param name="text">The text to log.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Operations.Operation.GetDescription(Inedo.BuildMaster.Extensibility.Operations.IOperationConfiguration)">
            <summary>
            Returns a friendly description of this operation and its current configuration.
            </summary>
            <param name="config">The operation configuration.</param>
            <returns>Friendly description of this operation and its current configuration.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Operations.Operation.OnMessageLogged(Inedo.Diagnostics.LogMessageEventArgs)">
            <summary>
            Raises the <see cref="E:Inedo.BuildMaster.Extensibility.Operations.Operation.MessageLogged"/> event.
            </summary>
            <param name="e">The event args.</param>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Operations.OperationConfigurationValue">
            <summary>
            Represents a stored configuration value of an operation.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Operations.OperationConfigurationValue.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Operations.OperationConfigurationValue"/> struct.
            </summary>
            <param name="rawValue">The string value.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Operations.OperationConfigurationValue.op_Implicit(Inedo.BuildMaster.Extensibility.Operations.OperationConfigurationValue)~System.String">
            <summary>
            Returns a string representation of the value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Operations.OperationConfigurationValue.op_Implicit(Inedo.BuildMaster.Extensibility.Operations.OperationConfigurationValue)~System.String[]">
            <summary>
            Returns an array representation of the value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Operations.OperationConfigurationValue.AsEnumerable">
            <summary>
            Returns an enumeration if possible.
            </summary>
            <returns>An enumeration.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Operations.OperationConfigurationValue.ToString">
            <summary>
            Returns a string representation of the value.
            </summary>
            <returns>String representation of the value.</returns>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Operations.RemoteExecuteOperation">
            <summary>
            An operation that executes remotely on a server.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Operations.RemoteExecuteOperation.Complete">
            <summary>
            Gets a completed <see cref="T:System.Threading.Tasks.Task"/> which can be returned from the <see cref="M:Inedo.BuildMaster.Extensibility.Operations.RemoteExecuteOperation.ExecuteAsync(Inedo.BuildMaster.Extensibility.Operations.IOperationExecutionContext)"/> method.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Operations.RemoteExecuteOperation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Operations.RemoteExecuteOperation"/> class.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Operations.RemoteExecuteOperation.RemoteExecuteAsync(Inedo.BuildMaster.Extensibility.Operations.IRemoteOperationExecutionContext)">
            <summary>
            Executes the operation. This method is called on the remote server.
            </summary>
            <param name="context">The remote context.</param>
            <returns>User-supplied return value. This may be null and will only be used if the <see cref="M:Inedo.BuildMaster.Extensibility.Operations.RemoteExecuteOperation.AfterRemoteExecuteAsync(System.Object)"/> method is implemented.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Operations.RemoteExecuteOperation.ExecuteAsync(Inedo.BuildMaster.Extensibility.Operations.IOperationExecutionContext)">
            <summary>
            Executes the operation.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Operations.RemoteExecuteOperation.ExecuteCommandLineAsync(Inedo.BuildMaster.Extensibility.Operations.IOperationExecutionContext,Inedo.Agents.RemoteProcessStartInfo)">
            <summary>
            Executes the specified process asychronously and writes process output to the operation's log.
            </summary>
            <param name="context">The execution context.</param>
            <param name="startInfo">The process start info.</param>
            <returns>Exit code of the process.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Operations.RemoteExecuteOperation.ExecuteCommandLineAsync(Inedo.BuildMaster.Extensibility.Operations.IRemoteOperationExecutionContext,Inedo.Agents.RemoteProcessStartInfo)">
            <summary>
            Executes the specified process asychronously and writes process output to the operation's log.
            </summary>
            <param name="context">The execution context.</param>
            <param name="startInfo">The process start info.</param>
            <returns>Exit code of the process.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Operations.RemoteExecuteOperation.BeforeRemoteExecuteAsync(Inedo.BuildMaster.Extensibility.Operations.IOperationExecutionContext)">
            <summary>
            Invoked on the BuildMaster server before <see cref="M:Inedo.BuildMaster.Extensibility.Operations.RemoteExecuteOperation.RemoteExecuteAsync(Inedo.BuildMaster.Extensibility.Operations.IRemoteOperationExecutionContext)"/> is called remotely.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Operations.RemoteExecuteOperation.AfterRemoteExecuteAsync(System.Object)">
            <summary>
            Invoked on the BuildMaster server after <see cref="M:Inedo.BuildMaster.Extensibility.Operations.RemoteExecuteOperation.RemoteExecuteAsync(Inedo.BuildMaster.Extensibility.Operations.IRemoteOperationExecutionContext)"/> is called remotely.
            </summary>
            <param name="result">The value returned from <see cref="M:Inedo.BuildMaster.Extensibility.Operations.RemoteExecuteOperation.RemoteExecuteAsync(Inedo.BuildMaster.Extensibility.Operations.IRemoteOperationExecutionContext)"/>.</param>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.TimeSpanUnitAttribute">
            <summary>
            Specifies the default unit to use for a <see cref="T:System.TimeSpan"/> property.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.TimeSpanUnitAttribute.#ctor(Inedo.BuildMaster.Extensibility.TimeSpanUnit)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.TimeSpanUnitAttribute"/> class.
            </summary>
            <param name="unit">The desired unit.</param>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.TimeSpanUnitAttribute.Unit">
            <summary>
            Gets the unit.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.TimeSpanUnitAttribute.GetTimeSpan(System.Double)">
            <summary>
            Gets the timespan from the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns>The timespan.</returns>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.TimeSpanUnit">
            <summary>
            Indicates how a value should be converted to a timespan.
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Extensibility.TimeSpanUnit.Seconds">
            <summary>
            The unit should be displayed in seconds.
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Extensibility.TimeSpanUnit.Minutes">
            <summary>
            The unit should be displayed in minutes.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.VariableFunctions.LegacyAliasAttribute">
            <summary>
            Indicates that a <see cref="T:Inedo.BuildMaster.Extensibility.VariableFunctions.VariableFunctionBase"/> can be used in a legacy plan
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.VariableFunctions.LegacyAliasAttribute.LegacyAlias">
            <summary>
            Gets or sets the alias for the function if it is accessible as a legacy variable.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.VariableFunctions.LegacyAliasAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.VariableFunctions.LegacyAliasAttribute"/> class.
            </summary>
            <param name="legacyAlias">The legacy alias.</param>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.VariableFunctions.ScalarVariableFunction">
            <summary>
            Base class for scalar variable functions.
            </summary>
            <seealso cref="T:Inedo.BuildMaster.Extensibility.VariableFunctions.VectorVariableFunction"/>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.VariableFunctions.ScalarVariableFunction.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.VariableFunctions.ScalarVariableFunction"/> class.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.VariableFunctions.ScalarVariableFunction.Evaluate(Inedo.BuildMaster.Extensibility.IGenericBuildMasterContext)">
            <summary>
            Evaluates the function and returns the result.
            </summary>
            <param name="context">The current execution context if applicable.</param>
            <returns>Result of the function.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.VariableFunctions.ScalarVariableFunction.EvaluateScalar(Inedo.BuildMaster.Extensibility.IGenericBuildMasterContext)">
            <summary>
            Evaluates the function and returns the result.
            </summary>
            <param name="context">The current execution context if applicable.</param>
            <returns>Result of the function.</returns>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.VariableFunctions.ScalarVariableFunctionBase">
            <summary>
            Base class for scalar variable functions.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.VariableFunctions.ScalarVariableFunctionBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.VariableFunctions.ScalarVariableFunctionBase"/> class.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.VariableFunctions.VariableFunctionArgumentException">
            <summary>
            Represents errors due to invalid variable function arguments.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.VariableFunctions.VariableFunctionArgumentException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.VariableFunctions.VariableFunctionArgumentException"/> class.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.VariableFunctions.VariableFunctionArgumentException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.VariableFunctions.VariableFunctionArgumentException"/> class.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.VariableFunctions.VariableFunctionArgumentException.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.VariableFunctions.VariableFunctionArgumentException"/> class.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="argumentName">The name of the argument which was invalid.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.VariableFunctions.VariableFunctionArgumentException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.VariableFunctions.VariableFunctionArgumentException"/> class.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="inner">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.VariableFunctions.VariableFunctionArgumentException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.VariableFunctions.VariableFunctionArgumentException"/> class.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.VariableFunctions.VariableFunctionArgumentMissingException">
            <summary>
            Represents errors due to missing variable function arguments.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.VariableFunctions.VariableFunctionArgumentMissingException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.VariableFunctions.VariableFunctionArgumentMissingException"/> class.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.VariableFunctions.VariableFunctionArgumentMissingException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.VariableFunctions.VariableFunctionArgumentMissingException"/> class.
            </summary>
            <param name="argumentName">The name of the missing argument.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.VariableFunctions.VariableFunctionArgumentMissingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.VariableFunctions.VariableFunctionArgumentMissingException"/> class.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.VariableFunctions.VariableFunctionException">
            <summary>
            Represents errors which occur during variable function evaluation.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.VariableFunctions.VariableFunctionException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.VariableFunctions.VariableFunctionException"/> class.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.VariableFunctions.VariableFunctionException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.VariableFunctions.VariableFunctionException"/> class.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.VariableFunctions.VariableFunctionException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.VariableFunctions.VariableFunctionException"/> class.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="inner">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.VariableFunctions.VariableFunctionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.VariableFunctions.VariableFunctionException"/> class.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.VariableFunctions.VariableFunctionParameterAttribute">
            <summary>
            Indicates that a property of a variable function implementation is a parameter.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.VariableFunctions.VariableFunctionParameterAttribute.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.VariableFunctions.VariableFunctionParameterAttribute"/> class.
            </summary>
            <param name="index">The parameter index.</param>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.VariableFunctions.VariableFunctionParameterAttribute.Index">
            <summary>
            Gets the positional parameter index.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.VariableFunctions.VariableFunctionParameterAttribute.Optional">
            <summary>
            Gets or sets a value indicating whether this parameter is optional.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.VariableFunctions.VariadicVariableFunctionAttribute">
            <summary>
            Indicates that a variable function is variadic.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.VariableFunctions.VariadicVariableFunctionAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.VariableFunctions.VariadicVariableFunctionAttribute"/> class.
            </summary>
            <param name="variadicPropertyName">The name of the property on the variable function class that represents variadic arguments.</param>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.VariableFunctions.VariadicVariableFunctionAttribute.VariadicPropertyName">
            <summary>
            Gets the name of the property on the variable function class that represents variadic arguments.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.VariableFunctions.VectorVariableFunction">
            <summary>
            Base class for vector variable functions.
            </summary>
            <seealso cref="T:Inedo.BuildMaster.Extensibility.VariableFunctions.ScalarVariableFunctionBase"/>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.VariableFunctions.VectorVariableFunction.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.VariableFunctions.VectorVariableFunction"/> class.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.VariableFunctions.VectorVariableFunction.Evaluate(Inedo.BuildMaster.Extensibility.IGenericBuildMasterContext)">
            <summary>
            Evaluates the function and returns the result.
            </summary>
            <param name="context">The current execution context if applicable.</param>
            <returns>Result of the function.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.VariableFunctions.VectorVariableFunction.EvaluateVector(Inedo.BuildMaster.Extensibility.IGenericBuildMasterContext)">
            <summary>
            Evaluates the function and returns the result.
            </summary>
            <param name="context">The current execution context if applicable.</param>
            <returns>Result of the function.</returns>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.VariableFunctions.VectorVariableFunctionBase">
            <summary>
            Base class for vector variable functions.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.VariableFunctions.VectorVariableFunctionBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.VariableFunctions.VectorVariableFunctionBase"/> class.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.VariableFunctions.VariableFunction">
            <summary>
            Base class for all variable functions.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.VariableFunctions.VariableFunction.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.VariableFunctions.VariableFunction"/> class.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.VariableFunctions.VariableFunction.Evaluate(Inedo.BuildMaster.Extensibility.IGenericBuildMasterContext)">
            <summary>
            Evaluates the function and returns the result.
            </summary>
            <param name="context">The current execution context if applicable.</param>
            <returns>Result of the function.</returns>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.VariableFunctions.VariableFunctionBase">
            <summary>
            Base class for all variable functions.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.VariableFunctions.VariableFunctionBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.VariableFunctions.VariableFunctionBase"/> class.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.VariableFunctions.ParameterDescriptionAttribute">
            <summary>
            Provides information about expected function parameters.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.VariableFunctions.ParameterDescriptionAttribute.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.VariableFunctions.ParameterDescriptionAttribute"/> class.
            </summary>
            <param name="index">The zero-based index of the parameter.</param>
            <param name="name">The name of the parameter.</param>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.VariableFunctions.ParameterDescriptionAttribute.Index">
            <summary>
            Gets the index of the parameter.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.VariableFunctions.ParameterDescriptionAttribute.Name">
            <summary>
            Gets the name of the parameter.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.VariableFunctions.ParameterDescriptionAttribute.Summary">
            <summary>
            Gets the summary of the parameter.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.VariableFunctions.ParameterDescriptionAttribute.IsRequired">
            <summary>
            Gets or sets a value indicating whether the parameter is required.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.VariableFunctions.VariableFunctionPropertiesAttribute">
            <summary>
            Describes a variable function.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.VariableFunctions.VariableFunctionPropertiesAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.VariableFunctions.VariableFunctionPropertiesAttribute"/> class.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.VariableFunctions.VariableFunctionPropertiesAttribute.LegacyAlias">
            <summary>
            Gets or sets the alias for the function if it is accessible as a legacy variable.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.VariableFunctions.VariableFunctionPropertiesAttribute.Scope">
            <summary>
            Gets or sets the scope in which the function is designed to be used.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.VariableFunctions.VariableFunctionPropertiesAttribute.Category">
            <summary>
            Gets or sets the category of the function.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.VariableFunctions.VariableFunctionScope">
            <summary>
            Specifies the scope a function is designed to be used in.
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Extensibility.VariableFunctions.VariableFunctionScope.Global">
            <summary>
            The function should be accessible from any scope.
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Extensibility.VariableFunctions.VariableFunctionScope.ApplicationGroup">
            <summary>
            The function should be accessible when an application group is in scope.
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Extensibility.VariableFunctions.VariableFunctionScope.Application">
            <summary>
            The function should be accessible when an application is in scope.
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Extensibility.VariableFunctions.VariableFunctionScope.Release">
            <summary>
            The function should be accessible when a release is in scope.
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Extensibility.VariableFunctions.VariableFunctionScope.Build">
            <summary>
            The function should be accessible when a build is in scope.
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Extensibility.VariableFunctions.VariableFunctionScope.Environment">
            <summary>
            The function should be accessible when an environment is in scope.
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Extensibility.VariableFunctions.VariableFunctionScope.Execution">
            <summary>
            The function should be accessible when an execution is in scope.
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Extensibility.VariableFunctions.VariableFunctionScope.Deployable">
            <summary>
            The function should be accessible when a deployable is in scope.
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Extensibility.VariableFunctions.VariableFunctionScope.Server">
            <summary>
            The function should be accessible when a server is in scope.
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Extensibility.VariableFunctions.VariableFunctionScope.AgentBasedAction">
            <summary>
            The function should be accessible during agent-based action execution.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.DisableVariableExpansionAttribute">
            <summary>
            Indicates that a property should not have its variables automatically expanded.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.DisableVariableExpansionAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.DisableVariableExpansionAttribute"/> class.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.BuildImporters.BuildImporterBase">
            <summary>
            Responsible for importing files and creating artifacts against builds.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.BuildImporters.BuildImporterBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.BuildImporters.BuildImporterBase"/> class.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.BuildImporters.BuildImporterBase.ServerId">
            <summary>
            Gets or sets the server ID.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.BuildImporters.BuildImporterBase.ExtensionConfigurerId">
            <summary>
            Gets or sets the extension configurer ID.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.BuildImporters.BuildImporterBase.DeployableName">
            <summary>
            Gets or sets the name of the deployable.
            </summary>
        </member>
        <member name="E:Inedo.BuildMaster.Extensibility.BuildImporters.BuildImporterBase.MessageLogged">
            <summary>
            Occurs when a message is logged.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.BuildImporters.BuildImporterBase.Import(Inedo.BuildMaster.Extensibility.BuildImporters.IBuildImporterContext)">
            <summary>
            Imports a build with the specified context.
            </summary>
            <param name="context">The context of the build to import.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.BuildImporters.BuildImporterBase.Log(Inedo.Diagnostics.MessageLevel,System.String)">
            <summary>
            Writes the specified message to the build importer log.
            </summary>
            <param name="logLevel">Log level of the message.</param>
            <param name="message">Message to log.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.BuildImporters.BuildImporterBase.OnMessageLogged(Inedo.Diagnostics.LogMessageEventArgs)">
            <summary>
            Raises the <see cref="E:Inedo.BuildMaster.Extensibility.BuildImporters.BuildImporterBase.MessageLogged"/> event.
            </summary>
            <param name="e">Contains information about the log message.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.BuildImporters.BuildImporterBase.GetExtensionConfigurer">
            <summary>
            Returns the configurer for the extension which implements this instance.
            </summary>
            <returns>Instance of the extension configurer if applicable.</returns>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.BuildImporters.BuildImporterTemplateBase">
            <summary>
            Defines initial configuration values and constraints for a <see cref="T:Inedo.BuildMaster.Extensibility.BuildImporters.BuildImporterBase"/>.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.BuildImporters.BuildImporterTemplateBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.BuildImporters.BuildImporterTemplateBase"/> class.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.BuildImporters.BuildImporterTemplateBase.BuildImporterType">
            <summary>
            Gets the type of the build importer.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.BuildImporters.BuildImporterTemplateBase.ServerId">
            <summary>
            Gets or sets the server ID.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.BuildImporters.BuildImporterTemplateBase.ExtensionConfigurerId">
            <summary>
            Gets or sets the extension configurer ID.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.BuildImporters.BuildImporterTemplateBase.DeployableName">
            <summary>
            Gets or sets the name of the deployable.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.BuildImporters.BuildImporterTemplateBase.GetDescription">
            <summary>
            Creates a control that can represent the configuration of this template
            </summary>
            <returns></returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.BuildImporters.BuildImporterTemplateBase.GetExtensionConfigurer">
            <summary>
            Returns the configurer for the extension which implements this instance.
            </summary>
            <returns>Instance of the extension configurer if applicable.</returns>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.BuildImporters.BuildImporterTemplateBase`1">
            <summary>
            Defines initial configuration values and constraints for a <see cref="T:Inedo.BuildMaster.Extensibility.BuildImporters.BuildImporterBase"/>.
            </summary>
            <typeparam name="TImporter">A <see cref="T:Inedo.BuildMaster.Extensibility.BuildImporters.BuildImporterBase"/> type.</typeparam>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.BuildImporters.BuildImporterTemplateBase`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.BuildImporters.BuildImporterTemplateBase`1"/> class.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.BuildImporters.BuildImporterTemplateBase`1.BuildImporterType">
            <summary>
            Gets the type of the build importer.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.BuildImporters.BuildImporterTemplateAttribute">
            <summary>
            Describes a <see cref="T:Inedo.BuildMaster.Extensibility.BuildImporters.BuildImporterBase"/>.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.BuildImporters.BuildImporterTemplateAttribute.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.BuildImporters.BuildImporterTemplateAttribute" /> class.
            </summary>
            <param name="templateType">Type of the template.</param>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.BuildImporters.BuildImporterTemplateAttribute.TemplateType">
            <summary>
            Gets the type of the template.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.BuildImporters.IBuildImporterContext">
            <summary>
            Contains build importer context information.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.BuildImporters.IBuildImporterContext.ApplicationId">
            <summary>
            Gets the ID of the application in the current context.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.BuildImporters.ICustomBuildNumberProvider">
            <summary>
            Indicates that a <see cref="T:Inedo.BuildMaster.Extensibility.BuildImporters.BuildImporterBase"/> supports getting a custom build number
            from a third-party source.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.BuildImporters.ICustomBuildNumberProvider.BuildNumber">
            <summary>
            Gets the build number from the custom <see cref="T:Inedo.BuildMaster.Extensibility.BuildImporters.BuildImporterBase"/>, or null if BuildMaster
            should auto-generate the build number.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.EventListeners.EmailEventListenerBase">
            <summary>
            An event listener that provides additional email functionality
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.EventListeners.EmailEventListenerBase.EmailAddresses">
            <summary>
            Gets or sets the email addresses that instances may use to send out emails.
            </summary>
            <remarks>
            When null or empty, the default email address of the context's owner will be used.
            </remarks>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.EventListeners.EmailEventListenerBase.GetEmailAddresses">
            <summary>
            Gets the email addresses.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.EventListeners.EmailEventListenerBase.GeneratePlainTextBodyFromHtml(System.String)">
            <summary>
            Generates the plain text from HTML.
            </summary>
            <param name="htmlEmailBody">The HTML email body.</param>
            <returns></returns>
            <remarks>
            This method is used by <see cref="M:Inedo.BuildMaster.Extensibility.EventListeners.EmailEventListenerBase.SendEmail(System.String,System.String)"/> to generate a plaintext
            message from html. This is very simplistic; it uses a regex to strip tags, replaces BR with linebreaks
            and de-encodes nbsp, lt, gt, and amp entities. It's fine for simple html, but if you 
            need good text formating, use a different overload
            </remarks>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.EventListeners.EmailEventListenerBase.SendEmailFromTemplate(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Sends a notification email with variable replacements.
            </summary>
            <param name="subject">The subject.</param>
            <param name="variableReplacements">The variable replacements.</param>
            <remarks>The email HTML and plain-text bodies are loaded from embedded resources in the same path as
            the type of the <see cref="T:Inedo.BuildMaster.Extensibility.EventListeners.EventListenerBase"/>, and the namespace must match the folder path of both .txt and .html resources.</remarks>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.EventListeners.EmailEventListenerBase.GetHtmlTemplateStream">
            <summary>
            Gets the HTML template stream used by the <see cref="M:SendEmailFromTemplate"/> method.
            </summary>
            <returns>A stream which contains the HTML email body template.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.EventListeners.EmailEventListenerBase.GetPlainTextBodyStream">
            <summary>
            Gets the plain-text body template stream used by the <see cref="M:SendEmailFromTemplate"/> method.
            </summary>
            <returns>A stream which contains the plain-text email body template.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.EventListeners.EmailEventListenerBase.GetMailMessage(System.String,System.String,System.String)">
            <summary>
            Gets the mail message.
            </summary>
            <param name="subject">The subject.</param>
            <param name="htmlEmailBody">The HTML email body.</param>
            <param name="plainTextBody">The plain text body.</param>
            <returns></returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.EventListeners.EmailEventListenerBase.GetDefaultEmailAddress">
            <summary>
            Gets the default email address of the event listener's owner.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.EventListeners.EmailEventListenerBase.GetDefaultEmailAddress(System.String)">
            <summary>
            Gets the default email address of the specified username.
            </summary>
            <param name="username">The username.</param>
            <returns></returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.EventListeners.EmailEventListenerBase.SendEmail(System.String,System.String)">
            <summary>
            Sends the email.
            </summary>
            <param name="subject">The subject.</param>
            <param name="htmlEmailBody">The HTML email body.</param>
            <remarks>
            This uses <see cref="M:Inedo.BuildMaster.Extensibility.EventListeners.EmailEventListenerBase.GeneratePlainTextBodyFromHtml(System.String)"/> to generate a plain
            body text</remarks>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.EventListeners.EmailEventListenerBase.SendEmail(System.String,System.String,System.String)">
            <summary>
            Sends the email.
            </summary>
            <param name="subject">The subject.</param>
            <param name="htmlEmailBody">The HTML email body.</param>
            <param name="plainTextBody">The plain text body.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.EventListeners.EmailEventListenerBase.SendEmail(System.Net.Mail.MailMessage)">
            <summary>
            Sends the email.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.EventListeners.EmailEventListenerBase.ApplyBuildMasterEmailTemplate(System.String)">
            <summary>
            Applies the build master email template.
            </summary>
            <param name="htmlBody">The HTML body.</param>
            <returns></returns>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.EventListeners.EmailEventListenerBase`1">
            <summary>
            An event listener that provides additional email functionality
            </summary>
            <typeparam name="TEvent">The type of the event.</typeparam>
            <remarks>
            This class is intended to make listening to a single event simpler;
            for multiple event listening, use the base class 
            <see cref="T:Inedo.BuildMaster.Extensibility.EventListeners.EventListenerBase" />
            </remarks>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.EventListeners.EmailEventListenerBase`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.EventListeners.EmailEventListenerBase`1"/> class.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.EventListeners.EmailEventListenerBase`1.GetEventTypes">
            <summary>
            Gets the event type codes that this listener may listen to
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.EventListeners.EmailEventListenerBase`1.EventOccurred(Inedo.BuildMaster.Events.BuildMasterEvent)">
            <summary>
            Events the occurred.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.EventListeners.EmailEventListenerBase`1.EventOccurred(`0)">
            <summary>
            Events the occurred.
            </summary>
            <param name="eventDetails">The event details.</param>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.EventListeners.EventListenerBase">
            <summary>
            Event listeners are triggered in response to a BuildMaster event.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.EventListeners.EventListenerBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.EventListeners.EventListenerBase"/> class.
            </summary>
        </member>
        <member name="E:Inedo.BuildMaster.Extensibility.EventListeners.EventListenerBase.MessageLogged">
            <summary>
            Occurs when a log message has been received.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.EventListeners.EventListenerBase.OwnerUsername">
            <summary>
            Gets or sets the user name of the user which owns this event listener.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.EventListeners.EventListenerBase.GetEventTypes">
            <summary>
            Gets the event type codes that this listener responds to.
            </summary>
            <returns>Collection of event type codes.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.EventListeners.EventListenerBase.EventOccurred(Inedo.BuildMaster.Events.BuildMasterEvent)">
            <summary>
            Invoked when one of the events indicated by the <see cref="M:Inedo.BuildMaster.Extensibility.EventListeners.EventListenerBase.GetEventTypes"/> method occurs.
            </summary>
            <param name="eventDetails">The event details.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.EventListeners.EventListenerBase.GetCustomDescription">
            <summary>
            Returns a user friendly description of the event listener and its configuration.
            </summary>
            <returns>A description of the configured instance.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.EventListeners.EventListenerBase.GetEventTypesSupported(System.Type)">
            <summary>
            Returns a sequence of event types which the specified event listener type supports.
            </summary>
            <param name="eventListenerType">The event listener type.</param>
            <returns>Sequence of supported event listeners.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="eventListenerType"/> is null.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="eventListenerType"/> does not inherit from <see cref="T:Inedo.BuildMaster.Extensibility.EventListeners.EventListenerBase"/>.</exception>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.EventListeners.EventListenerBase.Log(Inedo.Diagnostics.MessageLevel,System.String)">
            <summary>
            Writes the specified message to the log.
            </summary>
            <param name="logLevel">Log level of the message.</param>
            <param name="message">Message to log.</param>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.EventListeners.EventListenerBase`1">
            <summary>
            Event listeners are triggered in response to a BuildMaster event.
            </summary>
            <typeparam name="TEvent">The type of the event.</typeparam>
            <remarks>
            This class is intended to make listening to a single event simpler.
            To listen for multiple events inherit the <see cref="T:Inedo.BuildMaster.Extensibility.EventListeners.EventListenerBase" />
            class directly.
            </remarks>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.EventListeners.EventListenerBase`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.EventListeners.EventListenerBase`1"/> class.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.EventListeners.EventListenerBase`1.GetEventTypes">
            <summary>
            Gets the event type codes that this listener responds to.
            </summary>
            <returns>Collection of event type codes.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.EventListeners.EventListenerBase`1.EventOccurred(Inedo.BuildMaster.Events.BuildMasterEvent)">
            <summary>
            Invoked when one of the events indicated by the <see cref="M:Inedo.BuildMaster.Extensibility.EventListeners.EventListenerBase`1.GetEventTypes"/> method occurs.
            </summary>
            <param name="eventDetails">The event details.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.EventListeners.EventListenerBase`1.EventOccurred(`0)">
            <summary>
            Invoked when the event occurs.
            </summary>
            <param name="eventDetails">The event details.</param>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.EventListeners.EventListenerPropertiesAttribute">
            <summary>
            Describes an event listener.
            </summary>
            <seealso cref="T:Inedo.BuildMaster.Extensibility.EventListeners.EventListenerBase"/>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.EventListeners.EventListenerPropertiesAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.EventListeners.EventListenerPropertiesAttribute"/> class.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.EventListeners.EventListenerPropertiesAttribute.RequiresManageAllPrivileges">
            <summary>
            Gets a value indicating whether creation of this notifier requires the Events_ManageAllNotifiers secured task.
            </summary>
            <remarks>
            When set to true, this event listener will not be displayed for low-privileged users who want to create personal event listeners.
            </remarks>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.IssueTrackerConnections.IIssueCloser">
            <summary>
            Implemented by an <see cref="T:Inedo.BuildMaster.Extensibility.IssueTrackerConnections.IssueTrackerConnectionBase"/> to indicate that
            the issue tracker supports closing issues.
            </summary>
            <seealso cref="T:Inedo.BuildMaster.Extensibility.IssueTrackerConnections.IssueTrackerConnectionBase"/>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.IssueTrackerConnections.IIssueCloser.CloseIssue(Inedo.BuildMaster.Extensibility.IssueTrackerConnections.IssueTrackerConnectionContext,System.String)">
            <summary>
            Closes a specific issue in the specified context.
            </summary>
            <param name="context">The current issue tracker context.</param>
            <param name="issueId">The ID of the issue to close.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="context"/> is null or <paramref name="issueId"/> is null or empty.</exception>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.IssueTrackerConnections.IIssueCloser.CloseAllIssues(Inedo.BuildMaster.Extensibility.IssueTrackerConnections.IssueTrackerConnectionContext)">
            <summary>
            Closes all issues in the specified context.
            </summary>
            <param name="context">The current issue tracker context.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="context"/> is null.</exception>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.IssueTrackerConnections.IIssueCommenter">
            <summary>
            Implemented by an <see cref="T:Inedo.BuildMaster.Extensibility.IssueTrackerConnections.IssueTrackerConnectionBase"/> to indicate that
            the issue tracker supports adding comments to issues.
            </summary>
            <seealso cref="T:Inedo.BuildMaster.Extensibility.IssueTrackerConnections.IssueTrackerConnectionBase"/>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.IssueTrackerConnections.IIssueCommenter.AddComment(Inedo.BuildMaster.Extensibility.IssueTrackerConnections.IssueTrackerConnectionContext,System.String,System.String)">
            <summary>
            Adds the specified text as a comment to the specified issue.
            </summary>
            <param name="context">The current issue tracker context.</param>
            <param name="issueId">The ID of the issue to add the comment to.</param>
            <param name="commentText">The text of the comment.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="context"/> is null or <paramref name="issueId"/> is null or empty.</exception>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.IssueTrackerConnections.IIssueStatusUpdater">
            <summary>
            Implemented by an <see cref="T:Inedo.BuildMaster.Extensibility.IssueTrackerConnections.IssueTrackerConnectionBase"/> to indicate that
            the issue tracker supports changing the status of issues.
            </summary>
            <seealso cref="T:Inedo.BuildMaster.Extensibility.IssueTrackerConnections.IssueTrackerConnectionBase"/>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.IssueTrackerConnections.IIssueStatusUpdater.ChangeIssueStatus(Inedo.BuildMaster.Extensibility.IssueTrackerConnections.IssueTrackerConnectionContext,System.String,System.String)">
            <summary>
            Changes the status of the specified issue.
            </summary>
            <param name="context">The current issue tracker context.</param>
            <param name="issueId">The ID of the issue whose status will be changed.</param>
            <param name="issueStatus">The new status of the issue.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="context"/> is null or <paramref name="issueId"/> is null or empty.</exception>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.IssueTrackerConnections.IIssueStatusUpdater.ChangeStatusForAllIssues(Inedo.BuildMaster.Extensibility.IssueTrackerConnections.IssueTrackerConnectionContext,System.String,System.String)">
            <summary>
            Changes the status of all of the issues in the specified context that have the
            specified initial status.
            </summary>
            <param name="context">The current issue tracker context.</param>
            <param name="fromStatus">The initial status. If null, any status will match.</param>
            <param name="toStatus">The new status of the matching issues.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="context"/> is null.</exception>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.IssueTrackerConnections.IIssueTrackerIssue">
            <summary>
            Describes an issue in an issue tracker.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.IssueTrackerConnections.IIssueTrackerIssue.Id">
            <summary>
            Gets the unique ID of the issue.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.IssueTrackerConnections.IIssueTrackerIssue.Status">
            <summary>
            Gets the current status of the issue.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.IssueTrackerConnections.IIssueTrackerIssue.Type">
            <summary>
            Gets the type of the issue (e.g. bug, feature, task).
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.IssueTrackerConnections.IIssueTrackerIssue.Title">
            <summary>
            Gets the HTML title of the issue.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.IssueTrackerConnections.IIssueTrackerIssue.Description">
            <summary>
            Gets the HTML description of the issue.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.IssueTrackerConnections.IIssueTrackerIssue.Submitter">
            <summary>
            Gets the name of the user that submitted the issue.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.IssueTrackerConnections.IIssueTrackerIssue.SubmittedDate">
            <summary>
            Gets the UTC date when the issue was submitted.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.IssueTrackerConnections.IIssueTrackerIssue.IsClosed">
            <summary>
            Gets a value indicating whether the issue is considered closed.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.IssueTrackerConnections.IIssueTrackerIssue.Url">
            <summary>
            Gets the URL of the issue in the original issue tracker if applicable.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.IssueTrackerConnections.IReleaseManager">
            <summary>
            Implemented by an <see cref="T:Inedo.BuildMaster.Extensibility.IssueTrackerConnections.IssueTrackerConnectionBase"/> to indicate that
            the issue tracker supports creating and closing releases.
            </summary>
            <seealso cref="T:Inedo.BuildMaster.Extensibility.IssueTrackerConnections.IssueTrackerConnectionBase"/>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.IssueTrackerConnections.IReleaseManager.CreateRelease(Inedo.BuildMaster.Extensibility.IssueTrackerConnections.IssueTrackerConnectionContext)">
            <summary>
            Creates the release specified by the current context in the issue tracker.
            </summary>
            <param name="context">The current issue tracker context.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="context"/> is null.</exception>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.IssueTrackerConnections.IReleaseManager.DeployRelease(Inedo.BuildMaster.Extensibility.IssueTrackerConnections.IssueTrackerConnectionContext)">
            <summary>
            Closes the release specified by the current context in the issue tracker.
            </summary>
            <param name="context">The current issue tracker context.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="context"/> is null.</exception>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.IssueTrackerConnections.IssueTrackerApplicationConfigurationBase">
            <summary>
            Container for application-level filtering options used by an <see cref="T:Inedo.BuildMaster.Extensibility.IssueTrackerConnections.IssueTrackerConnectionBase"/>.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.IssueTrackerConnections.IssueTrackerApplicationConfigurationBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.IssueTrackerConnections.IssueTrackerApplicationConfigurationBase"/> class.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.IssueTrackerConnections.IssueTrackerApplicationConfigurationBase.GetDescription">
            <summary>
            Returns a friendly description of the issue tracker application configuration.
            </summary>
            <returns>Friendly description of the issue tracker application configuration.</returns>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.IssueTrackerConnections.IssueTrackerConnectionBase">
            <summary>
            Represents a connection to an issue tracker.
            </summary>
            <remarks>
            This is the preferred base class for issue tracking integration.
            </remarks>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.IssueTrackerConnections.IssueTrackerConnectionBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.IssueTrackerConnections.IssueTrackerConnectionBase"/> class.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.IssueTrackerConnections.IssueTrackerConnectionBase.GetDescription">
            <summary>
            Returns a friendly description of the issue tracker connection and its relevant settings.
            </summary>
            <returns>Friendly description of the issue tracker connection and its relevant settings.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.IssueTrackerConnections.IssueTrackerConnectionBase.ToString">
            <summary>
            Returns a string representation of the issue tracker.
            </summary>
            <returns>A string representation of the issue tracker.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.IssueTrackerConnections.IssueTrackerConnectionBase.GetDefaultApplicationConfiguration(System.Int32)">
            <summary>
            Returns the default instance of the issue tracker connection's <see cref="T:Inedo.BuildMaster.Extensibility.IssueTrackerConnections.IssueTrackerApplicationConfigurationBase"/> instance
            which controls how application-level filtering is performed.
            </summary>
            <param name="applicationId">The ID of the BuildMaster application in the current context.</param>
            <returns>Instace of the connection's <see cref="T:Inedo.BuildMaster.Extensibility.IssueTrackerConnections.IssueTrackerApplicationConfigurationBase"/> if applicable; otherwise null.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.IssueTrackerConnections.IssueTrackerConnectionBase.EnumerateIssues(Inedo.BuildMaster.Extensibility.IssueTrackerConnections.IssueTrackerConnectionContext)">
            <summary>
            Returns a sequence of all of the issues in the specified context.
            </summary>
            <param name="context">The current issue tracker context.</param>
            <returns>All of the issues in the specified context.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="context"/> is null.</exception>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.IssueTrackerConnections.IssueTrackerConnectionBase.GetIssues(System.String)">
            <summary>
            Deprecated. Do not use.
            </summary>
            <param name="releaseNumber"></param>
            <returns></returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.IssueTrackerConnections.IssueTrackerConnectionBase.IsIssueClosed(Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IssueTrackerIssue)">
            <summary>
            Deprecated. Do not use.
            </summary>
            <param name="issue"></param>
            <returns></returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.IssueTrackerConnections.IssueTrackerConnectionBase.GetIssueUrl(Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IssueTrackerIssue)">
            <summary>
            Deprecated. Do not use.
            </summary>
            <param name="issue"></param>
            <returns></returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.IssueTrackerConnections.IssueTrackerConnectionBase.AreAllIssuesClosed(System.String)">
            <summary>
            Deprecated. Do not use.
            </summary>
            <param name="releaseNumber"></param>
            <returns></returns>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.IssueTrackerConnections.IssueTrackerConnectionContext">
            <summary>
            Contains context information for connecting to an issue tracker.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.IssueTrackerConnections.IssueTrackerConnectionContext.#ctor(Inedo.BuildMaster.Extensibility.IGenericBuildMasterContext,Inedo.BuildMaster.Extensibility.IssueTrackerConnections.IssueTrackerApplicationConfigurationBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.IssueTrackerConnections.IssueTrackerConnectionContext"/> class.
            </summary>
            <param name="context">The generic context to build this context from.</param>
            <param name="applicationConfiguration">The issue tracker specific application configuration.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.IssueTrackerConnections.IssueTrackerConnectionContext.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,Inedo.BuildMaster.Extensibility.IssueTrackerConnections.IssueTrackerApplicationConfigurationBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.IssueTrackerConnections.IssueTrackerConnectionContext"/> class.
            </summary>
            <param name="applicationGroupId">The current application group ID.</param>
            <param name="applicationId">The current application ID.</param>
            <param name="releaseNumber">The current release number.</param>
            <param name="applicationConfiguration">The issue tracker specific application configuration.</param>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.IssueTrackerConnections.IssueTrackerConnectionContext.ApplicationGroupId">
            <summary>
            Gets the ID of the application group ID in the current context, or null if not applicable.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.IssueTrackerConnections.IssueTrackerConnectionContext.ApplicationId">
            <summary>
            Gets the ID of the application in the current context, or null if not applicable.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.IssueTrackerConnections.IssueTrackerConnectionContext.ReleaseNumber">
            <summary>
            Gets the release number in the current context, or null if not applicable.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.IssueTrackerConnections.IssueTrackerConnectionContext.WorkflowId">
            <summary>
            Gets the ID of the workflow in the current context, or null if not applicable.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.IssueTrackerConnections.IssueTrackerConnectionContext.ApplicationConfiguration">
            <summary>
            Gets the application specific configuration for the issue tracker.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.OutputAttribute">
            <summary>
            Indicates that a property acts as a named return value.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.OutputAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.OutputAttribute"/> class.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.PromotionRequirements.PromotionRequirementState">
            <summary>
            Indicates the current state of a promotion requirement.
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Extensibility.PromotionRequirements.PromotionRequirementState.NotMet">
            <summary>
            The promotion requirement is not met.
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Extensibility.PromotionRequirements.PromotionRequirementState.NotApplicable">
            <summary>
            The promotion requirement is not currently applicable.
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Extensibility.PromotionRequirements.PromotionRequirementState.Met">
            <summary>
            The promotion requirement is met.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.PromotionRequirements.PromotionRequirementStatus">
            <summary>
            Contains the current status of a promotion requirement.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.PromotionRequirements.PromotionRequirementStatus.#ctor(Inedo.BuildMaster.Extensibility.PromotionRequirements.PromotionRequirementState,Inedo.Documentation.RichDescription)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.PromotionRequirements.PromotionRequirementStatus"/> class.
            </summary>
            <param name="state">The current state of the promotion requirement.</param>
            <param name="description">Description of the current state of the promotion requirement.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.PromotionRequirements.PromotionRequirementStatus.#ctor(Inedo.BuildMaster.Extensibility.PromotionRequirements.PromotionRequirementState,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.PromotionRequirements.PromotionRequirementStatus"/> class.
            </summary>
            <param name="state">The current state of the promotion requirement.</param>
            <param name="description">Description of the current state of the promotion requirement.</param>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.PromotionRequirements.PromotionRequirementStatus.State">
            <summary>
            Gets the current state of the promotion requirement.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.PromotionRequirements.PromotionRequirementStatus.Description">
            <summary>
            Gets a description of the current state of the promotion requirement.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.PromotionRequirements.PromotionRequirementStatus.ToString">
            <summary>
            Returns a description of the current state of the promotion requirement.
            </summary>
            <returns>Description of the current state of the promotion requirement.</returns>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.PromotionRequirements.ArtifactPromotionRequirementBase">
            <summary>
            Provides common functionality for artifact-based promotion requirements.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.PromotionRequirements.ArtifactPromotionRequirementBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.PromotionRequirements.ArtifactPromotionRequirementBase"/> class.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.PromotionRequirements.ArtifactPromotionRequirementBase.ArtifactName">
            <summary>
            Gets or sets the name of the artifact.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.PromotionRequirements.ArtifactPromotionRequirementBase.DeployableId">
            <summary>
            Gets or sets the artifact's deployable ID.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.PromotionRequirements.ArtifactPromotionRequirementBase.ArtifactsBasePath">
            <summary>
            Gets the Artifacts Base Path on the BuildMaster Server.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.PromotionRequirements.ArtifactPromotionRequirementBase.GetArtifact(Inedo.BuildMaster.Extensibility.PromotionRequirements.PromotionContext)">
            <summary>
            Returns a stream of the raw compressed artifact data.
            </summary>
            <param name="context">Current promotion context.</param>
            <returns>Stream backed by the artifact file or null if the artifact was not found.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.PromotionRequirements.ArtifactPromotionRequirementBase.GetArtifactFiles(Inedo.BuildMaster.Extensibility.PromotionRequirements.PromotionContext)">
            <summary>
            Returns an array of files contained in the artifact.
            </summary>
            <param name="context">Current promotion context.</param>
            <returns>Array of files contained in the artifact.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.PromotionRequirements.ArtifactPromotionRequirementBase.GetArtifactFileInfo(Inedo.BuildMaster.Extensibility.PromotionRequirements.PromotionContext,System.String)">
            <summary>
            Returns information about a file in an artifact if the file was found; otherwise returns null.
            </summary>
            <param name="context">Current promotion context.</param>
            <param name="fileName">Name of the file in the artifact.</param>
            <returns>Information about a file in an artifact if this file was found; otherwise null.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.PromotionRequirements.ArtifactPromotionRequirementBase.OpenArtifactFile(Inedo.BuildMaster.Extensibility.PromotionRequirements.PromotionContext,System.String)">
            <summary>
            Returns a stream backed by a file in an artifact if the file was found; otherwise returns null.
            </summary>
            <param name="context">Current promotion context.</param>
            <param name="fileName">Name of the file in the artifact.</param>
            <returns>Stream backed by a file in an artifact if the file was found; otherwise null.</returns>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.PromotionRequirements.PromotionContext">
            <summary>
            Provides important information about a promotion.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.PromotionRequirements.PromotionContext.#ctor(System.Int32,System.String,System.String,System.String,System.Collections.Generic.ISet{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.PromotionRequirements.PromotionContext"/> class.
            </summary>
            <param name="applicationId">The application ID.</param>
            <param name="releaseNumber">The release number.</param>
            <param name="buildNumber">The build number.</param>
            <param name="pipelineStage">The name of the target pipeline stage.</param>
            <param name="environmentIds">The IDs of the environments in the target pipeline stage.</param>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.PromotionRequirements.PromotionContext.ApplicationId">
            <summary>
            Gets the current application ID.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.PromotionRequirements.PromotionContext.ReleaseNumber">
            <summary>
            Gets the current release number.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.PromotionRequirements.PromotionContext.BuildNumber">
            <summary>
            Gets the current build number.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.PromotionRequirements.PromotionContext.PipelineStage">
            <summary>
            Gets the target pipeline stage name.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.PromotionRequirements.PromotionContext.EnvironmentIds">
            <summary>
            Gets the environment IDs in the target pipeline stage.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.PromotionRequirements.PromotionRequirementBase">
            <summary>
            Represents a requirement that must be met before a build may be promoted.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.PromotionRequirements.PromotionRequirementBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.PromotionRequirements.PromotionRequirementBase"/> class.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.PromotionRequirements.PromotionRequirementBase.GetStatusAsync(Inedo.BuildMaster.Extensibility.PromotionRequirements.PromotionContext)">
            <summary>
            Returns the current status of the promotion requirement.
            </summary>
            <param name="context">The context of the current promotion.</param>
            <returns>The current status of the promotion requirement.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="context"/> is null.</exception>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.PromotionRequirements.PromotionRequirementBase.GetDescription">
            <summary>
            Returns a user-friendly description of the promotion requirement including relevant configuration.
            </summary>
            <returns>User-friendly description of the promotion requirement.</returns>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IContextFilterable">
            <summary>
            Indicates that a <see cref="T:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IssueTrackingProviderBase"/> can filter issues by context.
            </summary>
            <remarks>
            When this interface is implemented, BuildMaster will use this interface to retrieve issues
            instead of using the <see cref="M:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IssueTrackingProviderBase.GetIssues(System.String)"/> method on 
            <see cref="T:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IssueTrackingProviderBase"/>
            </remarks>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IContextFilterable.GetIssues(Inedo.BuildMaster.Extensibility.IGenericBuildMasterContext)">
            <summary>
            Returns an array of <see cref="T:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IssueTrackerIssue"/> objects that are for the current
            context.
            </summary>
            <param name="context">Context of issues to return.</param>
            <returns>Array of issues for the specified context.</returns>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IssueTrackerCategory">
            <summary>
            Represents a categorization of issues in an issue tracking system.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IssueTrackerCategory.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IssueTrackerCategory"/> class.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IssueTrackerCategory.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IssueTrackerCategory"/> class.
            </summary>
            <param name="categoryId">The category ID.</param>
            <param name="categoryName">The friendly name of the category.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IssueTrackerCategory.#ctor(System.String,System.String,Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IssueTrackerCategory[])">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IssueTrackerCategory"/> class.
            </summary>
            <param name="categoryId">The category ID.</param>
            <param name="categoryName">The friendly name of the category.</param>
            <param name="subcategories">Categories contained within the category; may be null.</param>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IssueTrackerCategory.CategoryId">
            <summary>
            Gets a string that uniquely identifies the category.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IssueTrackerCategory.CategoryName">
            <summary>
            Gets a string that is displayed to the user as the category name.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IssueTrackerCategory.Subcategories">
            <summary>
            Gets subcategories that are part of this category.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.ICategorizedIssue">
            <summary>
            Indicates that an issue is in one or more hierarchical category.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.ICategorizedIssue.Categories">
            <summary>
            Gets the hierarchical list of categories that an issue is contained in.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.ICategoryFilterable">
            <summary>
            Indicates that a <see cref="T:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IssueTrackingProviderBase"/> can filter issues by category.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.ICategoryFilterable.CategoryIdFilter">
            <summary>
            Gets or sets an array of Category Id's that correspond to the index of the <see cref="P:CategoryTypeNames"/> property.
            </summary>
            <remarks>
            The length of this array must always be less than or equal the length of the <see cref="P:CategoryTypeNames"/> property.
            </remarks>
            <example>
            For example, if <see cref="P:CategoryTypeNames"/> returns "Project", to filter on ProjectID 12, this would return would be:
                <code>new string[] { "12" };</code>
            </example>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.ICategoryFilterable.CategoryTypeNames">
            <summary>
            Gets an inheritor-defined array of category types.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.ICategoryFilterable.GetCategories">
            <summary>
            Returns an array of all appropriate categories defined within the provider.
            </summary>
            <remarks>
            The nesting level (i.e. <see cref="P:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IssueTrackerCategory.Subcategories"/>) can never be less than
            the length of <see cref="P:CategoryTypeNames"/>.
            </remarks>
            <returns>Categories defined within the provider.</returns>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IReleaseNumberCloser">
            <summary>
            Indicates that a <see cref="T:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IssueTrackingProviderBase"/> can close a release
            number at the source.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IReleaseNumberCloser.CloseReleaseNumber(System.String)">
            <summary>
            Closes the specified release number at the source.
            </summary>
            <param name="releaseNumber">Release number to close.</param>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IReleaseNumberCreator">
            <summary>
            Indicates that a <see cref="T:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IssueTrackingProviderBase"/> can create
            new release numbers at the source.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IReleaseNumberCreator.CreateReleaseNumber(System.String)">
            <summary>
            Creates the specified release number at the source.
            </summary>
            <param name="releaseNumber">Release number to create.</param>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IssueTrackerIssue">
            <summary>
            Base class for an issue in an issue tracker.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IssueTrackerIssue.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IssueTrackerIssue"/> class.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IssueTrackerIssue.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IssueTrackerIssue"/> class.
            </summary>
            <param name="issueId">The issue ID.</param>
            <param name="issueStatus">The issue status.</param>
            <param name="issueTitle">The issue title.</param>
            <param name="issueDescription">The issue description.</param>
            <param name="releaseNumber">The release number of the issue.</param>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IssueTrackerIssue.IssueId">
            <summary>
            Gets or sets the issue's unique identifier.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IssueTrackerIssue.IssueStatus">
            <summary>
            Gets or sets the issue's status.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IssueTrackerIssue.IssueTitle">
            <summary>
            Gets or sets the issue's title.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IssueTrackerIssue.IssueDescription">
            <summary>
            Gets or sets the issue's description.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IssueTrackerIssue.IssueDescriptionRenderMode">
            <summary>
            Gets the issue description render mode.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IssueTrackerIssue.ReleaseNumber">
            <summary>
            Gets or sets the issue's release number.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IssueTrackerIssue.RenderMode">
            <summary>
            The modes that an issue description may be rendered.
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IssueTrackerIssue.RenderMode.Text">
            <summary>
            Renders the description as plain text.
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IssueTrackerIssue.RenderMode.Html">
            <summary>
            Renders the description as HTML.
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IssueTrackerIssue.RenderMode.Markdown">
            <summary>
            Renders the description after transforming the input using Markdown.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IssueTrackingProviderBase">
            <summary>
            Base class for all issue tracking providers.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IssueTrackingProviderBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IssueTrackingProviderBase"/> class.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IssueTrackingProviderBase.GetIssueUrl(Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IssueTrackerIssue)">
            <summary>
            Returns a URL to the specified issue if the issue tracker is web-based.
            </summary>
            <param name="issue">The issue whose URL is returned.</param>
            <returns>The URL of the specified issue if applicable; otherwise null.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IssueTrackingProviderBase.GetCreateIssueUrl">
            <summary>
            Returns a URL to a page that can be used to create a new issue if the issue tracker is web-based.
            </summary>
            <returns>The URL of a page for creating a new issue if applicable; otherwise null.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IssueTrackingProviderBase.GetIssues(System.String)">
            <summary>
            Returns an array of <see cref="T:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IssueTrackerIssue"/> objects that are for the current
            release.
            </summary>
            <param name="releaseNumber">Release number of issues to return.</param>
            <returns>Array of issues for the specified release.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IssueTrackingProviderBase.AreAllIssuesClosed(System.String)">
            <summary>
            Returns a value indicating whether all issues are closed for a given release number.
            </summary>
            <param name="releaseNumber">Release number of issues to check.</param>
            <returns>True if all issues are closed for the release; otherwise false.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IssueTrackingProviderBase.IsIssueClosed(Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IssueTrackerIssue)">
            <summary>
            Returns a value indicating if the specified issue is closed.
            </summary>
            <param name="issue">IssueTrackerIssue to check for a closed state.</param>
            <returns>True if issue is closed; otherwise false.</returns>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IUpdatingProvider">
            <summary>
            Indicates that a <see cref="T:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IssueTrackingProviderBase"/> can update issues.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IUpdatingProvider.CanAppendIssueDescriptions">
            <summary>
            Gets a value indicating whether an issue's description can be appended to.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IUpdatingProvider.CanChangeIssueStatuses">
            <summary>
            Gets a value indicating whether an issue's status can be changed.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IUpdatingProvider.CanCloseIssues">
            <summary>
            Gets a value indicating whether an issue can be closed.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IUpdatingProvider.AppendIssueDescription(System.String,System.String)">
            <summary>
            Appends the specified text to the specified issue.
            </summary>
            <param name="issueId">Id of the issue.</param>
            <param name="textToAppend">Text to append to the issue description.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IUpdatingProvider.ChangeIssueStatus(System.String,System.String)">
            <summary>
            Changes the specified issue's status.
            </summary>
            <param name="issueId">ID of the issue.</param>
            <param name="newStatus">New status of the issue.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IUpdatingProvider.CloseIssue(System.String)">
            <summary>
            Closes the specified issue.
            </summary>
            <param name="issueId">ID of the issue.</param>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Providers.SourceControl.DistributedSourceControlProviderBase">
            <summary>
            Base class for distributed source control providers.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.SourceControl.DistributedSourceControlProviderBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Providers.SourceControl.DistributedSourceControlProviderBase"/> class.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.SourceControl.DistributedSourceControlProviderBase.DisplayEditor">
            <summary>
            Gets a value indicating whether to display the multiple repository editor.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.SourceControl.DistributedSourceControlProviderBase.LabelText">
            <summary>
            Gets the label text.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.SourceControl.DistributedSourceControlProviderBase.Repositories">
            <summary>
            Gets or sets the repositories.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.SourceControl.DistributedSourceControlProviderBase.CreateSourceControlContext(System.Object)">
            <summary>
            When implemented in a derived class, creates a source control context from a specified object.
            </summary>
            <param name="contextData">Optional, arbitrary data which can be used
            to construct a source control context.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.SourceControl.DistributedSourceControlProviderBase.EnsureLocalWorkspace(Inedo.BuildMaster.Extensibility.Providers.SourceControl.SourceControlContext)">
            <summary>
            When implemented in a derived class, ensures that a local workspace exists.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.SourceControl.DistributedSourceControlProviderBase.UpdateLocalWorkspace(Inedo.BuildMaster.Extensibility.Providers.SourceControl.SourceControlContext)">
            <summary>
            When implemented in a derived class, updates the local workspace, typically 
            using a "clone" or "pull" operation.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.SourceControl.DistributedSourceControlProviderBase.DeleteWorkspace(Inedo.BuildMaster.Extensibility.Providers.SourceControl.SourceControlContext)">
            <summary>
            When implemented in a derived class, deletes a local workspace associated
            with the specified context.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.SourceControl.DistributedSourceControlProviderBase.ExportFiles(Inedo.BuildMaster.Extensibility.Providers.SourceControl.SourceControlContext,System.String)">
            <summary>
            When implemented in a derived class, exports the files without any 
            index information to the specified target directory.
            </summary>
            <param name="context">The context.</param>
            <param name="targetDirectory">The target directory.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.SourceControl.DistributedSourceControlProviderBase.ApplyLabel(System.String,Inedo.BuildMaster.Extensibility.Providers.SourceControl.SourceControlContext)">
            <summary>
            When implemented in a derived class, applies a label in source control.
            </summary>
            <param name="label">The label.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.SourceControl.DistributedSourceControlProviderBase.GetLabeled(System.String,Inedo.BuildMaster.Extensibility.Providers.SourceControl.SourceControlContext,System.String)">
            <summary>
            When implemented in a derived class, gets the source with the specified label.
            </summary>
            <param name="label">The label.</param>
            <param name="context">The context.</param>
            <param name="targetPath">The target path.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.SourceControl.DistributedSourceControlProviderBase.EnumerateBranches(Inedo.BuildMaster.Extensibility.Providers.SourceControl.SourceControlContext)">
            <summary>
            When implemented in a derived class, enumerates branches for a specified source context.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.SourceControl.DistributedSourceControlProviderBase.EnumerateLabels(Inedo.BuildMaster.Extensibility.Providers.SourceControl.SourceControlContext)">
            <summary>
            When implemented in a derived class, enumerates labels/tags for a specified source context.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.SourceControl.DistributedSourceControlProviderBase.GetCurrentRevision(Inedo.BuildMaster.Extensibility.Providers.SourceControl.SourceControlContext)">
            <summary>
            When implemented in a derived class, gets the current revision.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.SourceControl.DistributedSourceControlProviderBase.GetLatest(Inedo.BuildMaster.Extensibility.Providers.SourceControl.SourceControlContext,System.String)">
            <summary>
            When implemented in a derived class, gets the latest source code and exports the files to a specified <paramref name="targetPath"/>.
            </summary>
            <param name="context">The context.</param>
            <param name="targetPath">The target path.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.SourceControl.DistributedSourceControlProviderBase.GetWorkspaceDiskPath(Inedo.BuildMaster.Extensibility.Providers.SourceControl.SourceControlContext)">
            <summary>
            Gets the disk path of the current repository/workspace that will be used 
            for source control operations.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.SourceControl.DistributedSourceControlProviderBase.GetLatest(System.String,System.String)">
            <summary>
            When implemented in a derived class, retrieves the latest version of
            the source code from the provider's source path into the target path.
            </summary>
            <param name="sourcePath">Provider source path.</param>
            <param name="targetPath">Target file path.</param>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Providers.SourceControl.ILocalWorkspaceProvider">
            <summary>
            Indicates that a <see cref="T:Inedo.BuildMaster.Extensibility.Providers.SourceControl.SourceControlProviderBase"/> has a local workspace
            on the provider's assigned agent that is used to keep a persisent copy of a 
            repository for quicker source control operations.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.SourceControl.ILocalWorkspaceProvider.GetWorkspaceDiskPath(Inedo.BuildMaster.Extensibility.Providers.SourceControl.SourceControlContext)">
            <summary>
            Gets the workspace disk path.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.SourceControl.ILocalWorkspaceProvider.EnsureLocalWorkspace(Inedo.BuildMaster.Extensibility.Providers.SourceControl.SourceControlContext)">
            <summary>
            Ensures that a local workspace exists.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.SourceControl.ILocalWorkspaceProvider.UpdateLocalWorkspace(Inedo.BuildMaster.Extensibility.Providers.SourceControl.SourceControlContext)">
            <summary>
            Updates the local workspace to either the latest files on disk, or more commonly
            for instances of <see cref="T:Inedo.BuildMaster.Extensibility.Providers.SourceControl.IMultipleRepositoryProvider"/>, the latest index 
            state of the remote repository.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.SourceControl.ILocalWorkspaceProvider.ExportFiles(Inedo.BuildMaster.Extensibility.Providers.SourceControl.SourceControlContext,System.String)">
            <summary>
            Exports the files without any index information to the specified target directory.
            </summary>
            <param name="context">The context.</param>
            <param name="targetDirectory">The target directory.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.SourceControl.ILocalWorkspaceProvider.DeleteWorkspace(Inedo.BuildMaster.Extensibility.Providers.SourceControl.SourceControlContext)">
            <summary>
            Deletes the local workspace associated with the specified context.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Providers.SourceControl.SourceControlContext">
            <summary>
            Represents contextual information for source control operations.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.SourceControl.SourceControlContext.Branch">
            <summary>
            Gets the branch that should be used by source control operations.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.SourceControl.SourceControlContext.Label">
            <summary>
            Gets the label/tag that should be used by source control operations, or null
            if no label/tag is specified.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.SourceControl.SourceControlContext.Repository">
            <summary>
            Gets the selected repository for multiple repository providers.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.SourceControl.SourceControlContext.WorkspaceDiskPath">
            <summary>
            Gets the disk path of the current repository/workspace that will be used 
            for source control operations.
            </summary>
            <remarks>For instances of <see cref="T:Inedo.BuildMaster.Extensibility.Providers.SourceControl.IMultipleRepositoryProvider"/>, this
            value is typically the repository's disk path.</remarks>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.SourceControl.SourceControlContext.RepositoryRelativePath">
            <summary>
            Gets the source control path relative to the repository root.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.SourceControl.SourceControlContext.ToLegacyPathString">
            <summary>
            Converts this instance to a pre-v4.7 string format.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Providers.SourceControl.SourceRepositorySerializer">
            <summary>
            Custom serializer for a <see cref="T:Inedo.BuildMaster.Extensibility.Providers.SourceControl.SourceRepository"/>
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.SourceControl.SourceRepositorySerializer.Serialize(System.Object)">
            <summary>
            Returns the content an XML element which represents the current value.
            </summary>
            <param name="instance">The object to serialize.</param>
            <returns>
            Content of an XML element which represents the current value.
            </returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.SourceControl.SourceRepositorySerializer.Deserialize(System.Xml.Linq.XElement)">
            <summary>
            Reads configuration for this instance from the specified XML element.
            </summary>
            <param name="element">The XML element to read from.</param>
            <returns>
            Instance deserialized from the element.
            </returns>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Providers.SourceControl.IClientCommandOutputProvider">
            <summary>
            Indicates that a <see cref="T:Inedo.BuildMaster.Extensibility.Providers.SourceControl.SourceControlProviderBase"/> supports execution of specific commands
            and storing the output in a file.
            </summary>
            <seealso cref="T:Inedo.BuildMaster.Extensibility.Providers.SourceControl.SourceControlProviderBase"/>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.SourceControl.IClientCommandOutputProvider.ExecuteClientCommand(System.String,System.String,System.String)">
            <summary>
            Executes the specified client command with the specified arguments.
            </summary>
            <param name="commandName">The client command.</param>
            <param name="arguments">Optional arguments to pass with the command.</param>
            <param name="outputFileName">Name of the file which will contain the tool output. If null, output is not written to a file.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="commandName"/> is null.</exception>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Providers.SourceControl.IMultipleRepositoryProvider">
            <summary>
            Represents a <see cref="T:Inedo.BuildMaster.Extensibility.Providers.SourceControl.SourceControlProviderBase"/> with one or more user-defined
            <see cref="T:Inedo.BuildMaster.Extensibility.Providers.SourceControl.SourceRepository"/> instance.
            </summary>
            <seealso cref="T:Inedo.BuildMaster.Extensibility.Providers.SourceControl.SourceControlProviderBase"/>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.SourceControl.IMultipleRepositoryProvider.DisplayEditor">
            <summary>
            Gets a value indicating whether to display the multiple repository editor.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.SourceControl.IMultipleRepositoryProvider.LabelText">
            <summary>
            Gets the label text for the remote URL property.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.SourceControl.IMultipleRepositoryProvider.Repositories">
            <summary>
            Gets or sets the repositories.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Providers.SourceControl.ClientCommand">
            <summary>
            A command executed against a <see cref="T:Inedo.BuildMaster.Extensibility.Providers.SourceControl.IClientCommandProvider"/>.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.SourceControl.ClientCommand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Providers.SourceControl.ClientCommand"/> class.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.SourceControl.ClientCommand.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Providers.SourceControl.ClientCommand"/> class.
            </summary>
            <param name="commandName">The name of the command that will be executed.</param>
            <param name="commandDescription">A user-friendly description of the command.</param>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.SourceControl.ClientCommand.CommandName">
            <summary>
            Gets the name of the command that will be executed.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.SourceControl.ClientCommand.CommandDescription">
            <summary>
            Gets the a user-friendly description of the command.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Providers.SourceControl.IClientCommandProvider">
            <summary>
            Indicates that a <see cref="T:Inedo.BuildMaster.Extensibility.Providers.SourceControl.SourceControlProviderBase"/> supports execution of specific commands.
            </summary>
            <seealso cref="T:Inedo.BuildMaster.Extensibility.Providers.SourceControl.SourceControlProviderBase"/>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.SourceControl.IClientCommandProvider.GetAvailableCommands">
            <summary>
            Returns a collection of commands that may be executed against the provider.
            </summary>
            <returns>Collection of commands that may be executed against the provider.</returns>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.SourceControl.IClientCommandProvider.SupportsCommandHelp">
            <summary>
            Gets a value indicating whether commands have detailed help available.
            </summary>
            <remarks>
            Generally, command help will only be retrieved if the user explicitly asks for it, so it is
            acceptable to invoke a command-line tool to retrieve it or to just store it in the extension.
            </remarks>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.SourceControl.IClientCommandProvider.ExecuteClientCommand(System.String,System.String)">
            <summary>
            Executes the specified client command with the specified arguments.
            </summary>
            <param name="commandName">The client command.</param>
            <param name="arguments">Optional arguments to pass with the command.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="commandName"/> is null.</exception>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.SourceControl.IClientCommandProvider.GetClientCommandHelp(System.String)">
            <summary>
            Returns documentation for a specific client command.
            </summary>
            <param name="commandName">The client command to return documentation for.</param>
            <returns>Documentation for the client command if it is available.</returns>
            <remarks>This method is only called if <see cref="P:Inedo.BuildMaster.Extensibility.Providers.SourceControl.IClientCommandProvider.SupportsCommandHelp"/> returns true.</remarks>
            <exception cref="T:System.ArgumentNullException"><paramref name="commandName"/> is null.</exception>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.SourceControl.IClientCommandProvider.GetClientCommandPreview">
            <summary>
            Returns a string containing the command to be passed to the tool.
            </summary>
            <returns>String containing the command to be passed to the tool.</returns>
            <remarks>This will typically be displayed to the user, so passwords should be obscured.</remarks>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Providers.SourceControl.IRevisionProvider">
            <summary>
            Indicates that a <see cref="T:Inedo.BuildMaster.Extensibility.Providers.SourceControl.SourceControlProviderBase"/> can determine the latest revision of a path in source control.
            </summary>
            <seealso cref="T:Inedo.BuildMaster.Extensibility.Providers.SourceControl.SourceControlProviderBase"/>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.SourceControl.IRevisionProvider.GetCurrentRevision(System.String)">
            <summary>
            Returns a fingerprint that represents the current revision on the source control repository.
            </summary>
            <param name="path">The source control path whos revision is returned.</param>
            <returns>A representation of the current revision in source control.</returns>
            <remarks>
            <para>Notes to implementers:</para>
            <para>
            The object returned by this method should implement <see cref="M:System.Object.Equals(System.Object)"/>.
            </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is null.</exception>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Providers.SourceControl.SourceRepository">
            <summary>
            Represents a source repository for a <see cref="T:Inedo.BuildMaster.Extensibility.Providers.SourceControl.IMultipleRepositoryProvider"/>
            </summary>
            <seealso cref="T:Inedo.BuildMaster.Extensibility.Providers.SourceControl.SourceControlProviderBase"/>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.SourceControl.SourceRepository.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Providers.SourceControl.SourceRepository"/> class.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.SourceControl.SourceRepository.IsBuildMasterManaged">
            <summary>
            Gets a value indicating whether this repository is automatically managed by BuildMaster.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.SourceControl.SourceRepository.Name">
            <summary>
            Gets or sets the repository name.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.SourceControl.SourceRepository.CustomDiskPath">
            <summary>
            Gets or sets the local repository path where the repository lives. If this value is null or empty, 
            then BuildMaster will automatically manage the local repository path.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.SourceControl.SourceRepository.RemoteUrl">
            <summary>
            Gets or sets the repository's remote URL. This value may be relative to a repository root for some providers.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.SourceControl.SourceRepository.GetDiskPath(Inedo.Agents.IFileOperationsExecuter)">
            <summary>
            Gets the full disk path for this repository.
            </summary>
            <param name="agent">The agent.</param>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Providers.SourceControl.IBranchingProvider">
            <summary>
            Indicates that a <see cref="T:Inedo.BuildMaster.Extensibility.Providers.SourceControl.SourceControlProviderBase"/> supports branching.
            </summary>
            <seealso cref="T:Inedo.BuildMaster.Extensibility.Providers.SourceControl.SourceControlProviderBase"/>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.SourceControl.IBranchingProvider.RequiresComment">
            <summary>
            Gets a value indicating whether the comment parameter of the <see cref="M:Branch"/> method is required.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.SourceControl.IBranchingProvider.Branch(System.String,System.String,System.String)">
            <summary>
            Copies the specified sourcePath to the specified toPath and leaves the specified comment
            if the comment is not null.
            </summary>
            <param name="sourcePath">Path to copy from.</param>
            <param name="toPath">Path to copy to.</param>
            <param name="comment">Comment for the copy operation; may be null if <see cref="P:Inedo.BuildMaster.Extensibility.Providers.SourceControl.IBranchingProvider.RequiresComment"/> returns false.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="sourcePath"/> or <paramref name="toPath"/> is null.</exception>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Providers.SourceControl.InvalidScPathException">
            <summary>
            Exception that is thrown when an invalid path string is used
            with a <see cref="T:Inedo.BuildMaster.Extensibility.Providers.SourceControl.SourceControlProviderBase"/>.
            </summary>
            <seealso cref="T:Inedo.BuildMaster.Extensibility.Providers.SourceControl.SourceControlProviderBase"/>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.SourceControl.InvalidScPathException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Providers.SourceControl.InvalidScPathException"/> class.
            </summary>
            <param name="scPath">The source control path.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.SourceControl.InvalidScPathException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Providers.SourceControl.InvalidScPathException"/> class.
            </summary>
            <param name="scPath">The source control path.</param>
            <param name="inner">The exception which caused the error.</param>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Providers.SourceControl.ILabelingProvider">
            <summary>
            Indicates that a <see cref="T:Inedo.BuildMaster.Extensibility.Providers.SourceControl.SourceControlProviderBase"/> supports labels.
            </summary>
            <seealso cref="T:Inedo.BuildMaster.Extensibility.Providers.SourceControl.SourceControlProviderBase"/>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.SourceControl.ILabelingProvider.ApplyLabel(System.String,System.String)">
            <summary>
            When implemented in a derived class, applies the specified label to the specified
            source path.
            </summary>
            <param name="label">Label to apply.</param>
            <param name="sourcePath">Path to apply label to.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.SourceControl.ILabelingProvider.GetLabeled(System.String,System.String,System.String)">
            <summary>
            When implemented in a derived class, retrieves labeled
            source code from the provider's source path into the target path.
            </summary>
            <param name="label">Label of source files to get.</param>
            <param name="sourcePath">Provider source path.</param>
            <param name="targetPath">Target file path.</param>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Providers.SourceControl.SourceControlProviderBase">
            <summary>
            Base class for all source control providers.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.SourceControl.SourceControlProviderBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Providers.SourceControl.SourceControlProviderBase"/> class.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.SourceControl.SourceControlProviderBase.DirectorySeparator">
            <summary>
            Gets the <see cref="T:System.Char"/> used by the 
            provider to separate directories/files in a path string.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.SourceControl.SourceControlProviderBase.GetLatest(System.String,System.String)">
            <summary>
            When implemented in a derived class, retrieves the latest version of
            the source code from the provider's source path into the target path.
            </summary>
            <param name="sourcePath">Provider source path.</param>
            <param name="targetPath">Target file path.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.SourceControl.SourceControlProviderBase.GetDirectoryEntryInfo(System.String)">
            <summary>
            When implemented in a derived class, returns a <see cref="T:Inedo.BuildMaster.Files.DirectoryEntryInfo"/>
            object from the specified source path.
            </summary>
            <param name="sourcePath">Provider source path.</param>
            <returns><see cref="T:Inedo.BuildMaster.Files.DirectoryEntryInfo"/> object populated with the files in source control.</returns>
            <remarks>
            This method is not designed to be recursive.
            </remarks>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.SourceControl.SourceControlProviderBase.GetFileContents(System.String)">
            <summary>
            When implemented in a derived class, returns the contents of the specified file.
            </summary>
            <param name="filePath">Provider file path.</param>
            <returns>Contents of the file as an array of bytes.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.SourceControl.SourceControlProviderBase.CreateSourceControlContext(System.Object)">
            <summary>
            When overridden in a derived class, creates a source control context from a specified object.
            </summary>
            <param name="contextData">Optional, arbitrary data which can be used
            to construct a source control context.</param>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Providers.ProviderBase">
            <summary>
            Base class for all providers.
            </summary>
            <remarks>
            This class should not normally be inherited directly in an extension.
            </remarks>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.ProviderBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Providers.ProviderBase"/> class.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.ProviderBase.Agent">
            <summary>
            Gets the agent responsible for executing this Provider's commands.
            </summary>
            <remarks>
            This is guaranteed to be valid when any of the provider methods are called except <see cref="M:Inedo.BuildMaster.Extensibility.Providers.ProviderBase.ToString"/>.
            </remarks>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.ProviderBase.LogCommandLineArguments">
            <summary>
            Indicates whether the <see cref="M:Inedo.BuildMaster.Extensibility.Providers.ProviderBase.ExecuteCommandLine(System.String,System.String,System.String)"/> method should log the command name and arguments.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.ProviderBase.CancellationToken">
            <summary>
            Gets the cancellation token used to check for cancellation of an action.
            </summary>
            <remarks>
            This will be null if the legacy plan action executer is used.
            </remarks>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.ProviderBase.IsAvailable">
            <summary>
            When implemented in a derived class, indicates whether the provider 
            is installed and available for use in the current execution context.
            </summary>
            <returns>Value indicating whether the provider is available in the current context.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.ProviderBase.ValidateConnection">
            <summary>
            When implemented in a derived class, attempts to connect with the
            current configuration and throws an exception if unsuccessful.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.ProviderBase.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.ProviderBase.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.ProviderBase.ExecuteCommandLine(System.String,System.String,System.String)">
            <summary>
            Executes a command line process on the provider's agent.
            </summary>
            <param name="fileName">The file name of the process to execute.</param>
            <param name="arguments">The arguments to pass to the process.</param>
            <param name="workingDirectory">The working directory of the process.</param>
            <returns>Results of the process.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="fileName"/> is null or empty.</exception>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.ProviderBase.ExecuteCommandLine(Inedo.Agents.RemoteProcessStartInfo)">
            <summary>
            Executes a command line process on the provider's agent.
            </summary>
            <param name="startInfo">The process start info.</param>
            <returns>Results of the process.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="startInfo"/> is null.</exception>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.ProviderBase.ThrowIfTimeoutExpired">
            <summary>
            Throws a <see cref="T:Inedo.BuildMaster.Extensibility.Actions.ActionTimeoutException"/> if the action has been executing for at least
            <see cref="P:Timeout"/> seconds.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.ProviderBase.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.ProviderBase.SetAgent(Inedo.BuildMaster.Extensibility.Agents.BuildMasterAgent,System.Boolean)">
            <summary>
            Inititializes the <see cref="P:Inedo.BuildMaster.Extensibility.Providers.ProviderBase.Agent"/> property.
            </summary>
            <param name="agent">Value to write to the property.</param>
            <param name="disposeAgent">Value indicating whether the agent should be disposed when the provider is disposed.</param>
        </member>
        <member name="E:Inedo.BuildMaster.Extensibility.Providers.ProviderBase.LogReceived">
            <summary>
            Raised when a log message has been received.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.ProviderBase.Log(Inedo.Diagnostics.MessageLevel,System.String)">
            <summary>
            Writes the specified message to the Provider's log.
            </summary>
            <param name="logLevel">Log level of the message.</param>
            <param name="message">Message to log.</param>
            <remarks>
            Instead of calling <see cref="M:Inedo.BuildMaster.Extensibility.Providers.ProviderBase.Log(Inedo.Diagnostics.MessageLevel,System.String)"/> directly, it is often more convenient
            to call the more specific <see cref="M:Inedo.BuildMaster.Extensibility.Providers.ProviderBase.LogDebug(System.String,System.Object[])"/>,
            <see cref="M:Inedo.BuildMaster.Extensibility.Providers.ProviderBase.LogError(System.String,System.Object[])"/>, <see cref="M:Inedo.BuildMaster.Extensibility.Providers.ProviderBase.LogInformation(System.String,System.Object[])"/>,
            or <see cref="M:Inedo.BuildMaster.Extensibility.Providers.ProviderBase.LogWarning(System.String,System.Object[])"/> method.
            </remarks>
            <seealso cref="M:Inedo.BuildMaster.Extensibility.Providers.ProviderBase.LogDebug(System.String,System.Object[])"/>
            <seealso cref="M:Inedo.BuildMaster.Extensibility.Providers.ProviderBase.LogInformation(System.String,System.Object[])"/>
            <seealso cref="M:Inedo.BuildMaster.Extensibility.Providers.ProviderBase.LogWarning(System.String,System.Object[])"/>
            <seealso cref="M:Inedo.BuildMaster.Extensibility.Providers.ProviderBase.LogError(System.String,System.Object[])"/>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.ProviderBase.LogProcessExecution(System.Diagnostics.ProcessStartInfo)">
            <summary>
            Writes a message to the Provider's log with a Debug log level detailing process execution information.
            </summary>
            <param name="procInfo">The proc info.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.ProviderBase.LogDebug(System.String)">
            <summary>
            Logs the specified message to the Provider's log with a Debug log level.
            </summary>
            <param name="message">Message to log.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.ProviderBase.LogDebug(System.String,System.Object[])">
            <summary>
            Logs the specified message to the Provider's log with a Debug log level.
            </summary>
            <param name="messageFmt">Message to log as a composite format string.</param>
            <param name="args">Arguments for the composite format string.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.ProviderBase.LogError(System.String)">
            <summary>
            Logs the specified message to the Provider's log with an Error log level.
            </summary>
            <param name="message">Message to log.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.ProviderBase.LogError(System.String,System.Object[])">
            <summary>
            Logs the specified message to the Provider's log with an Error log level.
            </summary>
            <param name="messageFmt">Message to log as a composite format string.</param>
            <param name="args">Arguments for the composite format string.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.ProviderBase.LogInformation(System.String)">
            <summary>
            Logs the specified message to the Provider's log with an Information log level.
            </summary>
            <param name="message">Message to log.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.ProviderBase.LogInformation(System.String,System.Object[])">
            <summary>
            Logs the specified message to the Provider's log with an Information log level.
            </summary>
            <param name="messageFmt">Message to log as a composite format string.</param>
            <param name="args">Arguments for the composite format string.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.ProviderBase.LogWarning(System.String)">
            <summary>
            Logs the specified message to the Provider's log with a Warning log level.
            </summary>
            <param name="message">Message to log.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.ProviderBase.LogWarning(System.String,System.Object[])">
            <summary>
            Logs the specified message to the Provider's log with a Warning log level.
            </summary>
            <param name="messageFmt">Message to log as a composite format string.</param>
            <param name="args">Arguments for the composite format string.</param>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Providers.ProviderBase.ProcessResults">
            <summary>
            Contains information about a process.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.ProviderBase.ProcessResults.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Providers.ProviderBase.ProcessResults"/> class.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.ProviderBase.ProcessResults.ExitCode">
            <summary>
            Gets or sets the process exit code.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.ProviderBase.ProcessResults.Output">
            <summary>
            Gets or sets the lines written to the output stream of the process.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.ProviderBase.ProcessResults.Error">
            <summary>
            Gets or sets the lines written to the error stream of the process.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Providers.ProviderException">
            <summary>
            Exception thrown by a provider.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.ProviderException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Providers.ProviderException"/> class.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.ProviderException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Providers.ProviderException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.ProviderException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Providers.ProviderException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner exception.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.ProviderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Providers.ProviderException"/> class.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Providers.NotAvailableException">
            <summary>
            Exception thrown when a provider is not available.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.NotAvailableException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Providers.NotAvailableException"/> class.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.NotAvailableException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Providers.NotAvailableException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.NotAvailableException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Providers.NotAvailableException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner exception.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.NotAvailableException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Providers.NotAvailableException"/> class.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Providers.ConnectionException">
            <summary>
            Exception thrown when a provider cannot connect to its source.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.ConnectionException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Providers.ConnectionException"/> class.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.ConnectionException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Providers.ConnectionException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.ConnectionException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Providers.ConnectionException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner exception.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.ConnectionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Providers.ConnectionException"/> class.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.ScriptAliasAttribute">
            <summary>
            Provides an alias for both classes and properties of operations and configurations when used in a script.
            </summary>
            <remarks>
            If multiple aliases are specified, the first alias will be considered default, and will be used when
            exporting to a configuration.
            </remarks>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.ScriptAliasAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.ScriptAliasAttribute"/> class.
            </summary>
            <param name="alias">The script alias.</param>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.ScriptAliasAttribute.Alias">
            <summary>
            Gets the script alias.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.ScriptNamespaceAttribute">
            <summary>
            Specifies the default OtterScript namespace for a class or an assembly.
            </summary>
            <remarks>
            If no attribute is present on the class, the assembly's attribute will be used; if no assembly attribute is 
            specified, the assembly's name will be used.
            </remarks>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.ScriptNamespaceAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.ScriptNamespaceAttribute"/> class.
            </summary>
            <param name="namespaceName"></param>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.ScriptNamespaceAttribute.Namespace">
            <summary>
            Gets the namespace for scripting.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.ScriptNamespaceAttribute.PreferUnqualified">
            <summary>
            Gets a value indicating whether the namespace is usually needed.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.ScriptNamespaceAttribute.GetScriptNamespace(System.Type)">
            <summary>
            Returns the script namespace for the specified type.
            </summary>
            <param name="type">The type.</param>
            <returns>Name of the namespace.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.ScriptNamespaceAttribute.GetScriptNamespace(System.Type,System.Boolean)">
            <summary>
            Returns the script namespace for the specified type.
            </summary>
            <param name="type">The type.</param>
            <param name="returnNullIfPreferUnqualified">Value indicating whether to return null if <see cref="P:Inedo.BuildMaster.Extensibility.ScriptNamespaceAttribute.PreferUnqualified"/> is true.</param>
            <returns>Name of the namespace.</returns>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.UserDirectories.BasicGroupInfo">
            <summary>
            Represents a standard group in a directory.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.UserDirectories.BasicGroupInfo.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.UserDirectories.BasicGroupInfo"/> class.
            </summary>
            <param name="name">The unique name of the group.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.UserDirectories.BasicGroupInfo.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.UserDirectories.BasicGroupInfo"/> class.
            </summary>
            <param name="name">The unique name of the group.</param>
            <param name="displayName">The friendly name of the group.</param>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.UserDirectories.BasicGroupInfo.Name">
            <summary>
            Gets the unique name of the group.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.UserDirectories.BasicGroupInfo.DisplayName">
            <summary>
            Gets the friendly display name of the group.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.UserDirectories.BasicGroupInfo.IsMemberOfGroup(System.String)">
            <summary>
            Returns a value indicating whether this group is a member of the specified group.
            </summary>
            <param name="groupName">The group to test for membership in.</param>
            <returns>True if the group is a member of the group; otherwise false.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.UserDirectories.BasicGroupInfo.Equals(Inedo.BuildMaster.Extensibility.UserDirectories.BasicGroupInfo)">
            <summary>
            Returns a value indicating whether this group is equivalent to the specified other group.
            </summary>
            <param name="other">The other group.</param>
            <returns>True if both instances represent the same group; otherwise false.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.UserDirectories.BasicGroupInfo.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this group is equivalent to the specified other group.
            </summary>
            <param name="obj">The other group.</param>
            <returns>True if both instances represent the same user; otherwise false.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.UserDirectories.BasicGroupInfo.GetHashCode">
            <summary>
            Returns the hash code for the instance.
            </summary>
            <returns>Hash code for the instance.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.UserDirectories.BasicGroupInfo.ToString">
            <summary>
            Returns the group name.
            </summary>
            <returns>Group name.</returns>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.UserDirectories.BasicUserInfo">
            <summary>
            Represents a standard user in a directory.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.UserDirectories.BasicUserInfo.#ctor(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.UserDirectories.BasicUserInfo"/> class.
            </summary>
            <param name="name">The user name of the user.</param>
            <param name="displayName">The display name of the user.</param>
            <param name="emailAddress">The user's email address.</param>
            <param name="groupNames">Groups to which the user belongs.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.UserDirectories.BasicUserInfo.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.UserDirectories.BasicUserInfo"/> class.
            </summary>
            <param name="name">The user name of the user.</param>
            <param name="displayName">The display name of the user.</param>
            <param name="emailAddress">The user's email address.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.UserDirectories.BasicUserInfo.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.UserDirectories.BasicUserInfo"/> class.
            </summary>
            <param name="name">The user name of the user.</param>
            <param name="displayName">The display name of the user.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.UserDirectories.BasicUserInfo.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.UserDirectories.BasicUserInfo"/> class.
            </summary>
            <param name="name">The user name of the user.</param>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.UserDirectories.BasicUserInfo.Name">
            <summary>
            Gets the login name of the user.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.UserDirectories.BasicUserInfo.DisplayName">
            <summary>
            Gets the friendly display name of the user.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.UserDirectories.BasicUserInfo.EmailAddress">
            <summary>
            Gets the user's email address.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.UserDirectories.BasicUserInfo.IsMemberOfGroup(System.String)">
            <summary>
            Returns a value indicating whether this user is a member of the specified group.
            </summary>
            <param name="groupName">The group to test for membership in.</param>
            <returns>True if the user is a member of the group; otherwise false.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.UserDirectories.BasicUserInfo.Equals(Inedo.BuildMaster.Extensibility.UserDirectories.BasicUserInfo)">
            <summary>
            Returns a value indicating whether this user is equivalent to the specified other user.
            </summary>
            <param name="other">The other user.</param>
            <returns>True if both instances represent the same user; otherwise false.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.UserDirectories.BasicUserInfo.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this user is equivalent to the specified other user.
            </summary>
            <param name="obj">The other user.</param>
            <returns>True if both instances represent the same user; otherwise false.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.UserDirectories.BasicUserInfo.GetHashCode">
            <summary>
            Returns the hash code for the instance.
            </summary>
            <returns>Hash code for the instance.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.UserDirectories.BasicUserInfo.ToString">
            <summary>
            Returns the user name.
            </summary>
            <returns>User name.</returns>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.UserDirectories.IUserDirectoryGroup">
            <summary>
            Represents a group in a user directory.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.UserDirectories.IUserDirectoryPrincipal">
            <summary>
            Represents a principal in a user directory.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.UserDirectories.IUserDirectoryPrincipal.Name">
            <summary>
            Gets the login name of the principal.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.UserDirectories.IUserDirectoryPrincipal.DisplayName">
            <summary>
            Gets the friendly display name of the principal.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.UserDirectories.IUserDirectoryPrincipal.IsMemberOfGroup(System.String)">
            <summary>
            Returns a value indicating whether this principal is a member of the specified group.
            </summary>
            <param name="groupName">The group to test for membership in.</param>
            <returns>True if the principal is a member of the group; otherwise false.</returns>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.UserDirectories.IUserDirectoryUser">
            <summary>
            Represents a user in a user directory.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.UserDirectories.IUserDirectoryUser.EmailAddress">
            <summary>
            Gets the user's email address.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.UserDirectories.UserDirectoryBase">
            <summary>
            Base class for BuildMaster user directories.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.UserDirectories.UserDirectoryBase.AnonymousUser">
            <summary>
            Gets the anonymous user.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.UserDirectories.UserDirectoryBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.UserDirectories.UserDirectoryBase"/> class.
            </summary>
        </member>
        <member name="E:Inedo.BuildMaster.Extensibility.UserDirectories.UserDirectoryBase.MessageLogged">
            <summary>
            Occurs when a message is logged.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.UserDirectories.UserDirectoryBase.Log(Inedo.Diagnostics.MessageLevel,System.String)">
            <summary>
            Writes the specified message to the corresponding log.
            </summary>
            <param name="logLevel">The log level.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.UserDirectories.UserDirectoryBase.GetDescription">
            <summary>
            Returns a friendly description of this directory and its configuration.
            </summary>
            <returns>Friendly description of this directory and its configuration.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.UserDirectories.UserDirectoryBase.TryGetUser(System.String)">
            <summary>
            Returns a <see cref="T:Inedo.BuildMaster.Extensibility.UserDirectories.IUserDirectoryUser"/> for the user with the specified user name.
            </summary>
            <param name="userName">The user name of the user to look up.</param>
            <returns>
            A corresponding <see cref="T:Inedo.BuildMaster.Extensibility.UserDirectories.IUserDirectoryUser"/> for the specified user name,
            if the user was found in the directory; otherwise null.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="userName"/> is null or empty.</exception>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.UserDirectories.UserDirectoryBase.TryGetAndValidateUser(System.String,System.String)">
            <summary>
            Returns a <see cref="T:Inedo.BuildMaster.Extensibility.UserDirectories.IUserDirectoryUser"/> for the user with the specified user name and password.
            </summary>
            <param name="userName">The user name of the user to look up.</param>
            <param name="password">The password of the user.</param>
            <returns>
            A corresponding <see cref="T:Inedo.BuildMaster.Extensibility.UserDirectories.IUserDirectoryUser"/> for the specified user name,
            if the user was found in the directory and the specified password is correct; otherwise null.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="userName"/> is null or empty or <paramref name="password"/> is null.</exception>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.UserDirectories.UserDirectoryBase.TryGetGroup(System.String)">
            <summary>
            Returns a <see cref="T:Inedo.BuildMaster.Extensibility.UserDirectories.IUserDirectoryGroup"/> for the group with the specified name.
            </summary>
            <param name="groupName">The name of the group to look up.</param>
            <returns>
            A corresponding <see cref="T:Inedo.BuildMaster.Extensibility.UserDirectories.IUserDirectoryGroup"/> for the specified group,
            if the group was found in the directory; otherwise null.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="groupName"/> is null or empty.</exception>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.UserDirectories.UserDirectoryBase.TryGetPrincipal(System.String)">
            <summary>
            Returns a <see cref="T:Inedo.BuildMaster.Extensibility.UserDirectories.IUserDirectoryPrincipal"/> for the user or group with the specified name.
            </summary>
            <param name="principalName">The name of the principal to look up.</param>
            <returns>
            A corresponding <see cref="T:Inedo.BuildMaster.Extensibility.UserDirectories.IUserDirectoryPrincipal"/> for the specified name,
            if the principal was found in the directory; otherwise null.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="principalName"/> is null or empty.</exception>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.UserDirectories.UserDirectoryBase.FindUsers(System.String)">
            <summary>
            Searches the directory for users related to the specified search term.
            </summary>
            <param name="searchTerm">The search term.</param>
            <returns>Sequence of users which are related to the specified search term.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.UserDirectories.UserDirectoryBase.FindGroups(System.String)">
            <summary>
            Searches the directory for groups related to the specified search term.
            </summary>
            <param name="searchTerm">The search term.</param>
            <returns>Sequence of groups which are related to the specified search term.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.UserDirectories.UserDirectoryBase.FindPrincipals(System.String)">
            <summary>
            Searches the directory for users or groups related to the specified search term.
            </summary>
            <param name="searchTerm">The search term.</param>
            <returns>Sequence of principals which are related to the specified search term.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.UserDirectories.UserDirectoryBase.GetGroupMembers(System.String)">
            <summary>
            Enumerates members of the specified group name.
            </summary>
            <param name="groupName">The name of the group.</param>
            <returns>
            A corresponding <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing the members
            of the group. The result can empty if there are no group members or the group does not exist.
            </returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.UserDirectories.UserDirectoryBase.TryParseLogonUser(System.String)">
            <summary>
            Returns a <see cref="T:Inedo.BuildMaster.Extensibility.UserDirectories.IUserDirectoryUser"/> for the user with the specified LOGON_USER string.
            </summary>
            <param name="logonUser">The LOGON_USER server variable value.</param>
            <returns>
            A corresponding <see cref="T:Inedo.BuildMaster.Extensibility.UserDirectories.IUserDirectoryUser"/> for the specified user name,
            if the user was found in the directory and this directory supports integrated authentication; otherwise null.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="logonUser"/> is null or empty.</exception>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Configurers.ConfigurerBase">
            <summary>
            Responsible for storing and accessing the configuration of a component.
            </summary>
            <remarks>
            This class is used internally by BuildMaster.
            </remarks>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Configurers.ConfigurerBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Configurers.ConfigurerBase"/> class.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Configurers.Extension.ExtensionConfigurerAttribute">
            <summary>
            Specifies the <see cref="T:Inedo.BuildMaster.Extensibility.Configurers.Extension.ExtensionConfigurerBase"/> to use for an extension.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Configurers.Extension.ExtensionConfigurerAttribute.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Configurers.Extension.ExtensionConfigurerAttribute"/> class.
            </summary>
            <param name="extensionConfigurerType">Type of the extension configurer.</param>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Configurers.Extension.ExtensionConfigurerAttribute.ExtensionConfigurerType">
            <summary>
            Gets the type of the extension configurer used by the extension.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Configurers.Extension.ExtensionConfigurerBase">
            <summary>
            Contains the configuration for an extension.
            </summary>
            <remarks>
            There can only be one <see cref="T:Inedo.BuildMaster.Extensibility.Configurers.Extension.ExtensionConfigurerBase"/> per extension assembly; this is defined by the 
            <see cref="T:Inedo.BuildMaster.Extensibility.Configurers.Extension.ExtensionConfigurerAttribute"/> attribute.
            </remarks>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Configurers.Extension.ExtensionConfigurerBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Configurers.Extension.ExtensionConfigurerBase"/> class.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Configurers.Extension.ExtensionConfigurerBase.GetOverriddenProperties">
            <summary>
            Returns a sequence of the properties which have been overridden by this instance.
            </summary>
            <returns>The overridden property names.</returns>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.DeprecatedInBuildMasterVersionAttribute">
            <summary>
            Marks an extension or class as deprecated by a specific version of BuildMaster.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.DeprecatedInBuildMasterVersionAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.DeprecatedInBuildMasterVersionAttribute"/> class.
            </summary>
            <param name="version">The version which deprecates the extension or class.</param>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.DeprecatedInBuildMasterVersionAttribute.DeprecatedVersion">
            <summary>
            Gets the version which deprecates the extension or class.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.DeprecatedInBuildMasterVersionAttribute.ErrorIfUsed">
            <summary>
            Gets or sets a value indicating whether the use of this extension or class should be an error or a warning.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.DeprecatedInBuildMasterVersionAttribute.Message">
            <summary>
            Gets or sets a string containing additional information about what to use in place of this.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.ExtensionIconAttribute">
            <summary>
            Specifies the URL of the extension's icon.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.ExtensionIconAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.ExtensionIconAttribute"/> class.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.ExtensionIconAttribute.Url">
            <summary>
            Gets the URL of the icon.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.ICustomVariableReplacer">
            <summary>
            Indicates that a persistent property supports custom variable replacement logic.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.ICustomVariableReplacer.GetFieldsToExpand(System.Object)">
            <summary>
            Returns an enumeration of the fields which require variable expansion of an instance.
            </summary>
            <param name="instance">The instance whose fields will be expanded.</param>
            <returns>Enumeration of <see cref="T:Inedo.BuildMaster.Extensibility.VariableExpandingField"/> instances.</returns>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.VariableExpandingField">
            <summary>
            Represents a persistent field which supports variable expansion.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.VariableExpandingField.#ctor(System.String,System.Action{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.VariableExpandingField"/> class.
            </summary>
            <param name="value">The initial field value.</param>
            <param name="setValue">Delegate which sets the field value.</param>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.VariableExpandingField.Value">
            <summary>
            Gets the initial field value.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.VariableExpandingField.SetValue">
            <summary>
            Gets the delegate which sets the field value.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.IPreprocessPersistence">
            <summary>
            Indicates that a type has special handling for serialization and deserialization.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.IPreprocessPersistence.BeforeVariablesReplaced">
            <summary>
            Method invoked before variables are replaced.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.IPreprocessPersistence.AfterVariablesReplaced">
            <summary>
            Method invoked after variables are replaced.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.RequiredBuildMasterVersionAttribute">
            <summary>
            Marks an extension or class as requiring a specific minimum version of BuildMaster.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.RequiredBuildMasterVersionAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.RequiredBuildMasterVersionAttribute"/> class.
            </summary>
            <param name="minimumVersion">The minimum version.</param>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.RequiredBuildMasterVersionAttribute.MinimumVersion">
            <summary>
            Gets the minimum required BuildMaster version.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Scripting.ActiveScriptBase">
            <summary>
            Base class for a standard implementation of <see cref="T:Inedo.BuildMaster.Extensibility.Scripting.IActiveScript"/>.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Scripting.ActiveScriptBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Scripting.ActiveScriptBase"/> class.
            </summary>
        </member>
        <member name="E:Inedo.BuildMaster.Extensibility.Scripting.ActiveScriptBase.LogReceived">
            <summary>
            Occurs when a log message has been received.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Scripting.ActiveScriptBase.WaitHandle">
            <summary>
            Gets a <see cref="P:Inedo.BuildMaster.Extensibility.Scripting.ActiveScriptBase.WaitHandle" /> to use to wait for the script to complete.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Scripting.ActiveScriptBase.IsRunning">
            <summary>
            Gets a value indicating whether the script is still running.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Scripting.ActiveScriptBase.Succeeded">
            <summary>
            Gets a value indicating whether the script was successful.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Scripting.ActiveScriptBase.Result">
            <summary>
            Gets the result generated by the script.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Scripting.ActiveScriptBase.Start">
            <summary>
            Begins executing the script.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Scripting.ActiveScriptBase.Cancel">
            <summary>
            Attempts to cancel a running script.
            </summary>
            <returns>
            True if script was canceled, false if script could not be canceled, or null if script was not running.
            </returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Scripting.ActiveScriptBase.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Scripting.ActiveScriptBase.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Scripting.ActiveScriptBase.OnLogReceived(Inedo.BuildMaster.Extensibility.Actions.LogReceivedEventArgs)">
            <summary>
            Raises the <see cref="E:LogReceived" /> event.
            </summary>
            <param name="e">The <see cref="T:Inedo.BuildMaster.Extensibility.Actions.LogReceivedEventArgs"/> instance containing the event data.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="e"/> is null.</exception>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Scripting.ActiveScriptBase.ScriptCompleted(System.Boolean,System.String)">
            <summary>
            Records the result of the script and sets the wait handle.
            </summary>
            <param name="succeeded">Value indicating whether the script succeeded.</param>
            <param name="result">Optional output of the script.</param>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Scripting.IActiveScript">
            <summary>
            Represents a running or completed script.
            </summary>
        </member>
        <member name="E:Inedo.BuildMaster.Extensibility.Scripting.IActiveScript.LogReceived">
            <summary>
            Occurs when a log message has been received.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Scripting.IActiveScript.WaitHandle">
            <summary>
            Gets a <see cref="P:Inedo.BuildMaster.Extensibility.Scripting.IActiveScript.WaitHandle"/> to use to wait for the script to complete.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Scripting.IActiveScript.IsRunning">
            <summary>
            Gets a value indicating whether the script is still running.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Scripting.IActiveScript.Succeeded">
            <summary>
            Gets a value indicating whether the script was successful.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Scripting.IActiveScript.Result">
            <summary>
            Gets the result generated by the script.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Scripting.IActiveScript.Start">
            <summary>
            Begins executing the script.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Scripting.IActiveScript.Cancel">
            <summary>
            Attempts to cancel a running script.
            </summary>
            <returns>True if script was canceled, false if script could not be canceled, or null if script was not running.</returns>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Scripting.IScriptMetadataReader">
            <summary>
            Indicates that a <see cref="T:Inedo.BuildMaster.Extensibility.Scripting.ScriptTypeBase"/> can read metadata from a script.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Scripting.IScriptMetadataReader.GetScriptMetadata(System.IO.TextReader)">
            <summary>
            Returns metadata parsed from the specified script.
            </summary>
            <param name="scriptText">The script to parse for metadata.</param>
            <returns>Metadata parsed from the script; may return null if nothing was parsed.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="scriptText"/> is null.</exception>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Scripting.ScriptExecutionContext">
            <summary>
            Contains a script and additional context information.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Scripting.ScriptExecutionContext.#ctor(System.Byte[],System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Scripting.ScriptExecutionContext"/> class.
            </summary>
            <param name="rawScriptData">The raw script data.</param>
            <param name="variables">The variables.</param>
            <param name="arguments">The arguments.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="rawScriptData"/> is null.</exception>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Scripting.ScriptExecutionContext.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Scripting.ScriptExecutionContext"/> class.
            </summary>
            <param name="scriptFileName">Name of the script file.</param>
            <param name="variables">The variables.</param>
            <param name="arguments">The arguments.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="scriptFileName"/> is null or empty.</exception>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Scripting.ScriptExecutionContext.Variables">
            <summary>
            Gets the variables to expose to the script.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Scripting.ScriptExecutionContext.Arguments">
            <summary>
            Gets the arguments to pass to the script.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Scripting.ScriptExecutionContext.FileName">
            <summary>
            Gets the script file name if applicable.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Scripting.ScriptExecutionContext.WorkingDirectory">
            <summary>
            Gets the working directory to run the script.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Scripting.ScriptExecutionContext.TempDirectory">
            <summary>
            Gets the temporary directory which may be used for writing a script file.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Scripting.ScriptExecutionContext.Agent">
            <summary>
            Gets the agent used to execute the script.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Scripting.ScriptExecutionContext.GetTextReader">
            <summary>
            Returns a <see cref="T:System.IO.TextReader"/> for reading the script.
            </summary>
            <returns>A <see cref="T:System.IO.TextReader"/> for reading the script.</returns>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Scripting.ScriptMetadata">
            <summary>
            Contains metadata about a script.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Scripting.ScriptMetadata.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{Inedo.BuildMaster.Extensibility.Scripting.ScriptParameterMetadata})">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Scripting.ScriptMetadata"/> class.
            </summary>
            <param name="name">The name of the script.</param>
            <param name="description">The description of the script.</param>
            <param name="parameters">The parameters for the script.</param>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Scripting.ScriptMetadata.Name">
            <summary>
            Gets the script name.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Scripting.ScriptMetadata.Description">
            <summary>
            Gets the script description if it is available; otherwise null.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Scripting.ScriptMetadata.Parameters">
            <summary>
            Gets the script parameters if they are available; otherwise null.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Scripting.ScriptMetadata.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Scripting.ScriptMetadata.Equals(Inedo.BuildMaster.Extensibility.Scripting.ScriptMetadata)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            True if the current object is equal to the <paramref name="other" /> parameter; otherwise false.
            </returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Scripting.ScriptMetadata.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
            True if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise false.
            </returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Scripting.ScriptMetadata.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Scripting.ScriptMetadata.CompareTo(Inedo.BuildMaster.Extensibility.Scripting.ScriptMetadata)">
            <summary>
            Compares the current object with another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            A 32-bit signed integer that indicates the relative order of the objects being compared.
            </returns>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Scripting.ScriptParameterMetadata">
            <summary>
            Contains metadata about a script parameter.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Scripting.ScriptParameterMetadata.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Scripting.ScriptParameterMetadata"/> class.
            </summary>
            <param name="name">The name of the parameter.</param>
            <param name="description">The description of the parameter.</param>
            <param name="defaultValue">The default value of the parameter.</param>
            <param name="inputTypeCode">The input type code most appropriate for the parameter. See <see cref="T:Inedo.BuildMaster.Data.Domains.ScriptParameterTypes"/> for valid values.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="name"/> is null or empty.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="inputTypeCode"/> is not one of the values in <see cref="T:Inedo.BuildMaster.Data.Domains.ScriptParameterTypes"/>.</exception>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Scripting.ScriptParameterMetadata.Name">
            <summary>
            Gets the parameter name.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Scripting.ScriptParameterMetadata.Description">
            <summary>
            Gets the parameter description if it is available; otherwise null.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Scripting.ScriptParameterMetadata.DefaultValue">
            <summary>
            Gets the default value of the parameter if it is available; otherwise null.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Scripting.ScriptParameterMetadata.InputTypeCode">
            <summary>
            Gets the input type of the parameter if it is available; otherwise null.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Scripting.ScriptParameterMetadata.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Scripting.ScriptParameterMetadata.Equals(Inedo.BuildMaster.Extensibility.Scripting.ScriptParameterMetadata)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            True if the current object is equal to the <paramref name="other" /> parameter; otherwise false.
            </returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Scripting.ScriptParameterMetadata.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
            True if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise false.
            </returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Scripting.ScriptParameterMetadata.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Scripting.ScriptParameterMetadata.CompareTo(Inedo.BuildMaster.Extensibility.Scripting.ScriptParameterMetadata)">
            <summary>
            Compares the current object with another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            A 32-bit signed integer that indicates the relative order of the objects being compared.
            </returns>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Scripting.ScriptTypeBase">
            <summary>
            Base class for script types.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Scripting.ScriptTypeBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Scripting.ScriptTypeBase"/> class.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Scripting.ScriptTypeBase.ScriptTypeCode">
            <summary>
            Gets the code for the script type.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Scripting.ScriptTypeBase.TrueValue">
            <summary>
            Gets the true value for checkbox parameters.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Scripting.ScriptTypeBase.FalseValue">
            <summary>
            Gets the false value for checkbox parameters.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Scripting.ScriptTypeBase.ExecuteScript(Inedo.BuildMaster.Extensibility.Scripting.ScriptExecutionContext)">
            <summary>
            Executes the specified script using the specified arguments.
            </summary>
            <param name="context">Information about the script to execute.</param>
            <returns>
            An object which can be used to monitor the progress of the script.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="context"/> is null.</exception>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.IGenericBuildMasterContext">
            <summary>
            Represents context information for BuildMaster.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.IGenericBuildMasterContext.ApplicationGroupId">
            <summary>
            Gets the ID of the application group ID in the current context, or null if not applicable.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.IGenericBuildMasterContext.ApplicationId">
            <summary>
            Gets the ID of the application in the current context, or null if not applicable.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.IGenericBuildMasterContext.ReleaseNumber">
            <summary>
            Gets the release number in the current context, or null if not applicable.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.IGenericBuildMasterContext.BuildNumber">
            <summary>
            Gets the build number in the current context, or null if not applicable.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.IGenericBuildMasterContext.DeployableId">
            <summary>
            Gets the ID of the deployable in the current context, or null if not applicable.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.IGenericBuildMasterContext.ExecutionId">
            <summary>
            Gets the ID of the execution in the current context, or null if not applicable.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.IGenericBuildMasterContext.EnvironmentId">
            <summary>
            Gets the ID of the environment in the current context, or null if not applicable.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.IGenericBuildMasterContext.ServerId">
            <summary>
            Gets the ID of the server in the current context, or null if not applicable.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.IGenericBuildMasterContext.PromotionId">
            <summary>
            Gets the ID of the build promotion in the current context, or null if not applicable.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.IGenericBuildMasterContext.ServerRoleId">
            <summary>
            Gets the ID of the server role in the current context, or null if not applicable.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Variables.ExpressionBase">
            <summary>
            Represents a variable expression.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Variables.ExpressionBase.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Variables.FunctionExpression">
            <summary>
            Represents a variable function.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Variables.FunctionExpression.#ctor(System.String,System.Collections.Generic.IEnumerable{Inedo.BuildMaster.Extensibility.Variables.ExpressionBase})">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Variables.FunctionExpression"/> class.
            </summary>
            <param name="functionName">Name of the function.</param>
            <param name="args">The function arguments.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="functionName"/> is null or empty or <paramref name="args"/> is null.</exception>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Variables.FunctionExpression.#ctor(System.String,Inedo.BuildMaster.Extensibility.Variables.ExpressionBase[])">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Variables.FunctionExpression"/> class.
            </summary>
            <param name="functionName">Name of the function.</param>
            <param name="args">The function arguments.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="functionName"/> is null or empty or <paramref name="args"/> is null.</exception>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Variables.FunctionExpression.FunctionName">
            <summary>
            Gets the name of the function.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Variables.FunctionExpression.Arguments">
            <summary>
            Gets the function arguments.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Variables.FunctionExpression.Equals(Inedo.BuildMaster.Extensibility.Variables.FunctionExpression)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.
            </returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Variables.FunctionExpression.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Variables.FunctionExpression.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.
            </returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Variables.FunctionExpression.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Variables.IVariableEvaluationContext">
            <summary>
            Contains context information required for variable expression evaluation.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Variables.IVariableEvaluationContext.GenericContext">
            <summary>
            Gets the generic context which will be supplied to variable functions.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Variables.IVariableEvaluationContext.GetVariableValue(System.String)">
            <summary>
            Returns the value of the specified variable if it was found; otherwise returns null.
            </summary>
            <param name="variableName">The name of the variable.</param>
            <returns>Value of the specified variable if it was found; otherwise null.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="variableName"/> is null or empty.</exception>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Variables.IVariableEvaluationContext.GetFunction(System.String)">
            <summary>
            Returns the function with the specified name if it was found; otherwise returns null.
            </summary>
            <param name="functionName">The name of the function.</param>
            <returns>Specified function if it was found; otherwise null.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="functionName"/> is null or empty.</exception>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Variables.IVariableEvaluationContext.GetFunctionByAlias(System.String)">
            <summary>
            Returns the function with the specified alias if it was found; otherwise returns null.
            </summary>
            <param name="functionAlias">The alias of the function.</param>
            <returns>Specified function if it was found; otherwise null.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="functionAlias"/> is null or empty.</exception>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Variables.LegacyVariableOrFunctionExpression">
            <summary>
            Represents a legacy variable or a parameterless function legacy alias.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Variables.LegacyVariableOrFunctionExpression.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Variables.LegacyVariableOrFunctionExpression"/> class.
            </summary>
            <param name="variableOrFunctionName">Name of the variable or function alias.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="variableOrFunctionName"/> is null or empty.</exception>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Variables.LegacyVariableOrFunctionExpression.VariableOrFunctionName">
            <summary>
            Gets the name of the variable or function alias.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Variables.LegacyVariableOrFunctionExpression.Equals(Inedo.BuildMaster.Extensibility.Variables.LegacyVariableOrFunctionExpression)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.
            </returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Variables.LegacyVariableOrFunctionExpression.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Variables.LegacyVariableOrFunctionExpression.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Variables.LegacyVariableOrFunctionExpression.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Variables.TextExpression">
            <summary>
            Represents a literal string of text.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Variables.TextExpression.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Variables.TextExpression"/> class.
            </summary>
            <param name="text">The text.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="text"/> is null.</exception>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Variables.TextExpression.Text">
            <summary>
            Gets the text.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Variables.TextExpression.Equals(Inedo.BuildMaster.Extensibility.Variables.TextExpression)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.
            </returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Variables.TextExpression.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/>, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Variables.TextExpression.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Variables.TextExpression.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Variables.VariableOrFunctionExpression">
            <summary>
            Represents a variable or a parameterless function.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Variables.VariableOrFunctionExpression.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Variables.VariableOrFunctionExpression"/> class.
            </summary>
            <param name="variableOrFunctionName">Name of the variable or function.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="variableOrFunctionName"/> is null or empty.</exception>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Variables.VariableOrFunctionExpression.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Variables.VariableOrFunctionExpression"/> class.
            </summary>
            <param name="variableOrFunctionName">Name of the variable or function.</param>
            <param name="isExplicit">Value indicating whether the variable was used with explicit notation.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="variableOrFunctionName"/> is null or empty.</exception>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Variables.VariableOrFunctionExpression.VariableOrFunctionName">
            <summary>
            Gets the name of the variable or function.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Variables.VariableOrFunctionExpression.Equals(Inedo.BuildMaster.Extensibility.Variables.VariableOrFunctionExpression)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.
            </returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Variables.VariableOrFunctionExpression.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Variables.VariableOrFunctionExpression.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Variables.VariableOrFunctionExpression.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Variables.VariableExpressionTree">
            <summary>
            Represents a parsed string that can contain variables.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Variables.VariableExpressionTree.#ctor(System.Collections.Generic.IEnumerable{Inedo.BuildMaster.Extensibility.Variables.ExpressionBase})">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Variables.VariableExpressionTree"/> class.
            </summary>
            <param name="rootExpressions">The root expressions.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="rootExpressions"/> is null.</exception>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Variables.VariableExpressionTree.#ctor(Inedo.BuildMaster.Extensibility.Variables.ExpressionBase[])">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Variables.VariableExpressionTree"/> class.
            </summary>
            <param name="rootExpressions">The root expressions.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="rootExpressions"/> is null.</exception>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Variables.VariableExpressionTree.RootExpressions">
            <summary>
            Gets the root expressions.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Variables.VariableExpressionTree.Evaluate(Inedo.BuildMaster.Extensibility.Variables.IVariableEvaluationContext)">
            <summary>
            Evaluates the expression tree and returns the result.
            </summary>
            <param name="context">The current context.</param>
            <returns>Result of the evaluated tree.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="context"/> is null.</exception>
            <exception cref="T:System.ArgumentException">The context has no generic context set.</exception>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Variables.VariableExpressionTree.Parse(System.String,System.String)">
            <summary>
            Parses a string into an expression tree.
            </summary>
            <param name="text">The text to parse.</param>
            <param name="variableSupportCode">The type of variable support to use.</param>
            <returns>Parsed expression tree.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="text"/> is null or <paramref name="variableSupportCode"/> is null or empty.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="variableSupportCode"/> is not a valid value.</exception>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Variables.VariableExpressionTree.FormatVariableName(System.String,System.String)">
            <summary>
            Returns a minimally-escaped formatted variable name.
            </summary>
            <param name="variableName">The name of the variable.</param>
            <param name="variableSupportCode">The type of variable support to use.</param>
            <returns>The formatted variable name.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="variableName"/> is null or empty or <paramref name="variableSupportCode"/> is null or empty.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="variableName"/> has invalid characters or <paramref name="variableSupportCode"/> is not a valid value.</exception>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Variables.VariableBase">
            <summary>
            Base class for all variables.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Variables.VariableBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Variables.VariableBase"/> class.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Variables.VariableBase.Value">
            <summary>
            Gets or sets the value of the variable.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Predicates.GroupPredicateBase">
            <summary>
            Base class for all group Predicates.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Predicates.GroupPredicateBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Predicates.GroupPredicateBase"/> class.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Predicates.GroupPredicateBase.Predicates">
            <summary>
            Gets or sets the predicates contained within the group.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Predicates.GroupPredicateBase.ToString(System.Boolean)">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <param name="recurse">Value indicating whether contained predicates should be included.</param>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Predicates.GroupPredicateBase.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Predicates.PredicateBase">
            <summary>
            Base class for all BuildMaster Predicates.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Predicates.PredicateBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Predicates.PredicateBase"/> class.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Predicates.PredicateBase.Evaluate(Inedo.BuildMaster.Extensibility.Actions.IActionExecutionContext)">
            <summary>
            Evaluates the Predicate, returning the resulting value.
            </summary>
            <param name="context">Context in which the Predicate is evaluated.</param>
            <returns>Resulting value of the evaluated Predicate.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Predicates.PredicateBase.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.SimpleBuildMasterContext">
            <summary>
            A simple implementation of <see cref="T:Inedo.BuildMaster.Extensibility.IGenericBuildMasterContext" />.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.SimpleBuildMasterContext.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.SimpleBuildMasterContext"/> class.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.SimpleBuildMasterContext.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.SimpleBuildMasterContext" /> class.
            </summary>
            <param name="applicationGroupId">The application group identifier.</param>
            <param name="applicationId">The application identifier.</param>
            <param name="releaseNumber">The release number.</param>
            <param name="buildNumber">The build number.</param>
            <param name="deployableId">The deployable identifier.</param>
            <param name="executionId">The execution identifier.</param>
            <param name="environmentId">The environment identifier.</param>
            <param name="serverId">The server identifier.</param>
            <param name="promotionId">The promotion identifier.</param>
            <param name="serverRoleId">The server role identifier.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.SimpleBuildMasterContext.#ctor(Inedo.BuildMaster.Extensibility.Actions.IActionExecutionContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.SimpleBuildMasterContext"/> class.
            </summary>
            <param name="actionExecutionContext">The action execution context.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.SimpleBuildMasterContext.#ctor(Inedo.BuildMaster.Extensibility.Actions.IAgentBasedActionExecutionContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.SimpleBuildMasterContext"/> class.
            </summary>
            <param name="agentBasedActionExecutionContext">The agent based action execution context.</param>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.SimpleBuildMasterContext.ApplicationGroupId">
            <summary>
            Gets the ID of the application group ID in the current context, or null if not applicable.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.SimpleBuildMasterContext.ApplicationId">
            <summary>
            Gets the ID of the application in the current context, or null if not applicable.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.SimpleBuildMasterContext.ReleaseNumber">
            <summary>
            Gets the release number in the current context, or null if not applicable.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.SimpleBuildMasterContext.BuildNumber">
            <summary>
            Gets the build number in the current context, or null if not applicable.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.SimpleBuildMasterContext.DeployableId">
            <summary>
            Gets the ID of the deployable in the current context, or null if not applicable.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.SimpleBuildMasterContext.ExecutionId">
            <summary>
            Gets the ID of the execution in the current context, or null if not applicable.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.SimpleBuildMasterContext.EnvironmentId">
            <summary>
            Gets the ID of the environment in the current context, or null if not applicable.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.SimpleBuildMasterContext.ServerId">
            <summary>
            Gets the ID of the server in the current context, or null if not applicable.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.SimpleBuildMasterContext.PromotionId">
            <summary>
            Gets the ID of the promotion int the current context, or null if not applicable.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.SimpleBuildMasterContext.ServerRoleId">
            <summary>
            Gets the ID of the server role in the current context, or null if not applicable.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.OtterScriptSymbolComparer">
            <summary>
            Represents a string comparison operation that ignores case and also treats
            - and _ characters as identical.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.OtterScriptSymbolComparer.Instance">
            <summary>
            Gets the instance of the <see cref="T:Inedo.BuildMaster.OtterScriptSymbolComparer"/> class.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Web.FieldEditModeAttribute">
            <summary>
            Indicates how a property should be edited as a text value in generic action editors.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Web.FieldEditModeAttribute.#ctor(Inedo.BuildMaster.Web.FieldEditMode)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Web.FieldEditModeAttribute"/> class.
            </summary>
            <param name="fieldEditMode">The field edit mode.</param>
        </member>
        <member name="P:Inedo.BuildMaster.Web.FieldEditModeAttribute.EditMode">
            <summary>
            Gets or sets the edit mode.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Web.BuildMasterSmtpClient">
            <summary>
            A simple wrapper around SmtpClient that defaults the SMTP settings to the values specified in configuration.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Web.BuildMasterSmtpClient.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Web.BuildMasterSmtpClient"/> class using the default configuration settings.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Web.BuildMasterSmtpClient.#ctor(System.String,System.Int32,System.String,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Web.BuildMasterSmtpClient"/> class using the specified SMTP settings.
            </summary>
            <param name="host">The host.</param>
            <param name="port">The port.</param>
            <param name="username">The username.</param>
            <param name="password">The password.</param>
            <param name="enableSSL">Whether to enable transmission over SSL.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Web.BuildMasterSmtpClient.CreateMailMessage(System.String)">
            <summary>
            Creates a mail message with the configured From address to the specified recipient.
            </summary>
            <param name="toEmailAddress">To email address.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Web.BuildMasterSmtpClient.CreateMailMessage(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a mail message with the configured From address to the specified recipients.
            </summary>
            <param name="toEmailAddresses">To email addresses of the recipients.</param>
        </member>
        <member name="T:Inedo.BuildMaster.Web.FieldEditMode">
            <summary>
            Indicates how a field is to be edited.
            </summary>
            <remarks>
            This is only applicable to string-based fields
            </remarks>
        </member>
        <member name="F:Inedo.BuildMaster.Web.FieldEditMode.Singleline">
            <summary>
            Display a single line textbox.
            </summary>
            <remarks>Default behavior</remarks>
        </member>
        <member name="F:Inedo.BuildMaster.Web.FieldEditMode.Multiline">
            <summary>
            Display as a multiline (3 row) textarea.
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Web.FieldEditMode.Password">
            <summary>
            Display as a password text box.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Web.CustomSetterAttribute">
            <summary>
            Indicates that a type has a custom value setter control.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Web.CustomSetterAttribute.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Web.CustomSetterAttribute"/> class.
            </summary>
            <param name="controlType">Type of the setter control.</param>
        </member>
        <member name="P:Inedo.BuildMaster.Web.CustomSetterAttribute.ControlType">
            <summary>
            Gets the type of the setter control.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Web.CustomEditorAttribute">
            <summary>
            Indicates that a type has a custom editor.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Web.CustomEditorAttribute.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Web.CustomEditorAttribute"/> class.
            </summary>
            <param name="editorType">Type of the editor.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Web.CustomEditorAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Web.CustomEditorAttribute"/> class.
            </summary>
            <param name="editorTypeName">Assembly qualified name of the editor's type.</param>
        </member>
        <member name="P:Inedo.BuildMaster.Web.CustomEditorAttribute.EditorType">
            <summary>
            Gets the type of the editor.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Web.CustomEditorAttribute.ControlType">
            <summary>
            Gets the type of the editor.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Web.DisplayRemoteActionPropertiesAttribute">
            <summary>
            Provides addtional control over the behavior of the default action editor
            for remote actions.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Web.DisplayRemoteActionPropertiesAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Web.DisplayRemoteActionPropertiesAttribute"/> class.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Web.DisplayRemoteActionPropertiesAttribute.DisplaySourceDirectory">
            <summary>
            Gets or sets a value indicating whether to display a source directory editor
            on the default action editor.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Web.DisplayRemoteActionPropertiesAttribute.DisplayTargetDirectory">
            <summary>
            Gets or sets a value indicating whether to display a target directory editor
            on the default action editor.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Web.ProxiedException">
            <summary>
            Wraps an exception of another type.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Web.ProxiedException.OriginalExceptionType">
            <summary>
            Gets the original exception type.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Web.Security.ForceManualTaskValidationAttribute">
            <summary>
            Indicates that a method implements its own task validation.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Web.Security.ForceManualTaskValidationAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Web.Security.ForceManualTaskValidationAttribute"/> class.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Web.Security.ScopedTask">
            <summary>
            Represents a task with a scope.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Web.Security.ScopedTask.#ctor(Inedo.BuildMaster.Web.Security.SecuredTask,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Web.Security.ScopedTask"/> class.
            </summary>
            <param name="securedTask">The task.</param>
            <param name="applicationGroupId">The application group scope.</param>
            <param name="applicationId">The application scope.</param>
            <param name="environmentId">The environment scope.</param>
            <param name="serverId">The server scope.</param>
        </member>
        <member name="P:Inedo.BuildMaster.Web.Security.ScopedTask.Task">
            <summary>
            Gets the task.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Web.Security.ScopedTask.ApplicationGroupId">
            <summary>
            Gets the application group scope if applicable.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Web.Security.ScopedTask.ApplicationId">
            <summary>
            Gets the application scope if applicable.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Web.Security.ScopedTask.EnvironmentId">
            <summary>
            Gets the environment scope if applicable.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Web.Security.ScopedTask.ServerId">
            <summary>
            Gets the server scope if applicable.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Web.Security.ScopedTask.GetHashCode">
            <summary>
            Returns a hash code for the instance.
            </summary>
            <returns>A hash code.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Web.Security.ScopedTask.Equals(Inedo.BuildMaster.Web.Security.ScopedTask)">
            <summary>
            Returns a value indicating whether this instances is equivalent to another.
            </summary>
            <param name="other">The other instance.</param>
            <returns>True if instances are equal; otherwise false.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Web.Security.ScopedTask.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instances is equivalent to another.
            </summary>
            <param name="obj">The other instance.</param>
            <returns>True if instances are equal; otherwise false.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Web.Security.ScopedTask.ToString">
            <summary>
            Returns a string representation of this instance.
            </summary>
            <returns>String representation of this instance.</returns>
        </member>
        <member name="T:Inedo.BuildMaster.Web.Security.SecuredTask">
            <summary>
            List of tasks users can perform.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Web.Security.SecuredTaskDeniedException">
            <summary>
            The exception that is thrown when a user cannot perform a task.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Web.Security.SecuredTaskDeniedException.#ctor(Inedo.BuildMaster.Web.Security.SecuredTask,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Web.Security.SecuredTaskDeniedException"/> class.
            </summary>
            <param name="task">The task that cannot be performed.</param>
            <param name="userName">The name of the user which was denied the task.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Web.Security.SecuredTaskDeniedException.#ctor(Inedo.BuildMaster.Web.Security.SecuredTask,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Web.Security.SecuredTaskDeniedException"/> class.
            </summary>
            <param name="task">The task that cannot be performed.</param>
            <param name="userName">The name of the user which was denied the task.</param>
            <param name="privilegeId">The ID of the deny privilege if applicable.</param>
        </member>
        <member name="P:Inedo.BuildMaster.Web.Security.SecuredTaskDeniedException.SecuredTask">
            <summary>
            Gets the task which the user tried to perform.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Web.Security.SecuredTaskDeniedException.UserName">
            <summary>
            Gets the name of the user which tried to perform the task.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Web.Security.SecuredTaskDeniedException.DeniedPrivilegeId">
            <summary>
            Gets the ID of the deny privilege if applicable.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Web.Security.SecuredTaskDeniedException.Message">
            <summary>
            Gets a friendly description of the error.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Web.Security.SecuredTaskDeniedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets the object data.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Inedo.BuildMaster.Web.Security.SecuredTaskRequiredAttribute">
            <summary>
            Marks a page as requiring a specific secured task.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Web.Security.SecuredTaskRequiredAttribute.#ctor(Inedo.BuildMaster.Web.Security.SecuredTask)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Web.Security.SecuredTaskRequiredAttribute"/> class.
            </summary>
            <param name="task">The required task.</param>
        </member>
        <member name="P:Inedo.BuildMaster.Web.Security.SecuredTaskRequiredAttribute.Task">
            <summary>
            Gets the required task.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Web.Security.TaskChecker">
            <summary>
            Performs evaluation of privileges for a user directory.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Web.Security.TaskChecker.Create">
            <summary>
            Returns a new <see cref="T:Inedo.BuildMaster.Web.Security.TaskChecker"/> instance using the current directory provider.
            </summary>
            <returns>New instance of a <see cref="T:Inedo.BuildMaster.Web.Security.TaskChecker"/>.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Web.Security.TaskChecker.Create(System.Int32)">
            <summary>
            Returns a new <see cref="T:Inedo.BuildMaster.Web.Security.TaskChecker"/> instance.
            </summary>
            <param name="userDirectoryId">The ID of the user directory to use.</param>
            <returns>New instance of a <see cref="T:Inedo.BuildMaster.Web.Security.TaskChecker"/>.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Web.Security.TaskChecker.ValidatePrivileges(Inedo.BuildMaster.Extensibility.UserDirectories.IUserDirectoryUser,Inedo.BuildMaster.Web.Security.SecuredTask,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Verifies that the specified user can perform the specified task.
            </summary>
            <param name="user">The user to evaluate privileges for.</param>
            <param name="task">The task to test.</param>
            <param name="applicationGroupId">The current application group ID in scope.</param>
            <param name="applicationId">The current application ID in scope.</param>
            <param name="environmentId">The current environment ID in scope.</param>
            <param name="serverId">The current server ID in scope.</param>
            <exception cref="T:Inedo.BuildMaster.Web.Security.SecuredTaskDeniedException">The user cannot perform the specified task.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="user"/> is null.</exception>
        </member>
        <member name="M:Inedo.BuildMaster.Web.Security.TaskChecker.IsAuthorizedForTask(Inedo.BuildMaster.Extensibility.UserDirectories.IUserDirectoryUser,Inedo.BuildMaster.Web.Security.SecuredTask,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Returns a value indicating whether the specified user is authorized for the specified task.
            </summary>
            <param name="user">The user to evaluate privileges for.</param>
            <param name="task">The task to test.</param>
            <param name="applicationGroupId">The current application group ID in scope.</param>
            <param name="applicationId">The current application ID in scope.</param>
            <param name="environmentId">The current environment ID in scope.</param>
            <param name="serverId">The current server ID in scope.</param>
            <returns>True if the user can perform the specified task; otherwise false.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="user"/> is null.</exception>
        </member>
        <member name="M:Inedo.BuildMaster.Web.Security.TaskChecker.FindPrivilege(Inedo.BuildMaster.Extensibility.UserDirectories.IUserDirectoryUser,Inedo.BuildMaster.Web.Security.SecuredTask,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Returns the ID of the evaluated privilege for the specified user and task.
            </summary>
            <param name="user">The user to evaluate privileges for.</param>
            <param name="task">The task to test.</param>
            <param name="applicationGroupId">The current application group ID in scope.</param>
            <param name="applicationId">The current application ID in scope.</param>
            <param name="environmentId">The current environment ID in scope.</param>
            <param name="serverId">The current server ID in scope.</param>
            <returns>A positive number indicates that the privilege was explicitly granted; a negative number indicates that the privilege was explicitly denied; zero indicates no privileges.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="user"/> is null.</exception>
        </member>
        <member name="M:Inedo.BuildMaster.Web.Security.TaskChecker.GetEffectivePrivileges(Inedo.BuildMaster.Extensibility.UserDirectories.IUserDirectoryUser,System.Int32,System.Int32)">
            <summary>
            Returns a sequence of tasks which the user is allowed to perform in the specified context.
            </summary>
            <param name="user">The user to evaluate privileges for.</param>
            <param name="applicationId">The current application ID in scope.</param>
            <param name="environmentId">The current environment ID in scope.</param>
            <returns>Sequence of permitted tasks.</returns>
            <remarks>
            This method is for informational purposes only and is not optimized for performance.
            </remarks>
        </member>
        <member name="M:Inedo.BuildMaster.Web.Security.TaskChecker.EnvironmentPrivilegeChecker.PrivilegeApplies(Inedo.BuildMaster.Web.Security.TaskChecker.Privilege,System.Int32)">
            <summary>
            Determines whether a privilege applies to a specified environment by traversing the environments's ancestor environments.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Web.Security.TaskChecker.EnvironmentPrivilegeChecker.GetDepth(System.Int32)">
            <summary>
            Gets the number of environments that are ancestors of the specified environment.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Web.Security.TaskChecker.AppGroupPrivilegeChecker.PrivilegeApplies(Inedo.BuildMaster.Web.Security.TaskChecker.Privilege,System.Int32)">
            <summary>
            Determines whether a privilege applies to a specified group by traversing the group's ancestor groups.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Web.Security.TaskChecker.AppGroupPrivilegeChecker.GetDepth(System.Int32)">
            <summary>
            Gets the number of application groups that are ancestors of the specified group.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Web.Security.WebUserContext">
            <summary>
            Represents the current user context.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Web.Security.WebUserContext.IsAvailable">
            <summary>
            Gets a value indicating whether a user is currently in context.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Web.Security.WebUserContext.UserInfo">
            <summary>
            Gets information about the user currently in context.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Web.Security.WebUserContext.SetUser(Inedo.BuildMaster.Extensibility.UserDirectories.IUserDirectoryUser)">
            <summary>
            Sets the user info that will persist for the duration of the current HttpContext.
            </summary>
            <param name="user"></param>
        </member>
        <member name="P:Inedo.BuildMaster.Web.Security.WebUserContext.CurrentUserDirectory">
            <summary>
            Gets the current user directory.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Web.Security.WebUserContext.GetUserDirectory(System.Int32)">
            <summary>
            Gets the specified user directory by ID.
            </summary>
            <param name="userDirectoryId"></param>
            <returns></returns>
        </member>
        <member name="M:Inedo.BuildMaster.Web.Security.WebUserContext.ValidatePrivileges(Inedo.BuildMaster.Web.Security.SecuredTask,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Verifies that the current user can perform the specified task.
            </summary>
            <param name="task">The task to test.</param>
            <param name="applicationGroupId">The current application group ID in scope.</param>
            <param name="applicationId">The current application ID in scope.</param>
            <param name="environmentId">The current environment ID in scope.</param>
            <param name="serverId">The current server ID in scope.</param>
            <exception cref="T:Inedo.BuildMaster.Web.Security.SecuredTaskDeniedException">The user cannot perform the specified task.</exception>
        </member>
        <member name="M:Inedo.BuildMaster.Web.Security.WebUserContext.ValidatePrivileges(Inedo.BuildMaster.Web.Security.ScopedTask)">
            <summary>
            Verifies that the current user can perform the specified task.
            </summary>
            <param name="scopedTask">The task to test.</param>
            <exception cref="T:Inedo.BuildMaster.Web.Security.SecuredTaskDeniedException">The user cannot perform the specified task.</exception>
        </member>
        <member name="M:Inedo.BuildMaster.Web.Security.WebUserContext.CanPerformTask(Inedo.BuildMaster.Web.Security.ScopedTask)">
            <summary>
            Returns a value indicating whether the current user is allowed to perform the specified task.
            </summary>
            <param name="scopedTask">The task to check.</param>
            <returns>True if the current user can perform the task; otherwise false.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="scopedTask"/> is null.</exception>
        </member>
        <member name="M:Inedo.BuildMaster.Web.Security.WebUserContext.CanPerformTask(Inedo.BuildMaster.Web.Security.SecuredTask,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Returns a value indicating whether the current user is allowed to perform the specified task.
            </summary>
            <param name="task">The task to check.</param>
            <param name="applicationGroupId">The application group in context if applicable.</param>
            <param name="applicationId">The application in context if applicable.</param>
            <param name="environmentId">The environment in context if applicable.</param>
            <param name="serverId">The server in context if applicable.</param>
            <returns>True if the current user can perform the task; otherwise false.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Web.Security.WebUserContext.CanPerformTasks(Inedo.BuildMaster.Web.Security.SecuredTask[])">
            <summary>
            Returns a value indicating whether the current user is allowed to perform the specified tasks.
            </summary>
            <param name="tasks">The tasks to check.</param>
            <returns>Array of values whose indexes correspond to the supplied tasks.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Web.Security.WebUserContext.CanPerformTasks(System.Collections.Generic.IEnumerable{Inedo.BuildMaster.Web.Security.ScopedTask})">
            <summary>
            Returns a value indicating whether the current user is allowed to perform the specified tasks.
            </summary>
            <param name="scopedTasks">The tasks to check.</param>
            <returns>Array of values whose indexes correspond to the supplied tasks.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="scopedTasks"/> is null.</exception>
        </member>
        <member name="M:Inedo.BuildMaster.Web.Security.WebUserContext.InvalidateCache">
            <summary>
            Invalidates the privilege cache.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Web.SoapExceptionWrapper">
            <summary>
            Contains helper methods to wrap and unwrap <see cref="T:System.Web.Services.Protocols.SoapException"/>
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Web.SoapExceptionWrapper.WrapException(System.Exception)">
            <summary>
            Wraps the exception.
            </summary>
            <param name="ex">The ex.</param>
            <returns></returns>
        </member>
        <member name="M:Inedo.BuildMaster.Web.SoapExceptionWrapper.UnwrapException(System.Exception)">
            <summary>
            Unwraps the exception.
            </summary>
            <param name="ex">The ex.</param>
            <returns></returns>
        </member>
        <member name="T:Inedo.BuildMaster.Web.UnauthorizedClientException">
            <summary>
            Thrown by an agent when a client attempts to use the service
            without authorization.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Web.UnauthorizedClientException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Web.UnauthorizedClientException"/> class.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Web.UnauthorizedClientException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Prevents a default instance of the <see cref="T:Inedo.BuildMaster.Web.UnauthorizedClientException"/> class from being created.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="info"/> parameter is null.
              </exception>
              
            <exception cref="T:System.Runtime.Serialization.SerializationException">
            The class name is null or <see cref="P:System.Exception.HResult"/> is zero (0).
              </exception>
        </member>
        <member name="P:Inedo.BuildMaster.Web.UnauthorizedClientException.StackTrace">
            <summary>
            Gets a string representation of the frames on the call stack at the time the current exception was thrown.
            </summary>
            <returns>
            A string that describes the contents of the call stack, with the most recent method call appearing first.
              </returns>
              
            <PermissionSet>
              <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*"/>
              </PermissionSet>
        </member>
        <member name="P:Inedo.BuildMaster.Web.UnauthorizedClientException.Source">
            <summary>
            Gets or sets the name of the application or the object that causes the error.
            </summary>
            <returns>
            The name of the application or the object that causes the error.
              </returns>
        </member>
        <member name="P:Inedo.BuildMaster.Web.UnauthorizedClientException.HelpLink">
            <summary>
            Gets or sets a link to the help file associated with this exception.
            </summary>
            <returns>
            The Uniform Resource Name (URN) or Uniform Resource Locator (URL).
              </returns>
        </member>
        <member name="P:Inedo.BuildMaster.Web.UnauthorizedClientException.Message">
            <summary>
            Gets a message that describes the current exception.
            </summary>
            <returns>
            The error message that explains the reason for the exception, or an empty string("").
              </returns>
        </member>
        <member name="T:Inedo.BuildMaster.Web.UnwrappableException">
            <summary>
            Represents an exception that could not be de-serialized from <see cref="T:Inedo.BuildMaster.Web.SoapExceptionWrapper"/>
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Web.UnwrappableException.#ctor">
            <summary>
            Creates a new instance
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Web.UnwrappableException.#ctor(System.String,System.String,System.String)">
            <summary>
            Creates a new instance with the specified parameters
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Web.UnwrappableException.Message">
            <summary>
            Gets a message that describes the current exception.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Web.UnwrappableException.StackTrace">
            <summary>
            Gets a string representation of the frames on the call stack at the time the current exception was thrown.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Web.UnwrappableException.Source">
            <summary>
            Gets or sets the name of the application or the object that causes the error.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.DeployableInfo">
            <summary>
            Represents a deployable that is part of a release.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.DeployableInfo.#ctor(Inedo.BuildMaster.Data.Tables.ReleaseDeployables_Extended)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.DeployableInfo"/> class.
            </summary>
            <param name="releaseDeployable">The release deployable.</param>
        </member>
        <member name="P:Inedo.BuildMaster.DeployableInfo.ApplicationId">
            <summary>
            Gets the application ID.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.DeployableInfo.ApplicationName">
            <summary>
            Gets the application name.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.DeployableInfo.DeployableId">
            <summary>
            Gets the deployable ID.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.DeployableInfo.DeployableName">
            <summary>
            Gets the deployable name.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.DeployableInfo.ImportedFromApplicationId">
            <summary>
            Gets the ID of the application that this deployable has been imported from.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.DeployableInfo.ImportedFromApplicationName">
            <summary>
            Gets the name of the application that this deployable has been imported from.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.DeployableInfo.IsImported">
            <summary>
            Gets a value indicating whether this deployable is imported from another application.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.DeployableInfo.ReleaseNumber">
            <summary>
            Gets the release number of the deployable.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.DeployableInfo.ToString">
            <summary>
            Returns a string.
            </summary>
            <returns>A string.</returns>
        </member>
        <member name="T:Inedo.BuildMaster.Diagnostics.DatabaseErrorMessenger">
            <summary>
            Implementation of <see cref="T:Inedo.Diagnostics.IMessenger"/> that writes to the BuildMaster event log.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Diagnostics.DatabaseErrorMessenger.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Diagnostics.DatabaseErrorMessenger"/> class.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Diagnostics.DatabaseErrorMessenger.#ctor(Inedo.Diagnostics.MessageLevel)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Diagnostics.DatabaseErrorMessenger"/> class.
            </summary>
            <param name="minimumLevelToLog">The minimum level to log.</param>
        </member>
        <member name="P:Inedo.BuildMaster.Diagnostics.DatabaseErrorMessenger.MinimumLevelToLog">
            <summary>
            Gets the minimum level to log.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Diagnostics.IBuildMasterLogContext">
            <summary>
            Represents context information for BuildMaster log messages.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Diagnostics.IBuildMasterLogContext.ScheduleId">
            <summary>
            Gets the ID of the automatic build in context, or null if not applicable.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Diagnostics.IBuildMasterLogContext.RequirementId">
            <summary>
            Gets the ID of the promotion requirement in context, or null if not applicable.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Diagnostics.IBuildMasterLogContext.ProviderId">
            <summary>
            Gets the ID of the provider in context, or null if not applicable.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Diagnostics.IBuildMasterLogContext.EventListenerId">
            <summary>
            Gets the ID of the event listener in context, or null if not applicable.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Diagnostics.IBuildMasterLogContext.DisplayHeaderNotification">
            <summary>
            Gets whether BuildMaster should notify users that there are errors in the log.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Events.BuildMasterEvent">
            <summary>
            Base class for BuildMaster event details.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Events.BuildMasterEvent.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Events.BuildMasterEvent"/> class.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Events.BuildMasterEvent.ApplicationId">
            <summary>
            Gets the application ID.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Events.BuildMasterEvent.EventCode">
            <summary>
            Gets the unique event code.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Events.BuildMasterEvent.EventDescription">
            <summary>
            Gets a description of the event type.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Events.BuildMasterEvent.GetBuildMasterEvents">
            <summary>
            Returns all of the BuildMaster events.
            </summary>
            <returns>Array containing all of the BuildMaster events.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Events.BuildMasterEvent.GetWorkflowOnlyBuildMasterEvents">
            <summary>
            Returns all of the workflow-only BuildMaster events.
            </summary>
            <returns>Array containing all of the workflow-only BuildMaster events.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Events.BuildMasterEvent.GetDetail(System.String)">
            <summary>
            Returns a specific detail about the event occurrence.
            </summary>
            <param name="keyName">Name of the key.</param>
            <returns>The value of hte specified detail.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="keyName"/> is null or empty.</exception>
            <exception cref="T:System.InvalidOperationException">Event details have not been initialized.</exception>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException"><paramref name="keyName"/> does not refer to a valid detail.</exception>
        </member>
        <member name="M:Inedo.BuildMaster.Events.BuildMasterEvent.GetDetails">
            <summary>
            Returns all of the details of the event occurrence.
            </summary>
            <returns>All of the details of the event occurrence.</returns>
            <exception cref="T:System.InvalidOperationException">Event details have not been initialized.</exception>
        </member>
        <member name="T:Inedo.BuildMaster.Events.EventPropertiesAttribute">
            <summary>
            Event properties
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Events.EventPropertiesAttribute.EventCode">
            <summary>
            Gets the event code.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Events.EventPropertiesAttribute.EventDescription">
            <summary>
            Gets the event description.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Events.EventPropertiesAttribute.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Events.EventPropertiesAttribute"/> class.
            </summary>
            <param name="eventCode">The event code.</param>
            <param name="eventDescription">The event description.</param>
        </member>
        <member name="T:Inedo.BuildMaster.Events.BuildMasterEventFactory">
            <summary>
            Creates <see cref="T:Inedo.BuildMaster.Events.BuildMasterEvent"/> instances based on event types.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Events.BuildMasterEventFactory.CreateEventWithDetails(System.String,System.Nullable{System.Int32},System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Creates a <see cref="T:Inedo.BuildMaster.Events.BuildMasterEvent"/> and popluates its details.
            </summary>
            <param name="eventCode">The event code.</param>
            <param name="applicationId">The application identifier.</param>
            <param name="details">The details.</param>
        </member>
        <member name="T:Inedo.BuildMaster.Configuration.CoreConfig">
            <summary>
            Configuration items used within core
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Configuration.CoreConfig.BaseWorkingDirectory">
            <summary>
            Gets the BuildMaster working directory
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Configuration.CoreConfig.DbConnectionString">
            <summary>
            Gets the ConnectionString used by BuildMaster to connect to its database.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Configuration.CoreConfig.MinimumLogLevel">
            <summary>
            Gets the minimum log level that determine whether to log errors to the database.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Configuration.CoreConfig.DbSync">
            <summary>
            Gets the DbSync.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Configuration.CoreConfig.GetConfigSource">
            <summary>
            Loads the configuration <see cref="T:Inedo.Configuration.Sources.IConfigSource"/> associated with
            this configuration
            </summary>
            <returns>
            instance of IConfigSource
            </returns>
        </member>
        <member name="M:Inedo.BuildMaster.Configuration.CoreConfig.OverrideConfigSource(Inedo.Configuration.Sources.IConfigSource)">
            <summary>
            Replaces the configuration source used by <see cref="T:Inedo.BuildMaster.Configuration.CoreConfig"/>.
            </summary>
            <param name="configSource">The <see cref="T:Inedo.Configuration.Sources.IConfigSource"/> to use (or null to use the default).</param>
        </member>
        <member name="T:Inedo.BuildMaster.Files.DiffMatchPatch.Operation">
            -
            The data structure representing a diff is a List of Diff objects:
            {Diff(Operation.DELETE, "Hello"), Diff(Operation.INSERT, "Goodbye"),
             Diff(Operation.EQUAL, " world.")}
            which means: delete "Hello", add "Goodbye" and keep " world."
        </member>
        <member name="T:Inedo.BuildMaster.Files.DiffMatchPatch.Diff">
            Class representing one diff operation.
        </member>
        <member name="M:Inedo.BuildMaster.Files.DiffMatchPatch.Diff.#ctor(Inedo.BuildMaster.Files.DiffMatchPatch.Operation,System.String)">
            Constructor.  Initializes the diff with the provided values.
            @param operation One of INSERT, DELETE or EQUAL.
            @param text The text being applied.
        </member>
        <member name="M:Inedo.BuildMaster.Files.DiffMatchPatch.Diff.ToString">
            Display a human-readable version of this Diff.
            @return text version.
        </member>
        <member name="M:Inedo.BuildMaster.Files.DiffMatchPatch.Diff.Equals(System.Object)">
            Is this Diff equivalent to another Diff?
            @param d Another Diff to compare against.
            @return true or false.
        </member>
        <member name="T:Inedo.BuildMaster.Files.DiffMatchPatch.Patch">
            Class representing one patch operation.
        </member>
        <member name="M:Inedo.BuildMaster.Files.DiffMatchPatch.Patch.ToString">
            Emmulate GNU diff's format.
            Header: @@ -382,8 +481,9 @@
            Indicies are printed as 1-based, not 0-based.
            @return The GNU diff string.
        </member>
        <member name="T:Inedo.BuildMaster.Files.DiffMatchPatch.diff_match_patch">
            Class containing the diff, match and patch methods.
            Also Contains the behaviour settings.
        </member>
        <member name="M:Inedo.BuildMaster.Files.DiffMatchPatch.diff_match_patch.diff_main(System.String,System.String)">
            Find the differences between two texts.
            Run a faster, slightly less optimal diff.
            This method allows the 'checklines' of diff_main() to be optional.
            Most of the time checklines is wanted, so default to true.
            @param text1 Old string to be diffed.
            @param text2 New string to be diffed.
            @return List of Diff objects.
        </member>
        <member name="M:Inedo.BuildMaster.Files.DiffMatchPatch.diff_match_patch.diff_main(System.String,System.String,System.Boolean)">
            Find the differences between two texts.
            @param text1 Old string to be diffed.
            @param text2 New string to be diffed.
            @param checklines Speedup flag.  If false, then don't run a
                line-level diff first to identify the changed areas.
                If true, then run a faster slightly less optimal diff.
            @return List of Diff objects.
        </member>
        <member name="M:Inedo.BuildMaster.Files.DiffMatchPatch.diff_match_patch.diff_main(System.String,System.String,System.Boolean,System.DateTime)">
            Find the differences between two texts.  Simplifies the problem by
            stripping any common prefix or suffix off the texts before diffing.
            @param text1 Old string to be diffed.
            @param text2 New string to be diffed.
            @param checklines Speedup flag.  If false, then don't run a
                line-level diff first to identify the changed areas.
                If true, then run a faster slightly less optimal diff.
            @param deadline Time when the diff should be complete by.  Used
                internally for recursive calls.  Users should set DiffTimeout
                instead.
            @return List of Diff objects.
        </member>
        <member name="M:Inedo.BuildMaster.Files.DiffMatchPatch.diff_match_patch.diff_compute(System.String,System.String,System.Boolean,System.DateTime)">
            Find the differences between two texts.  Assumes that the texts do not
            have any common prefix or suffix.
            @param text1 Old string to be diffed.
            @param text2 New string to be diffed.
            @param checklines Speedup flag.  If false, then don't run a
                line-level diff first to identify the changed areas.
                If true, then run a faster slightly less optimal diff.
            @param deadline Time when the diff should be complete by.
            @return List of Diff objects.
        </member>
        <member name="M:Inedo.BuildMaster.Files.DiffMatchPatch.diff_match_patch.diff_lineMode(System.String,System.String,System.DateTime)">
            Do a quick line-level diff on both strings, then rediff the parts for
            greater accuracy.
            This speedup can produce non-minimal diffs.
            @param text1 Old string to be diffed.
            @param text2 New string to be diffed.
            @param deadline Time when the diff should be complete by.
            @return List of Diff objects.
        </member>
        <member name="M:Inedo.BuildMaster.Files.DiffMatchPatch.diff_match_patch.diff_bisect(System.String,System.String,System.DateTime)">
            Find the 'middle snake' of a diff, split the problem in two
            and return the recursively constructed diff.
            See Myers 1986 paper: An O(ND) Difference Algorithm and Its Variations.
            @param text1 Old string to be diffed.
            @param text2 New string to be diffed.
            @param deadline Time at which to bail if not yet complete.
            @return List of Diff objects.
        </member>
        <member name="M:Inedo.BuildMaster.Files.DiffMatchPatch.diff_match_patch.diff_bisectSplit(System.String,System.String,System.Int32,System.Int32,System.DateTime)">
            Given the location of the 'middle snake', split the diff in two parts
            and recurse.
            @param text1 Old string to be diffed.
            @param text2 New string to be diffed.
            @param x Index of split point in text1.
            @param y Index of split point in text2.
            @param deadline Time at which to bail if not yet complete.
            @return LinkedList of Diff objects.
        </member>
        <member name="M:Inedo.BuildMaster.Files.DiffMatchPatch.diff_match_patch.diff_linesToChars(System.String,System.String)">
            Split two texts into a list of strings.  Reduce the texts to a string of
            hashes where each Unicode character represents one line.
            @param text1 First string.
            @param text2 Second string.
            @return Three element Object array, containing the encoded text1, the
                encoded text2 and the List of unique strings.  The zeroth element
                of the List of unique strings is intentionally blank.
        </member>
        <member name="M:Inedo.BuildMaster.Files.DiffMatchPatch.diff_match_patch.diff_linesToCharsMunge(System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.Dictionary{System.String,System.Int32})">
            Split a text into a list of strings.  Reduce the texts to a string of
            hashes where each Unicode character represents one line.
            @param text String to encode.
            @param lineArray List of unique strings.
            @param lineHash Map of strings to indices.
            @return Encoded string.
        </member>
        <member name="M:Inedo.BuildMaster.Files.DiffMatchPatch.diff_match_patch.diff_charsToLines(System.Collections.Generic.ICollection{Inedo.BuildMaster.Files.DiffMatchPatch.Diff},System.Collections.Generic.List{System.String})">
            Rehydrate the text in a diff from a string of line hashes to real lines
            of text.
            @param diffs List of Diff objects.
            @param lineArray List of unique strings.
        </member>
        <member name="M:Inedo.BuildMaster.Files.DiffMatchPatch.diff_match_patch.diff_commonPrefix(System.String,System.String)">
            Determine the common prefix of two strings.
            @param text1 First string.
            @param text2 Second string.
            @return The number of characters common to the start of each string.
        </member>
        <member name="M:Inedo.BuildMaster.Files.DiffMatchPatch.diff_match_patch.diff_commonSuffix(System.String,System.String)">
            Determine the common suffix of two strings.
            @param text1 First string.
            @param text2 Second string.
            @return The number of characters common to the end of each string.
        </member>
        <member name="M:Inedo.BuildMaster.Files.DiffMatchPatch.diff_match_patch.diff_commonOverlap(System.String,System.String)">
            Determine if the suffix of one string is the prefix of another.
            @param text1 First string.
            @param text2 Second string.
            @return The number of characters common to the end of the first
                string and the start of the second string.
        </member>
        <member name="M:Inedo.BuildMaster.Files.DiffMatchPatch.diff_match_patch.diff_halfMatch(System.String,System.String)">
            Do the two texts share a Substring which is at least half the length of
            the longer text?
            This speedup can produce non-minimal diffs.
            @param text1 First string.
            @param text2 Second string.
            @return Five element String array, containing the prefix of text1, the
                suffix of text1, the prefix of text2, the suffix of text2 and the
                common middle.  Or null if there was no match.
        </member>
        <member name="M:Inedo.BuildMaster.Files.DiffMatchPatch.diff_match_patch.diff_halfMatchI(System.String,System.String,System.Int32)">
            Does a Substring of shorttext exist within longtext such that the
            Substring is at least half the length of longtext?
            @param longtext Longer string.
            @param shorttext Shorter string.
            @param i Start index of quarter length Substring within longtext.
            @return Five element string array, containing the prefix of longtext, the
                suffix of longtext, the prefix of shorttext, the suffix of shorttext
                and the common middle.  Or null if there was no match.
        </member>
        <member name="M:Inedo.BuildMaster.Files.DiffMatchPatch.diff_match_patch.diff_cleanupSemantic(System.Collections.Generic.List{Inedo.BuildMaster.Files.DiffMatchPatch.Diff})">
            Reduce the number of edits by eliminating semantically trivial
            equalities.
            @param diffs List of Diff objects.
        </member>
        <member name="M:Inedo.BuildMaster.Files.DiffMatchPatch.diff_match_patch.diff_cleanupSemanticLossless(System.Collections.Generic.List{Inedo.BuildMaster.Files.DiffMatchPatch.Diff})">
            Look for single edits surrounded on both sides by equalities
            which can be shifted sideways to align the edit to a word boundary.
            e.g: The c<ins>at c</ins>ame. -> The <ins>cat </ins>came.
            @param diffs List of Diff objects.
        </member>
        <member name="M:Inedo.BuildMaster.Files.DiffMatchPatch.diff_match_patch.diff_cleanupSemanticScore(System.String,System.String)">
            Given two strings, comAdde a score representing whether the internal
            boundary falls on logical boundaries.
            Scores range from 6 (best) to 0 (worst).
            @param one First string.
            @param two Second string.
            @return The score.
        </member>
        <member name="M:Inedo.BuildMaster.Files.DiffMatchPatch.diff_match_patch.diff_cleanupEfficiency(System.Collections.Generic.List{Inedo.BuildMaster.Files.DiffMatchPatch.Diff})">
            Reduce the number of edits by eliminating operationally trivial
            equalities.
            @param diffs List of Diff objects.
        </member>
        <member name="M:Inedo.BuildMaster.Files.DiffMatchPatch.diff_match_patch.diff_cleanupMerge(System.Collections.Generic.List{Inedo.BuildMaster.Files.DiffMatchPatch.Diff})">
            Reorder and merge like edit sections.  Merge equalities.
            Any edit section can move as long as it doesn't cross an equality.
            @param diffs List of Diff objects.
        </member>
        <member name="M:Inedo.BuildMaster.Files.DiffMatchPatch.diff_match_patch.diff_xIndex(System.Collections.Generic.List{Inedo.BuildMaster.Files.DiffMatchPatch.Diff},System.Int32)">
            loc is a location in text1, comAdde and return the equivalent location in
            text2.
            e.g. "The cat" vs "The big cat", 1->1, 5->8
            @param diffs List of Diff objects.
            @param loc Location within text1.
            @return Location within text2.
        </member>
        <member name="M:Inedo.BuildMaster.Files.DiffMatchPatch.diff_match_patch.diff_prettyHtml(System.Collections.Generic.List{Inedo.BuildMaster.Files.DiffMatchPatch.Diff})">
            Convert a Diff list into a pretty HTML report.
            @param diffs List of Diff objects.
            @return HTML representation.
        </member>
        <member name="M:Inedo.BuildMaster.Files.DiffMatchPatch.diff_match_patch.diff_text1(System.Collections.Generic.List{Inedo.BuildMaster.Files.DiffMatchPatch.Diff})">
            Compute and return the source text (all equalities and deletions).
            @param diffs List of Diff objects.
            @return Source text.
        </member>
        <member name="M:Inedo.BuildMaster.Files.DiffMatchPatch.diff_match_patch.diff_text2(System.Collections.Generic.List{Inedo.BuildMaster.Files.DiffMatchPatch.Diff})">
            Compute and return the destination text (all equalities and insertions).
            @param diffs List of Diff objects.
            @return Destination text.
        </member>
        <member name="M:Inedo.BuildMaster.Files.DiffMatchPatch.diff_match_patch.diff_levenshtein(System.Collections.Generic.List{Inedo.BuildMaster.Files.DiffMatchPatch.Diff})">
            Compute the Levenshtein distance; the number of inserted, deleted or
            substituted characters.
            @param diffs List of Diff objects.
            @return Number of changes.
        </member>
        <member name="M:Inedo.BuildMaster.Files.DiffMatchPatch.diff_match_patch.diff_toDelta(System.Collections.Generic.List{Inedo.BuildMaster.Files.DiffMatchPatch.Diff})">
            Crush the diff into an encoded string which describes the operations
            required to transform text1 into text2.
            E.g. =3\t-2\t+ing  -> Keep 3 chars, delete 2 chars, insert 'ing'.
            Operations are tab-separated.  Inserted text is escaped using %xx
            notation.
            @param diffs Array of Diff objects.
            @return Delta text.
        </member>
        <member name="M:Inedo.BuildMaster.Files.DiffMatchPatch.diff_match_patch.diff_fromDelta(System.String,System.String)">
            Given the original text1, and an encoded string which describes the
            operations required to transform text1 into text2, comAdde the full diff.
            @param text1 Source string for the diff.
            @param delta Delta text.
            @return Array of Diff objects or null if invalid.
            @throws ArgumentException If invalid input.
        </member>
        <member name="M:Inedo.BuildMaster.Files.DiffMatchPatch.diff_match_patch.match_main(System.String,System.String,System.Int32)">
            Locate the best instance of 'pattern' in 'text' near 'loc'.
            Returns -1 if no match found.
            @param text The text to search.
            @param pattern The pattern to search for.
            @param loc The location to search around.
            @return Best match index or -1.
        </member>
        <member name="M:Inedo.BuildMaster.Files.DiffMatchPatch.diff_match_patch.match_bitap(System.String,System.String,System.Int32)">
            Locate the best instance of 'pattern' in 'text' near 'loc' using the
            Bitap algorithm.  Returns -1 if no match found.
            @param text The text to search.
            @param pattern The pattern to search for.
            @param loc The location to search around.
            @return Best match index or -1.
        </member>
        <member name="M:Inedo.BuildMaster.Files.DiffMatchPatch.diff_match_patch.match_bitapScore(System.Int32,System.Int32,System.Int32,System.String)">
            Compute and return the score for a match with e errors and x location.
            @param e Number of errors in match.
            @param x Location of match.
            @param loc Expected location of match.
            @param pattern Pattern being sought.
            @return Overall score for match (0.0 = good, 1.0 = bad).
        </member>
        <member name="M:Inedo.BuildMaster.Files.DiffMatchPatch.diff_match_patch.match_alphabet(System.String)">
            Initialise the alphabet for the Bitap algorithm.
            @param pattern The text to encode.
            @return Hash of character locations.
        </member>
        <member name="M:Inedo.BuildMaster.Files.DiffMatchPatch.diff_match_patch.patch_addContext(Inedo.BuildMaster.Files.DiffMatchPatch.Patch,System.String)">
            Increase the context until it is unique,
            but don't let the pattern expand beyond Match_MaxBits.
            @param patch The patch to grow.
            @param text Source text.
        </member>
        <member name="M:Inedo.BuildMaster.Files.DiffMatchPatch.diff_match_patch.patch_make(System.String,System.String)">
            Compute a list of patches to turn text1 into text2.
            A set of diffs will be computed.
            @param text1 Old text.
            @param text2 New text.
            @return List of Patch objects.
        </member>
        <member name="M:Inedo.BuildMaster.Files.DiffMatchPatch.diff_match_patch.patch_make(System.Collections.Generic.List{Inedo.BuildMaster.Files.DiffMatchPatch.Diff})">
            Compute a list of patches to turn text1 into text2.
            text1 will be derived from the provided diffs.
            @param diffs Array of Diff objects for text1 to text2.
            @return List of Patch objects.
        </member>
        <member name="M:Inedo.BuildMaster.Files.DiffMatchPatch.diff_match_patch.patch_make(System.String,System.String,System.Collections.Generic.List{Inedo.BuildMaster.Files.DiffMatchPatch.Diff})">
            Compute a list of patches to turn text1 into text2.
            text2 is ignored, diffs are the delta between text1 and text2.
            @param text1 Old text
            @param text2 Ignored.
            @param diffs Array of Diff objects for text1 to text2.
            @return List of Patch objects.
            @deprecated Prefer patch_make(string text1, List diffs).
        </member>
        <member name="M:Inedo.BuildMaster.Files.DiffMatchPatch.diff_match_patch.patch_make(System.String,System.Collections.Generic.List{Inedo.BuildMaster.Files.DiffMatchPatch.Diff})">
            Compute a list of patches to turn text1 into text2.
            text2 is not provided, diffs are the delta between text1 and text2.
            @param text1 Old text.
            @param diffs Array of Diff objects for text1 to text2.
            @return List of Patch objects.
        </member>
        <member name="M:Inedo.BuildMaster.Files.DiffMatchPatch.diff_match_patch.patch_deepCopy(System.Collections.Generic.List{Inedo.BuildMaster.Files.DiffMatchPatch.Patch})">
            Given an array of patches, return another array that is identical.
            @param patches Array of Patch objects.
            @return Array of Patch objects.
        </member>
        <member name="M:Inedo.BuildMaster.Files.DiffMatchPatch.diff_match_patch.patch_apply(System.Collections.Generic.List{Inedo.BuildMaster.Files.DiffMatchPatch.Patch},System.String)">
            Merge a set of patches onto the text.  Return a patched text, as well
            as an array of true/false values indicating which patches were applied.
            @param patches Array of Patch objects
            @param text Old text.
            @return Two element Object array, containing the new text and an array of
                 bool values.
        </member>
        <member name="M:Inedo.BuildMaster.Files.DiffMatchPatch.diff_match_patch.patch_addPadding(System.Collections.Generic.List{Inedo.BuildMaster.Files.DiffMatchPatch.Patch})">
            Add some padding on text start and end so that edges can match something.
            Intended to be called only from within patch_apply.
            @param patches Array of Patch objects.
            @return The padding string added to each side.
        </member>
        <member name="M:Inedo.BuildMaster.Files.DiffMatchPatch.diff_match_patch.patch_splitMax(System.Collections.Generic.List{Inedo.BuildMaster.Files.DiffMatchPatch.Patch})">
            Look through the patches and break up any which are longer than the
            maximum limit of the match algorithm.
            Intended to be called only from within patch_apply.
            @param patches List of Patch objects.
        </member>
        <member name="M:Inedo.BuildMaster.Files.DiffMatchPatch.diff_match_patch.patch_toText(System.Collections.Generic.List{Inedo.BuildMaster.Files.DiffMatchPatch.Patch})">
            Take a list of patches and return a textual representation.
            @param patches List of Patch objects.
            @return Text representation of patches.
        </member>
        <member name="M:Inedo.BuildMaster.Files.DiffMatchPatch.diff_match_patch.patch_fromText(System.String)">
            Parse a textual representation of patches and return a List of Patch
            objects.
            @param textline Text representation of patches.
            @return List of Patch objects.
            @throws ArgumentException If invalid input.
        </member>
        <member name="M:Inedo.BuildMaster.Files.DiffMatchPatch.diff_match_patch.unescapeForEncodeUriCompatability(System.String)">
             Unescape selected chars for compatability with JavaScript's encodeURI.
             In speed critical applications this could be dropped since the
             receiving application will certainly decode these fine.
             Note that this function is case-sensitive.  Thus "%3F" would not be
             unescaped.  But this is ok because it is only called with the output of
             HttpUtility.UrlEncode which returns lowercase hex.
            
             Example: "%3f" -> "?", "%24" -> "$", etc.
            
             @param str The string to escape.
             @return The escaped string.
        </member>
        <member name="T:Inedo.BuildMaster.Files.DirectoryEntryBuilder">
            <summary>
            Helper for constructing <see cref="T:Inedo.BuildMaster.Files.DirectoryEntryInfo"/> trees.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Files.DirectoryEntryBuilder.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Files.DirectoryEntryBuilder"/> class.
            </summary>
            <param name="name">The name of the entry.</param>
        </member>
        <member name="P:Inedo.BuildMaster.Files.DirectoryEntryBuilder.Name">
            <summary>
            Gets or sets the name of the entry.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Files.DirectoryEntryBuilder.Parent">
            <summary>
            Gets the parent entry.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Files.DirectoryEntryBuilder.Directories">
            <summary>
            Gets the children of the entry.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Files.DirectoryEntryBuilder.Files">
            <summary>
            Gets the files contained in this directory.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Files.DirectoryEntryBuilder.Path">
            <summary>
            Gets the path of the entry using / as the separator.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Files.DirectoryEntryBuilder.GetPath(System.String)">
            <summary>
            Returns the path of the entry.
            </summary>
            <param name="separator">Separator to place between path elements.</param>
            <returns>Path of the entry.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Files.DirectoryEntryBuilder.GetPath(System.String,System.Boolean)">
            <summary>
            Returns the path of the entry.
            </summary>
            <param name="separator">Separator to place between path elements.</param>
            <param name="omitEmptyNames">Indicates whether empty directory names should be included in the path.</param>
            <returns>Path of the entry.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Files.DirectoryEntryBuilder.AddFile(System.String)">
            <summary>
            Adds a new file.
            </summary>
            <param name="name">The name of the file to add.</param>
            <returns>The newly-added file.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Files.DirectoryEntryBuilder.AddFile(System.String,System.Int64,System.DateTime,System.IO.FileAttributes)">
            <summary>
            Adds a new file.
            </summary>
            <param name="name">The name of the file to add.</param>
            <param name="size">The size of the file.</param>
            <param name="modified">The timestamp when the file was last modified.</param>
            <param name="fileAttributes">The attributes of the file.</param>
            <returns>The newly-added file.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Files.DirectoryEntryBuilder.ToDirectoryEntryInfo(System.String)">
            <summary>
            Returns a <see cref="T:Inedo.BuildMaster.Files.DirectoryEntryInfo"/> instance constructed from this <see cref="T:Inedo.BuildMaster.Files.DirectoryEntryBuilder"/>.
            </summary>
            <param name="pathSeparator">The path separator.</param>
            <returns><see cref="T:Inedo.BuildMaster.Files.DirectoryEntryInfo"/> instance constructed from this <see cref="T:Inedo.BuildMaster.Files.DirectoryEntryBuilder"/>.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Files.DirectoryEntryBuilder.ToDirectoryEntryInfo(System.String,System.String)">
            <summary>
            Returns a <see cref="T:Inedo.BuildMaster.Files.DirectoryEntryInfo"/> instance constructed from this <see cref="T:Inedo.BuildMaster.Files.DirectoryEntryBuilder"/>.
            </summary>
            <param name="pathSeparator">The path separator.</param>
            <param name="prependPath">Path string to prepend to the DirectoryEntryInfo's path property.</param>
            <returns><see cref="T:Inedo.BuildMaster.Files.DirectoryEntryInfo"/> instance constructed from this <see cref="T:Inedo.BuildMaster.Files.DirectoryEntryBuilder"/>.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Files.DirectoryEntryBuilder.ToDirectoryEntryInfo(System.String,System.String,System.Boolean)">
            <summary>
            Returns a <see cref="T:Inedo.BuildMaster.Files.DirectoryEntryInfo"/> instance constructed from this <see cref="T:Inedo.BuildMaster.Files.DirectoryEntryBuilder"/>.
            </summary>
            <param name="pathSeparator">The path separator.</param>
            <param name="prependPath">Path string to prepend to the DirectoryEntryInfo's path property.</param>
            <param name="omitEmptyNames">Indicates whether empty directory names should be part of the path.</param>
            <returns><see cref="T:Inedo.BuildMaster.Files.DirectoryEntryInfo"/> instance constructed from this <see cref="T:Inedo.BuildMaster.Files.DirectoryEntryBuilder"/>.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Files.DirectoryEntryBuilder.Select(System.String,System.String)">
            <summary>
            Selects an entry with the specified path.
            </summary>
            <param name="path">The path of the entry to select relative to the current node.</param>
            <param name="separator">The path separator.</param>
            <returns>Entry with matching path if found; otherwise null.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Files.DirectoryEntryBuilder.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:Inedo.BuildMaster.Files.DirectoryEntryBuilder.SafePathCombine(System.String,System.String,System.String)">
            <summary>
            Returns a combination of two paths.
            </summary>
            <param name="pathSeparator">Path separator character.</param>
            <param name="pathA">First path.</param>
            <param name="pathB">Second path.</param>
            <returns>Combined path.</returns>
        </member>
        <member name="T:Inedo.BuildMaster.Files.DirectoryEntryBuilder.DirectoryEntryBuilderList">
            <summary>
            Contains DirectoryEntryBuilder instance which represent subdirectories.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Files.DirectoryEntryBuilder.DirectoryEntryBuilderList.#ctor(Inedo.BuildMaster.Files.DirectoryEntryBuilder)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Files.DirectoryEntryBuilder.DirectoryEntryBuilderList"/> class.
            </summary>
            <param name="parent">The parent.</param>
        </member>
        <member name="P:Inedo.BuildMaster.Files.DirectoryEntryBuilder.DirectoryEntryBuilderList.Count">
            <summary>
            Gets the number of directories in the list.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Files.DirectoryEntryBuilder.DirectoryEntryBuilderList.System#Collections#Generic#ICollection{Inedo#BuildMaster#Files#DirectoryEntryBuilder}#IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is read-only.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Files.DirectoryEntryBuilder.DirectoryEntryBuilderList.Item(System.Int32)">
            <summary>
            Gets or sets a subdirectory.
            </summary>
            <param name="index">Index of subdirectory.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Files.DirectoryEntryBuilder.DirectoryEntryBuilderList.IndexOf(Inedo.BuildMaster.Files.DirectoryEntryBuilder)">
            <summary>
            Returns the index of a subdirectory.
            </summary>
            <param name="item">Subdirectory whose index is returned.</param>
            <returns>Index of the specified subdirectory if it is contained in this list; otherwise -1.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Files.DirectoryEntryBuilder.DirectoryEntryBuilderList.Insert(System.Int32,Inedo.BuildMaster.Files.DirectoryEntryBuilder)">
            <summary>
            Inserts a subdirectory into this list.
            </summary>
            <param name="index">Index where subdirectory will be inserted.</param>
            <param name="item">Subdirectory to insert.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Files.DirectoryEntryBuilder.DirectoryEntryBuilderList.RemoveAt(System.Int32)">
            <summary>
            Removes a subdirectory at a specified index.
            </summary>
            <param name="index">Index of subdirectory to remove.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Files.DirectoryEntryBuilder.DirectoryEntryBuilderList.Add(Inedo.BuildMaster.Files.DirectoryEntryBuilder)">
            <summary>
            Adds a subdirectory to the list.
            </summary>
            <param name="item">Subdirectory to add.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Files.DirectoryEntryBuilder.DirectoryEntryBuilderList.Add(System.String)">
            <summary>
            Adds a new subdirectory to the list.
            </summary>
            <param name="name">Name of new subdirectory to add.</param>
            <returns>The newly-added subdirectory.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Files.DirectoryEntryBuilder.DirectoryEntryBuilderList.Clear">
            <summary>
            Removes all subdirectories from the list.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Files.DirectoryEntryBuilder.DirectoryEntryBuilderList.Contains(Inedo.BuildMaster.Files.DirectoryEntryBuilder)">
            <summary>
            Returns a value indicating whether a subdirectory is contained in the list.
            </summary>
            <param name="item">Subdirectory to search for.</param>
            <returns>True if subdirectory is in this list; otherwise false.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Files.DirectoryEntryBuilder.DirectoryEntryBuilderList.System#Collections#Generic#ICollection{Inedo#BuildMaster#Files#DirectoryEntryBuilder}#CopyTo(Inedo.BuildMaster.Files.DirectoryEntryBuilder[],System.Int32)">
            <summary>
            Copies the subdirectory list to an array.
            </summary>
            <param name="array">Array into which subdirectories are copied.</param>
            <param name="arrayIndex">Index in array to start writing.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Files.DirectoryEntryBuilder.DirectoryEntryBuilderList.Remove(Inedo.BuildMaster.Files.DirectoryEntryBuilder)">
            <summary>
            Removes a subdirectory from the list.
            </summary>
            <param name="item">Subdirectory to remove.</param>
            <returns>True if subdirectory was removed; false if it was not initially in the list.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Files.DirectoryEntryBuilder.DirectoryEntryBuilderList.GetEnumerator">
            <summary>
            Returns an enumerator for the subdirectory list.
            </summary>
            <returns>Enumerator for the subdirectory list.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Files.DirectoryEntryBuilder.DirectoryEntryBuilderList.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator for the subdirectory list.
            </summary>
            <returns>Enumerator for the subdirectory list.</returns>
        </member>
        <member name="T:Inedo.BuildMaster.Files.TextDifference">
            <summary>
            Represents a block of text that is part of a difference report between two files.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Files.TextDifference.DifferenceType">
            <summary>
            Gets the type of difference this block of text represents.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Files.TextDifference.Text">
            <summary>
            Gets the text contained in this block.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Files.TextDifference.Equals(Inedo.BuildMaster.Files.TextDifference)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.
            </returns>
        </member>
        <member name="M:Inedo.BuildMaster.Files.TextDifference.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Inedo.BuildMaster.Files.TextDifference.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Inedo.BuildMaster.Files.TextDifference.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Inedo.BuildMaster.Files.TextDifferenceType">
            <summary>
            Specifies what type of difference the block of text in a <see cref="T:Inedo.BuildMaster.Files.TextDifference"/>
            instance refers to.
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Files.TextDifferenceType.Delete">
            <summary>
            The block of text has been deleted in this version.
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Files.TextDifferenceType.Insert">
            <summary>
            The block of text has been inserted in this version.
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Files.TextDifferenceType.Equal">
            <summary>
            The block of text has not changed.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Files.GetDirectoryEntryCommand">
            <summary>
            Contains parameters for controlling the behavior of <see cref="M:Inedo.BuildMaster.Util.Files.GetDirectoryEntry(Inedo.BuildMaster.Files.GetDirectoryEntryCommand)"/>.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Files.GetDirectoryEntryCommand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Files.GetDirectoryEntryCommand"/> class.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Files.GetDirectoryEntryCommand.Path">
            <summary>
            Gets or sets the root path to enumerate.
            </summary>
            <remarks>
            If this value is null or empty, file system enumeration will start with
            drives returned by the <see cref="M:System.IO.DriveInfo.GetDrives"/> method.
            </remarks>
        </member>
        <member name="P:Inedo.BuildMaster.Files.GetDirectoryEntryCommand.Recurse">
            <summary>
            Gets or sets a value indicating whether to recursively enumerate
            subdirectories below the root path.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Files.GetDirectoryEntryCommand.IncludeRootPath">
            <summary>
            Gets or sets a value indicating whether the root path should be
            included in the resulting FileSystemEntryInfos.
            </summary>
            <remarks>
            If this property is false, all of the Path properties
            on returned entries will be relative to the root path
            from which enumeration started.
            </remarks>
        </member>
        <member name="M:Inedo.BuildMaster.Files.GetDirectoryEntryCommand.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:Inedo.BuildMaster.Files.GetDirectoryEntryResult">
            <summary>
            Contains the results of a call to the <see cref="M:Inedo.BuildMaster.Util.Files.GetDirectoryEntry(Inedo.BuildMaster.Files.GetDirectoryEntryCommand)"/> method.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Files.GetDirectoryEntryResult.#ctor(Inedo.BuildMaster.Files.DirectoryEntryInfo,System.Exception[])">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Files.GetDirectoryEntryResult"/> class.
            </summary>
            <param name="entry">The resulting root <see cref="T:Inedo.BuildMaster.Files.DirectoryEntryInfo"/>.</param>
            <param name="exceptions">Any exceptions encountered during enumeration.</param>
        </member>
        <member name="P:Inedo.BuildMaster.Files.GetDirectoryEntryResult.Entry">
            <summary>
            Gets the root <see cref="T:Inedo.BuildMaster.Files.DirectoryEntryInfo"/> containing all enumerated files and subdirectories.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Files.GetDirectoryEntryResult.Exceptions">
            <summary>
            Gets an array of any exceptions which were encountered during enumeration.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Files.GetDirectoryEntryResult.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:Inedo.BuildMaster.Files.SystemEntryInfoComparer">
            <summary>
            Represents a comparison operation for <see cref="T:Inedo.BuildMaster.Files.SystemEntryInfo"/> instances.
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Files.SystemEntryInfoComparer.NamePathOrdinal">
            <summary>
            A <see cref="T:Inedo.BuildMaster.Files.SystemEntryInfoComparer"/> that tests the name and path strings for ordinal equality.
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Files.SystemEntryInfoComparer.NameOrdinal">
            <summary>
            A <see cref="T:Inedo.BuildMaster.Files.SystemEntryInfoComparer"/> that tests the name string for ordinal equality.
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Files.SystemEntryInfoComparer.NameOrdinalExtended">
            <summary>
            A <see cref="T:Inedo.BuildMaster.Files.SystemEntryInfoComparer"/> that tests the name string for ordinal equality and also tests the properies
            of <see cref="T:Inedo.BuildMaster.Files.IExtendedFileEntry"/> if available.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Files.SystemEntryInfoComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Files.SystemEntryInfoComparer"/> class.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Files.SystemEntryInfoComparer.Equals(Inedo.BuildMaster.Files.SystemEntryInfo,Inedo.BuildMaster.Files.SystemEntryInfo)">
            <summary>
            Determines whether the specified objects are equal.
            </summary>
            <param name="x">The first object to compare.</param>
            <param name="y">The second object to compare.</param>
            <returns>
            true if the specified objects are equal; otherwise, false.
            </returns>
        </member>
        <member name="M:Inedo.BuildMaster.Files.SystemEntryInfoComparer.GetHashCode(Inedo.BuildMaster.Files.SystemEntryInfo)">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <param name="obj">The obj.</param>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="T:Inedo.BuildMaster.Files.DirectoryEntryInfo">
            <summary>
            Represents a directory in a file system.
            </summary>
            <remarks>
            This class is immutable. For a modifiable version
            that can be used to build directory trees, see <see cref="T:Inedo.BuildMaster.Files.DirectoryEntryBuilder"/>.
            </remarks>
            <seealso cref="T:Inedo.BuildMaster.Files.DirectoryEntryBuilder"/>
        </member>
        <member name="M:Inedo.BuildMaster.Files.DirectoryEntryInfo.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Files.DirectoryEntryInfo"/> class.
            </summary>
            <param name="name">The name of the directory.</param>
            <param name="path">The path of the directory.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="name"/> is null or <paramref name="path"/> is null.</exception>
        </member>
        <member name="M:Inedo.BuildMaster.Files.DirectoryEntryInfo.#ctor(System.String,System.String,Inedo.BuildMaster.Files.DirectoryEntryInfo[],Inedo.BuildMaster.Files.FileEntryInfo[])">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Files.DirectoryEntryInfo"/> class.
            </summary>
            <param name="name">The name of the directory.</param>
            <param name="path">The path of the directory.</param>
            <param name="subdirs">The subdirectories inside the directory.</param>
            <param name="files">The files inside the directory.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="name"/> is null or <paramref name="path"/> is null.</exception>
        </member>
        <member name="M:Inedo.BuildMaster.Files.DirectoryEntryInfo.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{Inedo.BuildMaster.Files.DirectoryEntryInfo},System.Collections.Generic.IEnumerable{Inedo.BuildMaster.Files.FileEntryInfo})">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Files.DirectoryEntryInfo"/> class.
            </summary>
            <param name="name">The name of the directory.</param>
            <param name="path">The path of the directory.</param>
            <param name="subdirectories">The subdirectories inside the directory.</param>
            <param name="files">The files inside the directory.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="name"/> is null or <paramref name="path"/> is null.</exception>
        </member>
        <member name="M:Inedo.BuildMaster.Files.DirectoryEntryInfo.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{Inedo.BuildMaster.Files.SystemEntryInfo})">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Files.DirectoryEntryInfo"/> class.
            </summary>
            <param name="name">The name of the directory.</param>
            <param name="path">The path of the directory.</param>
            <param name="items">The files and subdirectories inside the directory.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="name"/> is null or <paramref name="path"/> is null.</exception>
        </member>
        <member name="M:Inedo.BuildMaster.Files.DirectoryEntryInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Files.DirectoryEntryInfo"/> class.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="P:Inedo.BuildMaster.Files.DirectoryEntryInfo.SubDirectories">
            <summary>
            Gets the subdirectories contained within the directory.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Files.DirectoryEntryInfo.Files">
            <summary>
            Gets the files contained within the directory.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Files.DirectoryEntryInfo.Flatten">
            <summary>
            Returns a flattened collection of this directory entry and all directories below it.
            </summary>
            <returns>Flattened collection of directory entries.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Files.DirectoryEntryInfo.FlattenWithFiles">
            <summary>
            Returns a flattened collection of this directory entry, all directories below it, and all files in all directories.
            </summary>
            <returns>Flattened collection of directory and file entries.</returns>
            <remarks>
            Files and subdirectory listings on returned <see cref="T:Inedo.BuildMaster.Files.DirectoryEntryInfo"/> instances are not included.
            </remarks>
        </member>
        <member name="M:Inedo.BuildMaster.Files.DirectoryEntryInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
            <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
        </member>
        <member name="T:Inedo.BuildMaster.Files.ExtendedFileEntryInfo">
            <summary>
            Represents a file with extended information.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Files.ExtendedFileEntryInfo.#ctor(System.String,System.String,System.Int64,System.DateTime,System.IO.FileAttributes)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Files.ExtendedFileEntryInfo"/> class.
            </summary>
            <param name="name">The name of the file.</param>
            <param name="path">The path of the file.</param>
            <param name="size">The size of the file.</param>
            <param name="lastModified">The last modified date (UTC) of the file.</param>
            <param name="fileAttributes">The attributes of the file.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Files.ExtendedFileEntryInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Files.ExtendedFileEntryInfo"/> class.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="P:Inedo.BuildMaster.Files.ExtendedFileEntryInfo.Size">
            <summary>
            Gets the size of the file in bytes.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Files.ExtendedFileEntryInfo.LastModifiedDate">
            <summary>
            Gets the date (UTC) the file was last modified.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Files.ExtendedFileEntryInfo.Attributes">
            <summary>
            Gets the attributes of the file.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Files.ExtendedFileEntryInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
            <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
        </member>
        <member name="T:Inedo.BuildMaster.Files.FileEntryInfo">
            <summary>
            Represents a file in a file system.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Files.FileEntryInfo.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Files.FileEntryInfo"/> class.
            </summary>
            <param name="name">The name of the file.</param>
            <param name="path">The path of the file.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="name"/> is null or empty or <paramref name="path"/> is null or empty.</exception>
        </member>
        <member name="M:Inedo.BuildMaster.Files.FileEntryInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Files.FileEntryInfo"/> class.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Inedo.BuildMaster.Files.IExtendedFileEntry">
            <summary>
            Represents a <see cref="T:Inedo.BuildMaster.Files.FileEntryInfo"/> with extended information.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Files.IExtendedFileEntry.Size">
            <summary>
            Gets the size of the file in bytes.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Files.IExtendedFileEntry.LastModifiedDate">
            <summary>
            Gets the date (UTC) the file was last modified.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Files.SystemEntryInfo">
            <summary>
            Represents an entry in a file system.
            </summary>
            <remarks>
            This class may represent anything with a name and a path, but is typically
            a file or directory on a disk.
            </remarks>
            <seealso cref="T:Inedo.BuildMaster.Files.FileEntryInfo"/>
            <seealso cref="T:Inedo.BuildMaster.Files.DirectoryEntryInfo"/>
        </member>
        <member name="M:Inedo.BuildMaster.Files.SystemEntryInfo.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Files.SystemEntryInfo"/> class.
            </summary>
            <param name="name">The name of the entry.</param>
            <param name="path">The path of the entry.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Files.SystemEntryInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Files.SystemEntryInfo"/> class.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="P:Inedo.BuildMaster.Files.SystemEntryInfo.Name">
            <summary>
            Gets the name of the entry.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Files.SystemEntryInfo.Path">
            <summary>
            Gets the path of the entry.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Files.SystemEntryInfo.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:Inedo.BuildMaster.Files.SystemEntryInfo.System#IComparable{Inedo#BuildMaster#Files#SystemEntryInfo}#CompareTo(Inedo.BuildMaster.Files.SystemEntryInfo)">
            <summary>
            Compares the current object with another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>A 32-bit signed integer that indicates the relative order of the objects being compared.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Files.SystemEntryInfo.System#IComparable#CompareTo(System.Object)">
            <summary>
            Compares the current instance with another object of the same type and returns an integer that indicates whether
            the current instance precedes, follows, or occurs in the same position in the sort order as the other object.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>
            A 32-bit signed integer that indicates the relative order of the objects being compared.
            </returns>
        </member>
        <member name="M:Inedo.BuildMaster.Files.SystemEntryInfo.Equals(Inedo.BuildMaster.Files.SystemEntryInfo)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.
            </returns>
        </member>
        <member name="M:Inedo.BuildMaster.Files.SystemEntryInfo.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Inedo.BuildMaster.Files.SystemEntryInfo.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Inedo.BuildMaster.Files.SystemEntryInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
            <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
        </member>
        <member name="T:Inedo.BuildMaster.Util">
            <summary>
            A collection of static utility methods.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Util.Agents">
            <summary>
            Contains methods for working with agents.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Agents.CreateAgentFromId(System.Nullable{System.Int32})">
            <summary>
            Returns the agent with the specified ID.
            </summary>
            <param name="agentId">The agent ID.</param>
            <returns>The agent with the specified ID.</returns>
            <remarks>
            A value of null will cause this method to return a local agent.
            </remarks>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Agents.CreateLocalAgent">
            <summary>
            Creates an agent for the local system.
            </summary>
            <returns>Local agent.</returns>
        </member>
        <member name="T:Inedo.BuildMaster.Util.Artifacts">
            <summary>
            Contains methods for working with artifacts.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Artifacts.GetArtifactPath(System.Int32,System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns the relative path to an artifact file from the Artifact Base Path.
            </summary>
            <param name="applicationId">ID of the application which owns the artifact.</param>
            <param name="releaseNumber">Release number in which the artifact was created.</param>
            <param name="buildNumber">Build number in which the artifact was created.</param>
            <param name="deployableId">ID of the deployable which owns the artifact.</param>
            <param name="artifactName">Name of the artifact.</param>
            <returns>Path to the artifact file relative to the artifact base path.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Artifacts.GetFullArtifactPath(System.String,System.Int32,System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns the absolute path to an artifact file.
            </summary>
            <param name="artifactBasePath">Absolute path of the artifact library.</param>
            <param name="applicationId">ID of the application which owns the artifact.</param>
            <param name="releaseNumber">Release number in which the artifact was created.</param>
            <param name="buildNumber">Build number in which the artifact was created.</param>
            <param name="deployableId">ID of the deployable which owns the artifact.</param>
            <param name="artifactName">Name of the artifact.</param>
            <returns>Path to the artifact file.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Artifacts.GetFullArtifactPath(System.String,Inedo.BuildMaster.Data.Tables.BuildArtifacts_Extended)">
            <summary>
            Returns the absolute path to an artifact file.
            </summary>
            <param name="artifactBasePath">The artifact base path.</param>
            <param name="artifact">The artifact.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Artifacts.GetFullArtifactPath(System.String,Inedo.BuildMaster.Artifacts.ArtifactIdentifier)">
            <summary>
            Returns the absolute path to an artifact file.
            </summary>
            <param name="artifactBasePath">The artifact base path.</param>
            <param name="artifact">The artifact identifier.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Artifacts.PurgeBuildArtifact(System.String,Inedo.BuildMaster.Artifacts.ArtifactIdentifier)">
            <summary>
            Purges the build artifact from the system and deletes the artifact zip file.
            </summary>
            <param name="artifactBasePath">The artifact base path.</param>
            <param name="artifact">The artifact.</param>
            <exception cref="T:System.ArgumentNullException">
            artifactBasePath
            or
            artifact
            </exception>
            <exception cref="T:System.ArgumentException">Artifact does not exist</exception>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Artifacts.CreateBuildArtifact(Inedo.BuildMaster.Extensibility.Actions.IAgentBasedActionExecutionContext,System.String,Inedo.BuildMaster.Extensibility.Actions.ActionLogMessageDelegator,System.Action)">
            <summary>
            Creates a build artifact and stores it in the artifact library.
            </summary>
            <param name="context">The context.</param>
            <param name="artifactName">Name of the artifact.</param>
            <param name="logger">The logger.</param>
            <param name="throwIfCanceledOrTimeoutExpired">The throw if canceled or timeout expired.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="context"/> is null or
            <paramref name="logger"/> is null or
            <paramref name="artifactName"/> is null/whitespace or
            <paramref name="throwIfCanceledOrTimeoutExpired"/> is null.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="artifactName"/> contains invalid path characters.</exception>
        </member>
        <member name="T:Inedo.BuildMaster.Util.Deployables">
            <summary>
            Contains utility methods for working with deployables.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Deployables.GetReleaseDeployablesXml(System.Collections.Generic.IEnumerable{Inedo.BuildMaster.Data.Tables.ReleaseDeployables_Extended})">
            <summary>
            Returns release deployables XML that is suitable for use with the <see cref="M:StoredProcs.Releases_CreateOrUpdateRelease"/> method.
            </summary>
            <param name="releaseDeployables">Release deployables to generate XML for.</param>
            <returns>String containing release deployables XML.</returns>
        </member>
        <member name="T:Inedo.BuildMaster.Util.Plans">
            <summary>
            Contains methods for working with deployment plans.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Plans.CopyActionGroup(System.Int32,System.Nullable{System.Int32})">
            <summary>
            Copies an action group from one deployment plan to another.
            </summary>
            <param name="deploymentPlanActionGroupId">The deployment plan action group identifier.</param>
            <param name="targetDeploymentPlanId">The target deployment plan identifier.</param>
            <returns>The ID of the new deployment plan action group.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Plans.LinkActionGroup(System.Int32,System.Nullable{System.Int32})">
            <summary>
            Creates an action group link.
            </summary>
            <param name="deploymentPlanActionGroupId">The deployment plan action group identifier.</param>
            <param name="targetDeploymentPlanId">The target deployment plan identifier.</param>
            <returns>The ID of the new deployment plan action group.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Plans.ExportToXml(System.Int32,System.Xml.XmlWriter)">
            <summary>
            Exports a deployment plan to an XML file.
            </summary>
            <param name="deploymentPlanId">The ID of the deployment plan to export.</param>
            <param name="xmlWriter">A <see cref="T:System.Xml.XmlWriter"/> to write the deployment plan to.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="xmlWriter"/> is null.</exception>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Plans.ValidateXml(System.IO.TextReader)">
            <summary>
            Validates an exported deployment plan and returns any appropriate errors and warnings.
            </summary>
            <param name="textReader">A <see cref="T:System.IO.TextReader"/> containing the plan to validate.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="textReader"/> is null.</exception>
            <returns>
            A collection of validation errors and warnings. 
            </returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Plans.ValidateXml(System.IO.Stream)">
            <summary>
            Validates an exported deployment plan and returns any appropriate errors and warnings.
            </summary>
            <param name="stream">A <see cref="T:System.IO.Stream"/> containing the plan to validate.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="stream"/> is null.</exception>
            <returns>
            A collection of validation errors and warnings. 
            </returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Plans.ImportFromXml(System.Int32,System.IO.Stream)">
            <summary>
            Imports a deployment plan from an XML file.
            </summary>
            <param name="deploymentPlanId">The deployment plan into which the plan will be imported.</param>
            <param name="stream">A <see cref="T:System.IO.Stream"/> containing the plan to import.</param>
            /// <exception cref="T:System.ArgumentNullException"><paramref name="stream"/> is null.</exception>
            <exception cref="T:System.AggregateException">A validation error occurred.</exception>
        </member>
        <member name="T:Inedo.BuildMaster.Util.Plans.ValidationLevel">
            <summary>
            Specifies the severity of a validation message.
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Util.Plans.ValidationLevel.Warning">
            <summary>
            Indicates a likely problem, but will not prevent importing.
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Util.Plans.ValidationLevel.Error">
            <summary>
            Indicates a problem which prevents importing.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Util.Plans.ValidationMessage">
            <summary>
            Describes a validation error or warning.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Util.Plans.ValidationMessage.Level">
            <summary>
            Gets the severity of the message.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Util.Plans.ValidationMessage.Message">
            <summary>
            Gets the message.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Plans.ValidationMessage.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Inedo.BuildMaster.Util.Providers">
            <summary>
            A static class of utility methods to assist with managing <see cref="T:Inedo.BuildMaster.Extensibility.Providers.ProviderBase" /> classes.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Providers.CreateProviderFromId``1(System.Int32,Inedo.BuildMaster.Extensibility.Agents.BuildMasterAgent,System.Boolean)">
            <summary>
            Creates a provider from its ID.
            </summary>
            <typeparam name="TProviderBase">The base type of the provider.</typeparam>
            <param name="providerId">The provider ID.</param>
            <param name="agent">The agent which the provider will use.</param>
            <param name="disposeAgent">Value indicating whether the provider should dispose of the agent when the provider is disposed.</param>
            <returns>Provider created from the specified ID.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Providers.CreateProviderFromId``1(System.Int32,Inedo.BuildMaster.Extensibility.Agents.BuildMasterAgent)">
            <summary>
            Creates a provider from its ID.
            </summary>
            <typeparam name="TProviderBase">The base type of the provider.</typeparam>
            <param name="providerId">The provider ID.</param>
            <param name="agent">The agent which the provider will use.</param>
            <returns>Provider created from the specified ID.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Providers.CreateProviderFromId``1(System.Int32,System.Int32)">
            <summary>
            Creates a provider from its ID.
            </summary>
            <typeparam name="TProviderBase">The base type of the provider.</typeparam>
            <param name="providerId">The provider ID.</param>
            <param name="serverId">The server ID.</param>
            <returns>Provider created from the specified ID.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Providers.CreateProviderFromId``1(System.Int32)">
            <summary>
            Creates a provider from its ID.
            </summary>
            <typeparam name="TProviderBase">The base type of the provider.</typeparam>
            <param name="providerId">The provider ID.</param>
            <returns>Provider created from the specified ID.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Providers.InitializeProvider(Inedo.BuildMaster.Extensibility.Providers.ProviderBase,System.Int32)">
            <summary>
            Initializes an already-created provider.
            </summary>
            <param name="provider">The provider to initialize.</param>
            <param name="serverId">The server ID of the provider.</param>
            <returns>Initialized provider.</returns>
            <remarks>
            This method should only be used for testing a provider configuration.
            </remarks>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Providers.GetProviderTypeCode(System.Type)">
            <summary>
            Returns a provider created based on its <see cref="T:System.Type"/>.
            </summary>
            <param name="providerType">The type of the provider.</param>
            <returns>Newly-created provider.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Providers.GetProviderTypeCode(System.Type,System.Boolean)">
            <summary>
            Returns a provider created based on its <see cref="T:System.Type"/>.
            </summary>
            <param name="providerType">The type of the provider.</param>
            <param name="throwException">Value indicating whether an exception should be thrown if the provider cannot be created.</param>
            <returns>Newly-created provider.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Providers.GetRequiredProviderInterfaces(System.Type)">
            <summary>
            Returns a collection of the interfaces that a provider must implement.
            </summary>
            <param name="type">Interface types which the action requires.</param>
            <returns>Collection of the interface types which the action requires.</returns>
        </member>
        <member name="T:Inedo.BuildMaster.Util.Files.Comparison">
            <summary>
            A set of static methods for file/directory comparison.
            </summary>
            <remarks>
            <para>
            File masks are almost always sent in as a string array. Our file masks
            work mostly like DOS, in that:
            </para>
            <list type="table">
            <item>
                <term>*</term>
                <description>Matches zero or more characters</description>
            </item>
            <item>
                <term>?</term>
                <description>Matches exactly one character</description>
            </item>
            </list>
            <para>
            So, Build*.dll will match BuildMaster.dll, BuildMaster2.dll, but not BUildMaster.pdb
            </para>
            <para>
            When a mask starts with a !, anything that doesn't match that wildcard is matched. When
            used in a set, ! masks take precedence over matches. For example, the masks
             * AND !* will match nothing
             *.dll AND !BuildMaster*.dll will match all .dll files that don't start with BuildMaster
            is matched.
            </para>
            </remarks>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Files.Comparison.GetMatches(System.String,Inedo.BuildMaster.Files.SystemEntryInfo,System.String[])">
            <summary>
            Returns an array of <see cref="T:Inedo.BuildMaster.Files.SystemEntryInfo"/> items which match the specified search masks.
            </summary>
            <param name="pathRoot">Root path in which to search for matches.</param>
            <param name="entry">Top-level entry containing sub-entries to mask.</param>
            <param name="masks">Masks used to filter sub-entries.</param>
            <returns>Matching <see cref="T:Inedo.BuildMaster.Files.SystemEntryInfo"/> items.</returns>
            <remarks>
            For a description of file masking, see <see cref="T:Inedo.BuildMaster.Util.Files.Comparison"/>.
            </remarks>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Files.Comparison.GetNonMatches(System.String,Inedo.BuildMaster.Files.SystemEntryInfo,System.String[])">
            <summary>
            Returns an array of <see cref="T:Inedo.BuildMaster.Files.SystemEntryInfo"/> items which do not match the specified search masks.
            </summary>
            <param name="pathRoot">Root path in which to search for non-matches.</param>
            <param name="entry">Top-level entry containing sub-entries to mask.</param>
            <param name="masks">Masks used to filter sub-entries.</param>
            <returns>Non-matching <see cref="T:Inedo.BuildMaster.Files.SystemEntryInfo"/> items.</returns>
            <remarks>
            For a description of file masking, see <see cref="T:Inedo.BuildMaster.Util.Files.Comparison"/>.
            </remarks>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Files.Comparison.GetMatches(System.String,System.String[],System.String[])">
            <summary>
            Returns an array of items which match the specified search masks.
            </summary>
            <param name="pathRoot">Root path in which to search for matches.</param>
            <param name="paths">Sub-entries to mask.</param>
            <param name="masks">Masks used to filter sub-entries.</param>
            <returns>Matching items.</returns>
            <remarks>
            For a description of file masking, see <see cref="T:Inedo.BuildMaster.Util.Files.Comparison"/>.
            </remarks>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Files.Comparison.GetNonMatches(System.String,System.String[],System.String[])">
            <summary>
            Returns an array of items which do not match the specified search masks.
            </summary>
            <param name="pathRoot">Root path in which to search for non-matches.</param>
            <param name="paths">Sub-entries to mask.</param>
            <param name="masks">Masks used to filter sub-entries.</param>
            <returns>Non-matching items.</returns>
            <remarks>
            For a description of file masking, see <see cref="T:Inedo.BuildMaster.Util.Files.Comparison"/>.
            </remarks>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Files.Comparison.CompareDirectories(Inedo.BuildMaster.Files.DirectoryEntryInfo,Inedo.BuildMaster.Files.DirectoryEntryInfo,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            Detects differences between a source and target directory.
            </summary>
            <param name="sourceDirectory">The source directory.</param>
            <param name="targetDirectory">The target directory.</param>
            <param name="filesToCopy">Files present in the source but not in the target.</param>
            <param name="foldersToCopy">Folders present in the source but not in the target.</param>
            <param name="filesToDelete">Files present in the target but not in the source.</param>
            <param name="foldersToDelete">Folders present in the target but not in the source.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Files.Comparison.CompareDirectories(Inedo.BuildMaster.Files.DirectoryEntryInfo,Inedo.BuildMaster.Files.DirectoryEntryInfo)">
            <summary>
            Detects differences between a source and target directory.
            </summary>
            <param name="sourceDirectory">The source directory.</param>
            <param name="targetDirectory">The target directory.</param>
            <returns>Instance of <see cref="T:Inedo.BuildMaster.Util.Files.Comparison.DirectoryDifferences"/> which contains a report of the differences.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="sourceDirectory"/> is null or <paramref name="targetDirectory"/> is null.</exception>
        </member>
        <member name="T:Inedo.BuildMaster.Util.Files.Comparison.ISystemEntryInfoPair`1">
            <summary>
            Represents a pair of matched file system items.
            </summary>
            <typeparam name="TEntry">Type of the file system entry.</typeparam>
        </member>
        <member name="P:Inedo.BuildMaster.Util.Files.Comparison.ISystemEntryInfoPair`1.Source">
            <summary>
            Gets the source item.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Util.Files.Comparison.ISystemEntryInfoPair`1.Target">
            <summary>
            Gets the target item.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Util.Files.Comparison.DirectoryDifferences">
            <summary>
            Contains a difference report for two directory trees.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Util.Files.Comparison.DirectoryDifferences.SourceOnly">
            <summary>
            Gets a flattened collection of files and directories that are present only in the source.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Util.Files.Comparison.DirectoryDifferences.TargetOnly">
            <summary>
            Gets a flattened collection of files and directories that are present only in the target.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Util.Files.Comparison.DirectoryDifferences.Identical">
            <summary>
            Gets a flattened collection of files and directories that are the same in the source and the target.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Util.Files.Comparison.DirectoryDifferences.Different">
            <summary>
            Gets a flattened collection of files that are different.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Files.Comparison.DirectoryDifferences.Refine(System.Func{Inedo.BuildMaster.Util.Files.Comparison.ISystemEntryInfoPair{Inedo.BuildMaster.Files.FileEntryInfo},System.Nullable{System.Boolean}})">
            <summary>
            Returns a new <see cref="T:Inedo.BuildMaster.Util.Files.Comparison.DirectoryDifferences"/> instance that has been further refined using a user-defined method.
            </summary>
            <param name="areFilesDifferent">Delegate which is invoked to determine if files are actually different.</param>
            <returns>New <see cref="T:Inedo.BuildMaster.Util.Files.Comparison.DirectoryDifferences"/> instance with refined results.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="areFilesDifferent"/> is null.</exception>
        </member>
        <member name="T:Inedo.BuildMaster.Util.Files.Diff">
            <summary>
            A set of static methods for text file comparison.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Files.Diff.FindDifferences(System.String,System.String)">
            <summary>
            Returns a collection of all of the differences between two strings.
            </summary>
            <param name="text1">The first string.</param>
            <param name="text2">The second string.</param>
            <returns>Collection of all of the differences between the supplied strings.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="text1"/> is null or <paramref name="text2"/> is null.</exception>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Files.GetFileEntry(System.String)">
            <summary>
            Returns an <see cref="T:Inedo.BuildMaster.Files.ExtendedFileEntryInfo"/> item for a file at the specified path.
            </summary>
            <param name="path">Path to the file.</param>
            <returns><see cref="T:Inedo.BuildMaster.Files.ExtendedFileEntryInfo"/> of the specified file.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Files.GetDirectoryEntry(System.String,System.Exception[]@,System.Boolean)">
            <summary>
            Deprecated.
            </summary>
            <param name="path"></param>
            <param name="loadExceptions"></param>
            <param name="recurse"></param>
            <returns></returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Files.GetDirectoryEntry(System.String,System.String,System.Exception[]@,System.Boolean)">
            <summary>
            Deprecated.
            </summary>
            <param name="rootPathToTrim"></param>
            <param name="path"></param>
            <param name="loadExceptions"></param>
            <param name="recurse"></param>
            <returns></returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Files.GetDirectoryEntry(System.String,System.String,System.Exception[]@,System.Boolean,System.Boolean)">
            <summary>
            Deprecated.
            </summary>
            <param name="rootPathToTrim"></param>
            <param name="path"></param>
            <param name="loadExceptions"></param>
            <param name="recurse"></param>
            <param name="buildFileHashes"></param>
            <returns></returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Files.GetDirectoryEntry(Inedo.BuildMaster.Files.GetDirectoryEntryCommand)">
            <summary>
            Returns the contents of a file system directory.
            </summary>
            <param name="command">Specifies information about the type of file system enumeration to perform.</param>
            <returns>Contents of the specified directory and any exceptions thrown during enumeration.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Files.TransferFile(Inedo.Agents.IFileOperationsExecuter,System.String,Inedo.Agents.IFileOperationsExecuter,System.String)">
            <summary>
            Transfers a file from a source server to a target server.
            </summary>
            <param name="sourceAgent">An instance which implements <see cref="T:Inedo.Agents.IFileOperationsExecuter"/> to transfer from.</param>
            <param name="sourceFilePath">The file path on the source server to transfer from.</param>
            <param name="targetAgent">An instance which implements <see cref="T:Inedo.Agents.IFileOperationsExecuter"/> to transfer to.</param>
            <param name="targetFilePath">The file path on the target server to transfer to.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Files.GetShortFileSize(System.String)">
            <summary>
            Gets a short file size in string format for the specified file.
            </summary>
            <param name="filePath">The file path.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Files.GetShortFileSize(System.Int64)">
            <summary>
            Gets a short file size in string format for the specified file.
            </summary>
            <param name="fileSize">The file size.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Files.GetZipEntryInfo(System.String)">
            <summary>
            Gets a <see cref="T:Inedo.BuildMaster.Files.DirectoryEntryInfo"/> object containing the files within the specified zip file on disk.
            </summary>
            <param name="zipFilePath">The zip file path.</param>
            <exception cref="T:System.ArgumentNullException">filePath</exception>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Files.ExtractZipFile(System.String,System.String,System.Boolean)">
            <summary>
            Extracts the zip file.
            </summary>
            <param name="sourceFileName">Name of the source file.</param>
            <param name="targetPath">The target path.</param>
            <param name="overwrite">if set to <c>true</c> [overwrite].</param>
        </member>
        <member name="T:Inedo.BuildMaster.Util.Bool">
            <summary>
            A collection of static <see cref="T:System.Boolean"/> related utility methods.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Bool.ParseN(System.String)">
            <summary>
            Converts the specified string representation of an integer to its <see cref="T:System.Boolean"/> equivalent
            using <see cref="M:System.Boolean.TryParse(System.String,System.Boolean@)"/>. If the string is not a valid bool, null is returned.
            </summary>
            <param name="boolString">String to try to parse.</param>
            <returns>Resulting <see cref="T:System.Boolean"/> value if parsing was successful; otherwise null.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Bool.ParseF(System.String)">
            <summary>
            Converts the specified string representation of an integer to its <see cref="T:System.Boolean"/> equivalent
            using <see cref="M:System.Boolean.TryParse(System.String,System.Boolean@)"/>. If the string is not a valid bool, false is returned.
            </summary>
            <param name="boolString">String to try to parse.</param>
            <returns>Resulting <see cref="T:System.Boolean"/> value if parsing was successful; otherwise false.</returns>
        </member>
        <member name="T:Inedo.BuildMaster.Util.DateTime">
            <summary>
            A collection of static <see cref="T:System.DateTime"/> related utility methods.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Util.DateTime.ParseN(System.String)">
            <summary>
            Converts the specified string representation of a date and time to its <see cref="T:System.DateTime"/> equivalent
            using <see cref="M:System.DateTime.TryParse(System.String,System.DateTime@)"/>; if the string is not a valid date time, null is returned
            </summary>
            <param name="dateTimeString">String to try to parse.</param>
            <returns>Resulting <see cref="T:System.DateTime"/> value if parsing was successful; otherwise null.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.NullIf(System.String,System.String)">
            <summary>
            Returns a null reference if the two specified parameters are equal (or if either are null); otherwise, returns the first parameter.
            </summary>
            <param name="a">The first parameter.</param>
            <param name="b">The second parameter.</param>
            <returns>Null reference if the two specified parameters are equal (or if either are null); otherwise, the first parameter.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.NullIf``1(System.Nullable{``0},System.Nullable{``0})">
            <summary>
            Returns a null reference if the two specified parameters are equal (or if either are null); otherwise, returns the first parameter.
            </summary>
            <param name="a">The first parameter.</param>
            <param name="b">The second parameter.</param>
            <typeparam name="T">The type of parameter to compare.</typeparam>
            <returns>Null reference if the two specified parameters are equal (or if either are null); otherwise, the first parameter.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.NullIf``1(``0,System.Nullable{``0})">
            <summary>
            Returns a null reference if the two specified parameters are equal (or if either are null); otherwise, returns the first parameter.
            </summary>
            <param name="a">The first parameter.</param>
            <param name="b">The second parameter.</param>
            <typeparam name="T">The type of parameter to compare.</typeparam>
            <returns>Null reference if the two specified parameters are equal (or if either are null); otherwise, the first parameter.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Coalesce``2(``0,``1)">
            <summary>
            Returns the first non-null or non-DBNull.Value expression among its arguments.
            </summary>
            <typeparam name="T1">First argument type.</typeparam>
            <typeparam name="T2">Second argument type.</typeparam>
            <param name="arg1">First object to test for null.</param>
            <param name="arg2">Second object to test for null.</param>
            <returns>First non-null or non-DBNull.Value value.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.CoalesceStr``2(``0,``1)">
            <summary>
            Returns the first non-null and non string.Empty expression among the specified arguments.
            </summary>
            <typeparam name="T1">First argument type.</typeparam>
            <typeparam name="T2">Second argument type.</typeparam>
            <param name="arg1">First argument.</param>
            <param name="arg2">Second argument.</param>
            <returns>First non-null and non-string.Empty value.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.ConcatN(System.Object[])">
            <summary>
            Returns String.Empty when one of the arguments is null or DBNull.Value; otherwise, returns a concatenation of the arguments.
            </summary>
            <param name="args">Arguments to concatenate.</param>
            <returns>Concatenated string or String.Empty if an argument is null or DBNull.Value.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.ConcatNE(System.Object[])">
            <summary>
            Returns String.Empty when one of the arguments is null, DBNull.Value, or String.Empty; otherwise, returns a concatenation of the arguments.
            </summary>
            <param name="args">Arguments to concatenate.</param>
            <returns>Concatenated string or String.Empty if an argument is null, DBNull.Value, or String.Empty.</returns>
        </member>
        <member name="T:Inedo.BuildMaster.Util.Variables">
            <summary>
            Contains methods for working with BuildMaster variables.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Variables.CreateStandardContext(Inedo.BuildMaster.Extensibility.IGenericBuildMasterContext,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Returns an instance of the standard variable evaluation context.
            </summary>
            <param name="context">The generic BuildMaster context.</param>
            <param name="variables">Initial variable values. May be null to retrieve automatically.</param>
            <returns>Standard variable evaluation context.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="context"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">The standard context is currently unavailable.</exception>
            <remarks>
            This method should only be called on the BuildMaster server.
            </remarks>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Variables.CreateStandardContext(Inedo.BuildMaster.Extensibility.IGenericBuildMasterContext)">
            <summary>
            Returns an instance of the standard variable evaluation context.
            </summary>
            <param name="context">The generic BuildMaster context.</param>
            <returns>Standard variable evaluation context.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="context"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">The standard context is currently unavailable.</exception>
            <remarks>
            This method should only be called on the BuildMaster server.
            </remarks>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Variables.Evaluate(System.String,Inedo.BuildMaster.Extensibility.IGenericBuildMasterContext,System.String)">
            <summary>
            Evaluates and substitutes all variables and functions in the supplied text and returns the resulting text.
            </summary>
            <param name="text">String containing variables to evaluate.</param>
            <param name="context">Current BuildMaster context for variable evaluation.</param>
            <param name="variableSupportCode">One of the values in <see cref="T:Inedo.BuildMaster.Data.Domains.VariableSupportCodes"/>.</param>
            <returns>Resulting text of evaluated expression.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Variables.Evaluate(System.String,Inedo.BuildMaster.Extensibility.IGenericBuildMasterContext)">
            <summary>
            Evaluates and substitutes all variables and functions in the supplied text and returns the resulting text.
            </summary>
            <param name="text">String containing variables to evaluate.</param>
            <param name="context">Current BuildMaster context for variable evaluation.</param>
            <returns>Resulting text of evaluated expression.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Variables.ApplyVariableReplacementsToPersistentProperties(System.Object,Inedo.BuildMaster.Extensibility.Variables.IVariableEvaluationContext,System.String)">
            <summary>
            Applies variable replacements to action properties.
            </summary>
            <param name="obj">The extensible class instance.</param>
            <param name="context">The context.</param>
            <param name="variableSupportCode">The variable support code.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Variables.ApplyVariableReplacementsToPersistentProperties(System.Object,Inedo.BuildMaster.Extensibility.Variables.IVariableEvaluationContext)">
            <summary>
            Applies variable replacements to action properties.
            </summary>
            <param name="obj">The extensible class instance.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Variables.ValidateManagePermissions(Inedo.BuildMaster.Extensibility.IGenericBuildMasterContext)">
            <summary>
            Validates the current user can manage variables in the specified context.
            </summary>
            <param name="context">The context.</param>
            <exception cref="T:Inedo.BuildMaster.Web.Security.SecuredTaskDeniedException">Thrown when the user does not have permission.</exception>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Variables.ValidateManagePermissions(Inedo.BuildMaster.Data.Tables.VariableDefinitions_Extended)">
            <summary>
            Validates the current user can manage the specified variable definition.
            </summary>
            <param name="definition">The variable definition.</param>
            <exception cref="T:Inedo.BuildMaster.Web.Security.SecuredTaskDeniedException">Thrown when the user does not have permission.</exception>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Variables.ValidateManagePermissions(Inedo.BuildMaster.Data.Tables.VariableDeclarations)">
            <summary>
            Validates the current user can manage the specified variable declaration.
            </summary>
            <param name="declaration">The variable declaration.</param>
            <exception cref="T:Inedo.BuildMaster.Web.Security.SecuredTaskDeniedException">Thrown when the user does not have permission.</exception>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Variables.ValidateManagePermissions(Inedo.BuildMaster.Data.Tables.Variables)">
            <summary>
            Validates the current user can manage the specified variable.
            </summary>
            <param name="variable">The variable.</param>
            <exception cref="T:Inedo.BuildMaster.Web.Security.SecuredTaskDeniedException">Thrown when the user does not have permission.</exception>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Variables.UserCanManage(Inedo.BuildMaster.Extensibility.IGenericBuildMasterContext)">
            <summary>
            Determines whether the current user can manage variables in the specified context.
            </summary>
            <param name="context">The context.</param>
            <returns>A value indicating whether the user can manage variables in the specified context.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Variables.UserCanManage(Inedo.BuildMaster.Data.Tables.VariableDefinitions_Extended)">
            <summary>
            Determines whether the current user can manage variables in the specified context.
            </summary>
            <param name="definition">The variable definition.</param>
            <returns>A value indicating whether the user can manage variables in the specified context.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Variables.UserCanManage(Inedo.BuildMaster.Data.Tables.Variables)">
            <summary>
            Determines whether the current user can manage variables in the specified context.
            </summary>
            <param name="variable">The variable.</param>
            <returns>A value indicating whether the user can manage variables in the specified context.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Variables.ExtractVariableData(System.String,System.String)">
            <summary>
            Gets the name, type code and value bytes from a combination of variable name and value inputs.
            </summary>
            <param name="name">The name.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:Inedo.BuildMaster.Util.ExtensionConfigurers">
            <summary>
            Contains utility methods for working with extension configurers.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Util.ExtensionConfigurers.GetExtensionConfigurer(System.Object)">
            <summary>
            Returns the configurer for the extension of the specified component.
            </summary>
            <returns>Configurer for the component extension if one is available; otherwise null.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="component"/> is null.</exception>
        </member>
        <member name="M:Inedo.BuildMaster.Util.ExtensionConfigurers.GetExtensionConfigurer(System.Int32)">
            <summary>
            Returns the configurer with the specified configurer ID.
            </summary>
            <returns>Configurer with the ID specified in <paramref name="extensionConfigurerId"/>.</returns>
            <exception cref="T:System.ArgumentException"><paramref name="extensionConfigurerId"/> is not the ID of a valid configuration profile.</exception>
        </member>
        <member name="T:Inedo.BuildMaster.RequiresInterfaceAttribute">
            <summary>
            Indicates that a class (generally, an <see cref="T:Inedo.BuildMaster.Extensibility.Actions.ActionBase"/>) requires that a class it
            consumes (generally a <see cref="T:Inedo.BuildMaster.Extensibility.Providers.ProviderBase"/>) must implement an interface.
            </summary>
            <remarks>
            This attribute is only relevant for provider-based actions.
            </remarks>
            <seealso cref="T:Inedo.BuildMaster.Extensibility.Actions.ProviderBasedAction`1"/>
        </member>
        <member name="M:Inedo.BuildMaster.RequiresInterfaceAttribute.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.RequiresInterfaceAttribute"/> class.
            </summary>
            <param name="requiredInterface">The type of the interface which must be implemented by the related <see cref="T:Inedo.BuildMaster.Extensibility.Providers.ProviderBase"/>.</param>
        </member>
        <member name="P:Inedo.BuildMaster.RequiresInterfaceAttribute.RequiredInterface">
            <summary>
            Gets the type of the interface which must be implemented by the related <see cref="T:Inedo.BuildMaster.Extensibility.Providers.ProviderBase"/>.
            </summary>
        </member>
        <member name="M:Inedo.Configuration.Sources.AppSettingsConfigSource.ReadConfigValue(System.String,System.String)">
            <summary>
            Returns the value associated with the specified scope and key.
            </summary>
            <param name="scope">Scope of the configuration value.</param>
            <param name="key">Key of the configuration value.</param>
            <returns>
            Value of the specified key in the specified scope.
            </returns>
        </member>
        <member name="M:Inedo.Configuration.Sources.AppSettingsConfigSource.WriteConfigValue(System.String,System.String,System.String)">
            <summary>
            Writes the specified value for the specified scope and key.
            </summary>
            <param name="scope">Scope of the configuration value.</param>
            <param name="key">Key of the configuration value.</param>
            <param name="value">Value to write to the specified scope and key.</param>
        </member>
        <member name="T:Inedo.Configuration.Sources.IConfigSource">
            <summary>
            Represents a source of configuration data as scoped key/value pairs.
            </summary>
        </member>
        <member name="M:Inedo.Configuration.Sources.IConfigSource.ReadConfigValue(System.String,System.String)">
            <summary>
            Returns the value associated with the specified scope and key.
            </summary>
            <param name="scope">Scope of the configuration value.</param>
            <param name="key">Key of the configuration value.</param>
            <returns>Value of the specified key in the specified scope.</returns>
        </member>
        <member name="M:Inedo.Configuration.Sources.IConfigSource.WriteConfigValue(System.String,System.String,System.String)">
            <summary>
            Writes the specified value for the specified scope and key.
            </summary>
            <param name="scope">Scope of the configuration value.</param>
            <param name="key">Key of the configuration value.</param>
            <param name="value">Value to write to the specified scope and key.</param>
        </member>
        <member name="T:Inedo.Configuration.Config">
             <summary>
             When implemented by a derived class, represents configuration 
             within a portion of the application.
             </summary>
             <remarks>
             It is recommended that implementers use a singleton pattern and have
             strongly typed properties that wrap the protected Read/Write value.
             </remarks>
             <example>
                 public sealed class ExampleConfig : Config
                 {
                     //private constructor + private single instance
                     ExampleConfig() : base("Example") { }
                     static readonly ExampleConfig i = new ExampleConfig();
            
                     public static int SomeProperty
                     {
                     get { return int.Parse(i.ReadValue("SomeProperty")); }
                     set { i.WriteValue("SomeProperty", value.ToString()); }
                     }
                 }
             </example>
        </member>
        <member name="M:Inedo.Configuration.Config.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Configuration.Config"/> class.
            </summary>
            <param name="scope">The configuration scope.</param>
        </member>
        <member name="P:Inedo.Configuration.Config.Scope">
            <summary>
            Gets the scope of the configuration items.
            </summary>
        </member>
        <member name="M:Inedo.Configuration.Config.GetConfigSource">
            <summary>
            Loads the configuration <see cref="T:Inedo.Configuration.Sources.IConfigSource"/> associated with
            this configuration.
            </summary>
            <remarks>
            By default, an internal configuration source is used that reads values
            from the appSettings seciton of the .config file, concatenating the
            scope and key ("scope.key") to be used as the appsetting's value.
            </remarks>
            <returns><see cref="T:Inedo.Configuration.Sources.IConfigSource"/> representing the configuration source.</returns>
        </member>
        <member name="M:Inedo.Configuration.Config.ReadValue(System.String)">
            <summary>
            Reads the value for the specified key using the <see cref="T:Inedo.Configuration.Sources.IConfigSource"/>
            returned from <see cref="M:Inedo.Configuration.Config.GetConfigSource"/>.
            </summary>
            <param name="key">Key of the value to read.</param>
            <returns>Depending on the <see cref="T:Inedo.Configuration.Sources.IConfigSource"/>, the value of the key, null, or <see cref="F:System.String.Empty"/>.</returns>
        </member>
        <member name="M:Inedo.Configuration.Config.WriteValue(System.String,System.String)">
            <summary>
            Writes the value for the specified key using the <see cref="T:Inedo.Configuration.Sources.IConfigSource"/>
            returned from <see cref="M:Inedo.Configuration.Config.GetConfigSource"/>.
            </summary>
            <param name="key">The key of the value to write.</param>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:Inedo.Configuration.Config.ReadBoolean(System.String)">
            <summary>
            Reads the value for the specified key using the <see cref="T:Inedo.Configuration.Sources.IConfigSource"/>
            returned from <see cref="M:Inedo.Configuration.Config.GetConfigSource"/> and attempts to convert the result to a boolean value.
            </summary>
            <param name="key">Key of the value to read.</param>
            <returns>Boolean value if parsing was successful; otherwise null.</returns>
        </member>
        <member name="M:Inedo.Configuration.Config.WriteValue(System.String,System.Nullable{System.Boolean})">
            <summary>
            Writes a boolean value.
            </summary>
            <param name="key">Key of the value to read.</param>
            <param name="value">Value to write.</param>
        </member>
        <member name="M:Inedo.Configuration.Config.ReadDateTime(System.String)">
            <summary>
            Reads the value for the specified key using the <see cref="T:Inedo.Configuration.Sources.IConfigSource"/>
            returned from <see cref="M:Inedo.Configuration.Config.GetConfigSource"/> and attempts to convert the result to a DateTime value.
            </summary>
            <param name="key">Key of the value to read.</param>
            <returns>DateTime value if parsing was successful; otherwise null.</returns>
        </member>
        <member name="M:Inedo.Configuration.Config.WriteValue(System.String,System.Nullable{System.DateTime})">
            <summary>
            Writes a DateTime value.
            </summary>
            <param name="key">Key of the value to read.</param>
            <param name="value">Value to write.</param>
        </member>
        <member name="M:Inedo.Configuration.Config.ReadInt32(System.String)">
            <summary>
            Reads the value for the specified key using the <see cref="T:Inedo.Configuration.Sources.IConfigSource"/>
            returned from <see cref="M:Inedo.Configuration.Config.GetConfigSource"/> and attempts to convert the result to an Int32 value.
            </summary>
            <param name="key">Key of the value to read.</param>
            <returns>Int32 value if parsing was successful; otherwise null.</returns>
        </member>
        <member name="M:Inedo.Configuration.Config.WriteValue(System.String,System.Nullable{System.Int32})">
            <summary>
            Writes an Int32 value.
            </summary>
            <param name="key">Key of the value to read.</param>
            <param name="value">Value to write.</param>
        </member>
        <member name="T:Inedo.FieldEqualityComparer">
            <summary>
            Contains standard field comparer factories.
            </summary>
        </member>
        <member name="M:Inedo.FieldEqualityComparer.GetComparer``2(System.Func{``0,``1})">
            <summary>
            Gets the comparer for the specified field.
            </summary>
            <typeparam name="T">The types to compare.</typeparam>
            <typeparam name="TResult">The field types to compare.</typeparam>
            <param name="getField">Delegate which returns the field to compare.</param>
            <returns>Equality comparer for the specified type.</returns>
        </member>
        <member name="M:Inedo.FieldEqualityComparer.GetComparer``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
            <summary>
            Gets the comparer for the specified field.
            </summary>
            <typeparam name="T">The types to compare.</typeparam>
            <typeparam name="TResult">The field types to compare.</typeparam>
            <param name="getField">Delegate which returns the field to compare.</param>
            <param name="fieldComparer">The field comparer to use.</param>
            <returns>Equality comparer for the specified type.</returns>
        </member>
        <member name="M:Inedo.FieldEqualityComparer.Distinct``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>
            Returns distinct elements from a sequence by using the default equality comparer
            for the specified primary key to compare values.
            </summary>
            <typeparam name="TSource">The type of the elements of source.</typeparam>
            <typeparam name="TKey">The type of the primary key.</typeparam>
            <param name="source">The sequence to remove duplicate elements from.</param>
            <param name="getPrimaryKey">Delegate which returns the primary key of an element.</param>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerable`1"/> that contains distinct elements
            from the source sequence.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="source"/> is null or <paramref name="getPrimaryKey"/> is null.</exception>
        </member>
        <member name="M:Inedo.FieldEqualityComparer.Distinct``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
            <summary>
            Returns distinct elements from a sequence by using the specified equality comparer
            for the specified primary key to compare values.
            </summary>
            <typeparam name="TSource">The type of the elements of source.</typeparam>
            <typeparam name="TKey">The type of the primary key.</typeparam>
            <param name="source">The sequence to remove duplicate elements from.</param>
            <param name="getPrimaryKey">Delegate which returns the primary key of an element.</param>
            <param name="keyComparer">Comparer for the primary key.</param>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerable`1"/> that contains distinct elements
            from the source sequence.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="source"/> is null or <paramref name="getPrimaryKey"/> is null.</exception>
        </member>
        <member name="M:Inedo.FieldEqualityComparer.Except``2(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>
            Produces the set difference of two sequences by using the default equality
            comparer for the specified primary key to compare values.
            </summary>
            <typeparam name="TSource">The type of the elements of the input sequences.</typeparam>
            <typeparam name="TKey">The type of the primary key.</typeparam>
            <param name="first">A <see cref="T:System.Collections.Generic.IEnumerable`1"/> whose elements that are not also in second will be returned.</param>
            <param name="second">A <see cref="T:System.Collections.Generic.IEnumerable`1"/> whose elements that also occur in the first sequence will cause those elements to be removed from the returned sequence.</param>
            <param name="getPrimaryKey">Delegate which returns the primary key of an element.</param>
            <returns>A sequence that contains the set difference of the elements of two sequences.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="first"/> is null or <paramref name="second"/> is null or <paramref name="getPrimaryKey"/> is null.</exception>
        </member>
        <member name="M:Inedo.FieldEqualityComparer.Except``2(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
            <summary>
            Produces the set difference of two sequences by using the specified equality
            comparer for the specified primary key to compare values.
            </summary>
            <typeparam name="TSource">The type of the elements of the input sequences.</typeparam>
            <typeparam name="TKey">The type of the primary key.</typeparam>
            <param name="first">A <see cref="T:System.Collections.Generic.IEnumerable`1"/> whose elements that are not also in second will be returned.</param>
            <param name="second">A <see cref="T:System.Collections.Generic.IEnumerable`1"/> whose elements that also occur in the first sequence will cause those elements to be removed from the returned sequence.</param>
            <param name="getPrimaryKey">Delegate which returns the primary key of an element.</param>
            <param name="keyComparer">Comparer for the primary key.</param>
            <returns>A sequence that contains the set difference of the elements of two sequences.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="first"/> is null or <paramref name="second"/> is null or <paramref name="getPrimaryKey"/> is null.</exception>
        </member>
        <member name="M:Inedo.FieldEqualityComparer.Union``2(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>
            Produces the set union of two sequences by using the default equality
            comparer for the specified primary key to compare values.
            </summary>
            <typeparam name="TSource">The type of the elements of the input sequences.</typeparam>
            <typeparam name="TKey">The type of the primary key.</typeparam>
            <param name="first">A <see cref="T:System.Collections.Generic.IEnumerable`1"/> whose distinct elements form the first set for the union.</param>
            <param name="second">A <see cref="T:System.Collections.Generic.IEnumerable`1"/> whose distinct elements form the second set for the union.</param>
            <param name="getPrimaryKey">Delegate which returns the primary key of an element.</param>
            <returns>A sequence that contains the elements from both input sequences, excluding duplicates.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="first"/> is null or <paramref name="second"/> is null or <paramref name="getPrimaryKey"/> is null.</exception>
        </member>
        <member name="M:Inedo.FieldEqualityComparer.Union``2(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
            <summary>
            Produces the set union of two sequences by using the specified equality
            comparer for the specified primary key to compare values.
            </summary>
            <typeparam name="TSource">The type of the elements of the input sequences.</typeparam>
            <typeparam name="TKey">The type of the primary key.</typeparam>
            <param name="first">A <see cref="T:System.Collections.Generic.IEnumerable`1"/> whose distinct elements form the first set for the union.</param>
            <param name="second">A <see cref="T:System.Collections.Generic.IEnumerable`1"/> whose distinct elements form the second set for the union.</param>
            <param name="getPrimaryKey">Delegate which returns the primary key of an element.</param>
            <param name="keyComparer">Comparer for the primary key.</param>
            <returns>A sequence that contains the elements from both input sequences, excluding duplicates.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="first"/> is null or <paramref name="second"/> is null or <paramref name="getPrimaryKey"/> is null.</exception>
        </member>
        <member name="T:Inedo.Documentation.ApplicationHilite">
            <summary>
            Description that refers to a specific BuildMaster application.
            </summary>
        </member>
        <member name="M:Inedo.Documentation.ApplicationHilite.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Documentation.ApplicationHilite"/> class.
            </summary>
            <param name="applicationId">The application ID.</param>
            <param name="applicationName">The application name.</param>
        </member>
        <member name="M:Inedo.Documentation.ApplicationHilite.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Documentation.ApplicationHilite"/> class.
            </summary>
            <param name="applicationId">The application ID.</param>
        </member>
        <member name="M:Inedo.Documentation.ApplicationHilite.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Documentation.ApplicationHilite"/> class.
            </summary>
            <param name="applicationName">The application name.</param>
        </member>
        <member name="M:Inedo.Documentation.ApplicationHilite.WritePlainText(System.IO.TextWriter)">
            <summary>
            Writes the description as plain text.
            </summary>
            <param name="writer"><see cref="T:System.IO.TextWriter"/> instance to write the description to.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="writer"/> is null.</exception>
        </member>
        <member name="M:Inedo.Documentation.ApplicationHilite.WriteHtml(System.IO.TextWriter)">
            <summary>
            Writes the description as HTML.
            </summary>
            <param name="writer"><see cref="T:System.IO.TextWriter"/> instance to write the description to.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="writer"/> is null.</exception>
        </member>
        <member name="T:Inedo.Documentation.DirectoryHilite">
            <summary>
            Descriptive text which contains a directory.
            </summary>
        </member>
        <member name="M:Inedo.Documentation.DirectoryHilite.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Documentation.DirectoryHilite"/> class.
            </summary>
            <param name="directory">The directory.</param>
        </member>
        <member name="M:Inedo.Documentation.DirectoryHilite.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Documentation.DirectoryHilite"/> class.
            </summary>
            <param name="rootDirectory">The root directory.</param>
            <param name="relativeDirectory">The relative directory.</param>
        </member>
        <member name="M:Inedo.Documentation.DirectoryHilite.WriteHtml(System.IO.TextWriter)">
            <summary>
            Writes the description as HTML.
            </summary>
            <param name="writer"><see cref="T:System.IO.TextWriter"/> instance to write the description to.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="writer"/> is null.</exception>
        </member>
        <member name="M:Inedo.Documentation.DirectoryHilite.WritePlainText(System.IO.TextWriter)">
            <summary>
            Writes the description as plain text.
            </summary>
            <param name="writer"><see cref="T:System.IO.TextWriter"/> instance to write the description to.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="writer"/> is null.</exception>
        </member>
        <member name="T:Inedo.Documentation.ExtendedRichDescription">
            <summary>
            Provides a short and long description of something.
            </summary>
        </member>
        <member name="M:Inedo.Documentation.ExtendedRichDescription.#ctor(Inedo.Documentation.RichDescription)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Documentation.ExtendedRichDescription"/> class.
            </summary>
            <param name="shortDescription">The short description.</param>
        </member>
        <member name="M:Inedo.Documentation.ExtendedRichDescription.#ctor(Inedo.Documentation.RichDescription,Inedo.Documentation.RichDescription)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Documentation.ExtendedRichDescription"/> class.
            </summary>
            <param name="shortDescription">The short description.</param>
            <param name="longDescription">The long description.</param>
        </member>
        <member name="P:Inedo.Documentation.ExtendedRichDescription.ShortDescription">
            <summary>
            Gets the short description.
            </summary>
        </member>
        <member name="P:Inedo.Documentation.ExtendedRichDescription.LongDescription">
            <summary>
            Gets the long description or null if it is not defined.
            </summary>
        </member>
        <member name="M:Inedo.Documentation.ExtendedRichDescription.ToString">
            <summary>
            Returns an undecorated plaintext string of both the short and long descriptions.
            </summary>
            <returns>String containing the short and long descriptions.</returns>
        </member>
        <member name="T:Inedo.Documentation.Hilite">
            <summary>
            Descriptive text that is emphasized.
            </summary>
        </member>
        <member name="M:Inedo.Documentation.Hilite.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Documentation.Hilite"/> class.
            </summary>
            <param name="text">The text.</param>
        </member>
        <member name="M:Inedo.Documentation.Hilite.WriteHtml(System.IO.TextWriter)">
            <summary>
            Writes the description as HTML.
            </summary>
            <param name="writer"><see cref="T:System.IO.TextWriter"/> instance to write the description to.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="writer"/> is null.</exception>
        </member>
        <member name="M:Inedo.Documentation.Hilite.WritePlainText(System.IO.TextWriter)">
            <summary>
            Writes the description as plain text.
            </summary>
            <param name="writer"><see cref="T:System.IO.TextWriter"/> instance to write the description to.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="writer"/> is null.</exception>
        </member>
        <member name="T:Inedo.Documentation.IRichDescriptionNode">
            <summary>
            Represents a rich description node that can format itself.
            </summary>
        </member>
        <member name="M:Inedo.Documentation.IRichDescriptionNode.WritePlainText(System.IO.TextWriter)">
            <summary>
            Writes the description as plain text.
            </summary>
            <param name="writer"><see cref="T:System.IO.TextWriter"/> instance to write the description to.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="writer"/> is null.</exception>
        </member>
        <member name="M:Inedo.Documentation.IRichDescriptionNode.WriteHtml(System.IO.TextWriter)">
            <summary>
            Writes the description as HTML.
            </summary>
            <param name="writer"><see cref="T:System.IO.TextWriter"/> instance to write the description to.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="writer"/> is null.</exception>
        </member>
        <member name="T:Inedo.Documentation.ListHilite">
            <summary>
            Describes a list of items.
            </summary>
        </member>
        <member name="M:Inedo.Documentation.ListHilite.#ctor(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Documentation.ListHilite"/> class.
            </summary>
            <param name="values">The list values.</param>
        </member>
        <member name="M:Inedo.Documentation.ListHilite.#ctor(System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Documentation.ListHilite"/> class.
            </summary>
            <param name="values">The list values.</param>
        </member>
        <member name="M:Inedo.Documentation.ListHilite.WriteHtml(System.IO.TextWriter)">
            <summary>
            Writes the description as HTML.
            </summary>
            <param name="writer"><see cref="T:System.IO.TextWriter"/> instance to write the description to.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="writer"/> is null.</exception>
        </member>
        <member name="M:Inedo.Documentation.ListHilite.WritePlainText(System.IO.TextWriter)">
            <summary>
            Writes the description as plain text.
            </summary>
            <param name="writer"><see cref="T:System.IO.TextWriter"/> instance to write the description to.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="writer"/> is null.</exception>
        </member>
        <member name="T:Inedo.Documentation.MaskHilite">
            <summary>
            Descriptive text which contains file masks.
            </summary>
        </member>
        <member name="M:Inedo.Documentation.MaskHilite.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Documentation.MaskHilite"/> class.
            </summary>
            <param name="includes">Include masks.</param>
            <param name="excludes">Exclude masks.</param>
        </member>
        <member name="M:Inedo.Documentation.MaskHilite.#ctor(System.String[],System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Documentation.MaskHilite"/> class.
            </summary>
            <param name="includes">Include masks.</param>
            <param name="excludes">Exclude masks.</param>
        </member>
        <member name="M:Inedo.Documentation.MaskHilite.WritePlainText(System.IO.TextWriter)">
            <summary>
            Writes the description as plain text.
            </summary>
            <param name="writer"><see cref="T:System.IO.TextWriter"/> instance to write the description to.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="writer"/> is null.</exception>
        </member>
        <member name="M:Inedo.Documentation.MaskHilite.WriteHtml(System.IO.TextWriter)">
            <summary>
            Writes the description as HTML.
            </summary>
            <param name="writer"><see cref="T:System.IO.TextWriter"/> instance to write the description to.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="writer"/> is null.</exception>
        </member>
        <member name="T:Inedo.Documentation.RichDescription">
            <summary>
            Descriptive text that can be displayed as plain text or highlighted HTML.
            </summary>
        </member>
        <member name="M:Inedo.Documentation.RichDescription.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Documentation.RichDescription"/> class.
            </summary>
        </member>
        <member name="M:Inedo.Documentation.RichDescription.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Documentation.RichDescription"/> class.
            </summary>
            <param name="content">The content.</param>
        </member>
        <member name="M:Inedo.Documentation.RichDescription.#ctor(System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Documentation.RichDescription"/> class.
            </summary>
            <param name="content">The content.</param>
        </member>
        <member name="M:Inedo.Documentation.RichDescription.AppendContent(System.Object)">
            <summary>
            Adds content to the end of the description.
            </summary>
            <param name="content">The content.</param>
        </member>
        <member name="M:Inedo.Documentation.RichDescription.AppendContent(System.Object[])">
            <summary>
            Adds content to the end of the description.
            </summary>
            <param name="content">The content.</param>
        </member>
        <member name="M:Inedo.Documentation.RichDescription.WritePlainText(System.IO.TextWriter)">
            <summary>
            Writes the description as plain text.
            </summary>
            <param name="writer"><see cref="T:System.IO.TextWriter"/> instance to write the description to.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="writer"/> is null.</exception>
        </member>
        <member name="M:Inedo.Documentation.RichDescription.WriteHtml(System.IO.TextWriter)">
            <summary>
            Writes the description as HTML.
            </summary>
            <param name="writer"><see cref="T:System.IO.TextWriter"/> instance to write the description to.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="writer"/> is null.</exception>
        </member>
        <member name="M:Inedo.Documentation.RichDescription.ToString">
            <summary>
            Returns an undecorated plaintext string of the description.
            </summary>
            <returns>String containing the description.</returns>
        </member>
        <member name="M:Inedo.Documentation.RichDescription.ToHtml">
            <summary>
            Returns an HTML formatted string of the description.
            </summary>
            <returns>HTML formatted string containing the description.</returns>
        </member>
        <member name="T:Inedo.Documentation.StandardText">
            <summary>
            Descriptive text which may contain variable expressions.
            </summary>
        </member>
        <member name="M:Inedo.Documentation.StandardText.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Documentation.StandardText"/> class.
            </summary>
            <param name="text">The text.</param>
        </member>
        <member name="P:Inedo.Documentation.StandardText.Text">
            <summary>
            Gets the text.
            </summary>
        </member>
        <member name="M:Inedo.Documentation.StandardText.WritePlainText(System.IO.TextWriter)">
            <summary>
            Writes the description as plain text.
            </summary>
            <param name="writer"><see cref="T:System.IO.TextWriter"/> instance to write the description to.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="writer"/> is null.</exception>
        </member>
        <member name="M:Inedo.Documentation.StandardText.WriteHtml(System.IO.TextWriter)">
            <summary>
            Writes the description as HTML.
            </summary>
            <param name="writer"><see cref="T:System.IO.TextWriter"/> instance to write the description to.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="writer"/> is null.</exception>
        </member>
        <member name="M:Inedo.Documentation.StandardText.WriteInnerPlainText(System.IO.TextWriter)">
            <summary>
            Writes the description as plain text.
            </summary>
            <param name="writer"><see cref="T:System.IO.TextWriter"/> instance to write the description to.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="writer"/> is null.</exception>
        </member>
        <member name="M:Inedo.Documentation.StandardText.WriteInnerHtml(System.IO.TextWriter)">
            <summary>
            Writes the description as HTML.
            </summary>
            <param name="writer"><see cref="T:System.IO.TextWriter"/> instance to write the description to.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="writer"/> is null.</exception>
        </member>
        <member name="T:Inedo.Documentation.UnprocessedText">
            <summary>
            Plain unprocessed text with no variable detection.
            </summary>
        </member>
        <member name="M:Inedo.Documentation.UnprocessedText.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Documentation.UnprocessedText"/> class.
            </summary>
            <param name="text">The text.</param>
        </member>
        <member name="M:Inedo.Documentation.UnprocessedText.WritePlainText(System.IO.TextWriter)">
            <summary>
            Writes the description as plain text.
            </summary>
            <param name="writer"><see cref="T:System.IO.TextWriter"/> instance to write the description to.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="writer"/> is null.</exception>
        </member>
        <member name="M:Inedo.Documentation.UnprocessedText.WriteHtml(System.IO.TextWriter)">
            <summary>
            Writes the description as HTML.
            </summary>
            <param name="writer"><see cref="T:System.IO.TextWriter"/> instance to write the description to.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="writer"/> is null.</exception>
        </member>
    </members>
</doc>

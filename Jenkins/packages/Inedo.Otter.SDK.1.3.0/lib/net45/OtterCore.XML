<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OtterCore</name>
    </assembly>
    <members>
        <member name="T:Inedo.Otter.Data.DB">
            <summary>
            Provides strongly typed wrapper methods for stored procedures.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.ApiKeys_CreateOrUpdateApiKey(System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Creates or updates the specified API key.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.ApiKeys_DeleteApiKey(System.Nullable{System.Int32})">
            <summary>
            Deletes the specified API key.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.ApiKeys_GetAccessLog(System.Nullable{System.Int32})">
            <summary>
            Gets the details of a specific API access log.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.ApiKeys_GetAccessLogs(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Logs a request made with an API key.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.ApiKeys_GetApiKey(System.Nullable{System.Int32})">
            <summary>
            Gets the specified API key by ID.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.ApiKeys_GetApiKeyByName(System.String)">
            <summary>
            Gets the specified API key by the API key.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.ApiKeys_GetApiKeys">
            <summary>
            Gets all API keys in the system.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.ApiKeys_LogRequest(System.String,System.Nullable{System.DateTime},System.String,System.String,System.String,System.Nullable{System.Int32},System.Byte[],System.Byte[])">
            <summary>
            Logs a request made with an API key.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Configuration_GetValues">
            <summary>
            Gets all of the Otter configuration values.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Configuration_SetValue(System.String,System.String)">
            <summary>
            Sets an Otter configuration value.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Credentials_CreateOrUpdateCredential(System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{Inedo.Data.YNIndicator},System.Nullable{System.Int32})">
            <summary>
            Creates a new credential or updates an existing one.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Credentials_DeleteCredential(System.Nullable{System.Int32})">
            <summary>
            Gets the specified credential.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Credentials_GetCredential(System.Nullable{System.Int32})">
            <summary>
            Gets the specified credential.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Credentials_GetCredentialByName(System.String,System.String)">
            <summary>
            Gets the specified credential by its qualified name.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Credentials_GetCredentials">
            <summary>
            Gets all credentials in the system.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Environments_CreateOrUpdateEnvironment(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Creates a new environment, or updates an existing one.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Environments_DeleteEnvironment(System.Nullable{System.Int32})">
            <summary>
            Deletes the specified environment.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Environments_GetEnvironment(System.Nullable{System.Int32})">
            <summary>
            Gets the specified environment and its servers.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Environments_GetEnvironments">
            <summary>
            Gets all the environments and their servers in the system.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Environments_GetEnvironmentsForContext(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets the union of all environments that are associated with the specified criteria.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.EnvironmentServers_GetEnvironmentServers">
            <summary>
            Gets all the environment server links in the system.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Executions_AddLogEntry(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Byte[],System.Nullable{System.DateTime})">
            <summary>
            Creates a log entry.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Executions_CompleteExecution(System.Nullable{System.Int32},System.Nullable{System.DateTime},System.String,System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Completes an execution.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Executions_CompleteLogScope(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime})">
            <summary>
            Completes a log scope.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Executions_CreateLogScope(System.Nullable{System.Int32},System.Byte[],System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            Creates a log scope.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Executions_DeleteExecution(System.Nullable{System.Int32})">
            <summary>
            Deletes the specified execution and all of its logs.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Executions_GetExecution(System.Nullable{System.Int32})">
            <summary>
            Gets the specified execution.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Executions_GetExecutionLogScopes(System.Nullable{System.Int32})">
            <summary>
            Gets all log scopes for the specified execution.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Executions_GetExecutions(System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Gets all executions in the system.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Executions_GetLogEntries(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets execution log entries that match the specified criteria.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Executions_ServiceStartCleanup">
            <summary>
            Fault running jobs, complete any incomplete executions, and complete log scopes with no end date.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Executions_StartExecution(System.Nullable{System.DateTime},System.String,System.Nullable{Inedo.Data.YNIndicator},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Starts an execution.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Executions_UpdateJobState(System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime})">
            <summary>
            Updates the state of the specified job.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Hosts_CreateOrUpdateHost(System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Creates a new server host, or updates an existing one.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Hosts_DeleteHost(System.Nullable{System.Int32})">
            <summary>
            Deletes the specified host.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Hosts_GetHost(System.Nullable{System.Int32})">
            <summary>
            Gets the specified server hosts in the system.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Hosts_GetHosts">
            <summary>
            Gets all the server hosts in the system.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Infrastructure_GetInfrastructure">
            <summary>
            Gets all of the infrastructure; this includes servers, environments, and roles.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Jobs_CreateJob(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{Inedo.Data.YNIndicator},System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Creates a new job.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Jobs_DeleteJob(System.Nullable{System.Int32})">
            <summary>
            Deletes the specified job.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Jobs_GetJob(System.Nullable{System.Int32})">
            <summary>
            Gets the specified job.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Jobs_GetJobHistory(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Gets the specified jobs in the system.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Jobs_GetJobs(System.String,System.String)">
            <summary>
            Gets the specified jobs in the system.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Jobs_GetServersForExecution(System.Nullable{System.Int32})">
            <summary>
            Gets the servers that should execute for a Job, based on the job's associated servers, roles, and environments.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Jobs_UpdateRecurringJob(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Updates the specified recurring job.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.JobTemplates_CreateOrUpdateJobTemplate(System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Creates a new job template or updates an existing template configuration.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.JobTemplates_DeleteJobTemplate(System.Nullable{System.Int32})">
            <summary>
            Deletes a job template.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.JobTemplates_GetJobTemplates(System.Nullable{System.Int32},System.String)">
            <summary>
            Gets one or more job templates.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.LogMessages_AddMessage(System.String,System.Nullable{System.Int32},System.String,System.Byte[],System.Nullable{Inedo.Data.YNIndicator},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Stored procedure for internal use only.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.LogMessages_DeleteMessages(System.Nullable{System.Int32})">
            <summary>
            Deletes one or all message from the error log.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.LogMessages_GetCategories">
            <summary>
            Gets all of the distinct category names in the log messages table.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.LogMessages_GetMessage(System.Nullable{System.Int32})">
            <summary>
            Gets a specified message from the error log.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.LogMessages_GetMessages(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets the messages from the error log that match the specified criteria.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Rafts_CreateOrUpdateRaft(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Creates a new server Raft, or updates an existing one.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Rafts_DeleteRaft(System.Nullable{System.Int32})">
            <summary>
            Deletes the specified Raft.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Rafts_GetOrSetContent(System.Nullable{System.Int32},System.Byte[])">
            <summary>
            Depending on the Content_Bytes paramter, either sets or gets the bytes for a database raft.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Rafts_GetRaft(System.Nullable{System.Int32})">
            <summary>
            Gets the specified raft in the system.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Rafts_GetRafts">
            <summary>
            Gets all the Rafts in the system.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Schedules_CreateOrUpdateSchedule(System.String,System.String,System.Nullable{Inedo.Data.YNIndicator},System.Nullable{System.Int32})">
            <summary>
            Creates a new schedule, or updates an existing one.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Schedules_DeleteSchedule(System.Nullable{System.Int32})">
            <summary>
            Deletes the specified schedule and all jobs associated with it.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Schedules_GetSchedule(System.Nullable{System.Int32})">
            <summary>
            Gets the specified schedule.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Schedules_GetSchedules(System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Gets all schedules in the system.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Security_AddPrivilege(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Grants or denies the specified principal the ability to perform a certain role
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Security_CreateOrUpdateRole(System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Creates a new role defined by the specified tasks
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Security_DeleteRole(System.Nullable{System.Int32})">
            <summary>
            Deletes the specified role from the system
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Security_GetOrAddAnonymousRole(System.String,System.Nullable{System.Int32})">
            <summary>
            Gets an anonymous role containing the specified tasks, creating one if necessary.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Security_GetPrivileges(System.Nullable{System.Int32},System.String)">
            <summary>
            Gets a list of privileges assigned in the system
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Security_GetRole(System.Nullable{System.Int32})">
            <summary>
            Gets the specified role, along with all the tasks that comprise the role.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Security_GetRoles(System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Gets all the roles in the system, along with all the tasks comprising each role.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Security_GetTasks">
            <summary>
            Gets all of the tasks in the system.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Security_GetUserPrivileges(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Gets the list of privileges specifically assigned to a user or any specified groups
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Security_RemovePrivilege(System.Nullable{System.Int32})">
            <summary>
            Deletes a privilege from the system.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.ServerConfigurations_GetConfiguration(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Gets server configuration for the specified server configuration type and name.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.ServerRoles_CreateOrUpdateServerRole(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Creates or updates a server role.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.ServerRoles_DeleteServerRole(System.Nullable{System.Int32})">
            <summary>
            Deletes the specified server and its configurations.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.ServerRoles_GetServerRole(System.Nullable{System.Int32})">
            <summary>
            Gets the specified server role.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.ServerRoles_GetServerRoles">
            <summary>
            Gets all the servers roles in the system.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.ServerRoles_GetServerRolesEnvironments(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets all the server role and environment relations that match the specified criteria.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.ServerRoles_SearchServerRoles(System.Nullable{System.Int32},System.String)">
            <summary>
            Searches servers roles in the system.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Servers_CreateOrUpdateConfiguration(System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Creates a new server configuration, or updates an existing one.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Servers_CreateOrUpdateServer(System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{Inedo.Data.YNIndicator},System.Nullable{System.Int32})">
            <summary>
            Creates a new server, or updates an existing one. If the Roles or Environments are not passed in as a parameter, then they will not be changed; however, passing in an empty string will remove the server from the corresponding groups.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Servers_DeleteServer(System.Nullable{System.Int32})">
            <summary>
            Deletes the specified server and its configurations.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Servers_GetServer(System.Nullable{System.Int32})">
            <summary>
            Gets the specified server, with its associated configurations and environments.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Servers_GetServerByName(System.String)">
            <summary>
            Gets the specified server, with its associated configurations and environments.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Servers_GetServers(System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Gets all the servers in the system.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Servers_SearchServers(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets all the servers specified by the filter, as well as their associated environments and roles.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Servers_SetConfigurationStatus(System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Updates the status of a configuration item on a server.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Servers_SetUnknownConfiguration(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Updates all configuration on a server that wasn't set on a specified execution.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Servers_UpdateServerStatus(System.Nullable{System.Int32},System.String)">
            <summary>
            Updates a server's agent's status.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.UserDirectories_CreateOrUpdateDirectory(System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Creates a new user directory or updates an existing one.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.UserDirectories_GetDirectories">
            <summary>
            Gets all of the user directories.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Users_CreateOrUpdateGroup(System.String,System.String)">
            <summary>
            Creates a new user group in the system
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Users_CreateOrUpdateUser(System.String,System.String,System.String,System.String,System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Creates a new user in the system or updates an existing one.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Users_DeleteGroup(System.String)">
            <summary>
            Deletes a user group from the system, but does not delete the users who belong to the group
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Users_DeleteUser(System.String)">
            <summary>
            Deletes a user from the system
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Users_GetGroups">
            <summary>
            Gets a list of user groups in the system
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Users_GetUser(System.String)">
            <summary>
            Gets the details of the specified user, and a list of all the groups the user belongs to
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Users_GetUsers">
            <summary>
            Gets all the users in the system, along with all group membership information.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Users_GetUsersInGroup(System.String)">
            <summary>
            Gets a list of users in the specified group
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Users_SearchGroups(System.String,System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Gets a specific group by name, or if a wildcard search is performed, a group whose name starts with the specified name
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Users_SearchUsers(System.String,System.String,System.String,System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Gets the specified user, or searchs for a user whose name starts with any of the specified criteria
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Users_SetPassword(System.String,System.Byte[],System.Byte[],System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Stored procedure for internal use only.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Variables_CreateOrUpdateVariable(System.String,System.String,System.Byte[],System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Creates a new variable or sets an existing variable's value.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Variables_DeleteVariable(System.Nullable{System.Int32})">
            <summary>
            Deletes a variable.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Variables_GetVariable(System.Nullable{System.Int32})">
            <summary>
            Gets a variable from a specified id.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Variables_GetVariables(System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Gets all variables.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Variables_GetVariablesAccessibleFromScope(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Gets the variables that are defined in any of the specified scopes.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Variables_GetVariablesForScope(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets the variables that are defined only in the specified scope.
            </summary>
        </member>
        <member name="T:Inedo.Otter.Data.DB.Context">
            <summary>
            Provides a strongly typed context wrapper to allow for transactions and row enumeration.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Otter.Data.DB.Context"/> class.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Otter.Data.DB.Context"/> class.
            </summary>
            <param name="keepConnection">Value indicating whether to maintain an open connection between commands.</param>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.ApiKeys_CreateOrUpdateApiKey(System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Creates or updates the specified API key.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.ApiKeys_CreateOrUpdateApiKeyAsync(System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Creates or updates the specified API key.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.ApiKeys_DeleteApiKey(System.Nullable{System.Int32})">
            <summary>
            Deletes the specified API key.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.ApiKeys_DeleteApiKeyAsync(System.Nullable{System.Int32})">
            <summary>
            Deletes the specified API key.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.ApiKeys_GetAccessLog(System.Nullable{System.Int32})">
            <summary>
            Gets the details of a specific API access log.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.ApiKeys_GetAccessLogAsync(System.Nullable{System.Int32})">
            <summary>
            Gets the details of a specific API access log.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.ApiKeys_GetAccessLogs(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Logs a request made with an API key.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.ApiKeys_GetAccessLogsAsync(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Logs a request made with an API key.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.ApiKeys_GetApiKey(System.Nullable{System.Int32})">
            <summary>
            Gets the specified API key by ID.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.ApiKeys_GetApiKeyAsync(System.Nullable{System.Int32})">
            <summary>
            Gets the specified API key by ID.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.ApiKeys_GetApiKeyByName(System.String)">
            <summary>
            Gets the specified API key by the API key.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.ApiKeys_GetApiKeyByNameAsync(System.String)">
            <summary>
            Gets the specified API key by the API key.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.ApiKeys_GetApiKeys">
            <summary>
            Gets all API keys in the system.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.ApiKeys_GetApiKeysAsync">
            <summary>
            Gets all API keys in the system.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.ApiKeys_LogRequest(System.String,System.Nullable{System.DateTime},System.String,System.String,System.String,System.Nullable{System.Int32},System.Byte[],System.Byte[])">
            <summary>
            Logs a request made with an API key.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.ApiKeys_LogRequestAsync(System.String,System.Nullable{System.DateTime},System.String,System.String,System.String,System.Nullable{System.Int32},System.Byte[],System.Byte[])">
            <summary>
            Logs a request made with an API key.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Configuration_GetValues">
            <summary>
            Gets all of the Otter configuration values.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Configuration_GetValuesAsync">
            <summary>
            Gets all of the Otter configuration values.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Configuration_SetValue(System.String,System.String)">
            <summary>
            Sets an Otter configuration value.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Configuration_SetValueAsync(System.String,System.String)">
            <summary>
            Sets an Otter configuration value.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Credentials_CreateOrUpdateCredential(System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{Inedo.Data.YNIndicator},System.Nullable{System.Int32})">
            <summary>
            Creates a new credential or updates an existing one.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Credentials_CreateOrUpdateCredentialAsync(System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{Inedo.Data.YNIndicator},System.Nullable{System.Int32})">
            <summary>
            Creates a new credential or updates an existing one.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Credentials_DeleteCredential(System.Nullable{System.Int32})">
            <summary>
            Gets the specified credential.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Credentials_DeleteCredentialAsync(System.Nullable{System.Int32})">
            <summary>
            Gets the specified credential.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Credentials_GetCredential(System.Nullable{System.Int32})">
            <summary>
            Gets the specified credential.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Credentials_GetCredentialAsync(System.Nullable{System.Int32})">
            <summary>
            Gets the specified credential.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Credentials_GetCredentialByName(System.String,System.String)">
            <summary>
            Gets the specified credential by its qualified name.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Credentials_GetCredentialByNameAsync(System.String,System.String)">
            <summary>
            Gets the specified credential by its qualified name.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Credentials_GetCredentials">
            <summary>
            Gets all credentials in the system.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Credentials_GetCredentialsAsync">
            <summary>
            Gets all credentials in the system.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Environments_CreateOrUpdateEnvironment(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Creates a new environment, or updates an existing one.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Environments_CreateOrUpdateEnvironmentAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Creates a new environment, or updates an existing one.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Environments_DeleteEnvironment(System.Nullable{System.Int32})">
            <summary>
            Deletes the specified environment.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Environments_DeleteEnvironmentAsync(System.Nullable{System.Int32})">
            <summary>
            Deletes the specified environment.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Environments_GetEnvironment(System.Nullable{System.Int32})">
            <summary>
            Gets the specified environment and its servers.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Environments_GetEnvironmentAsync(System.Nullable{System.Int32})">
            <summary>
            Gets the specified environment and its servers.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Environments_GetEnvironments">
            <summary>
            Gets all the environments and their servers in the system.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Environments_GetEnvironmentsAsync">
            <summary>
            Gets all the environments and their servers in the system.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Environments_GetEnvironmentsForContext(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets the union of all environments that are associated with the specified criteria.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Environments_GetEnvironmentsForContextAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets the union of all environments that are associated with the specified criteria.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.EnvironmentServers_GetEnvironmentServers">
            <summary>
            Gets all the environment server links in the system.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.EnvironmentServers_GetEnvironmentServersAsync">
            <summary>
            Gets all the environment server links in the system.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Executions_AddLogEntry(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Byte[],System.Nullable{System.DateTime})">
            <summary>
            Creates a log entry.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Executions_AddLogEntryAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Byte[],System.Nullable{System.DateTime})">
            <summary>
            Creates a log entry.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Executions_CompleteExecution(System.Nullable{System.Int32},System.Nullable{System.DateTime},System.String,System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Completes an execution.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Executions_CompleteExecutionAsync(System.Nullable{System.Int32},System.Nullable{System.DateTime},System.String,System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Completes an execution.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Executions_CompleteLogScope(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime})">
            <summary>
            Completes a log scope.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Executions_CompleteLogScopeAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime})">
            <summary>
            Completes a log scope.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Executions_CreateLogScope(System.Nullable{System.Int32},System.Byte[],System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            Creates a log scope.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Executions_CreateLogScopeAsync(System.Nullable{System.Int32},System.Byte[],System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            Creates a log scope.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Executions_DeleteExecution(System.Nullable{System.Int32})">
            <summary>
            Deletes the specified execution and all of its logs.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Executions_DeleteExecutionAsync(System.Nullable{System.Int32})">
            <summary>
            Deletes the specified execution and all of its logs.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Executions_GetExecution(System.Nullable{System.Int32})">
            <summary>
            Gets the specified execution.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Executions_GetExecutionAsync(System.Nullable{System.Int32})">
            <summary>
            Gets the specified execution.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Executions_GetExecutionLogScopes(System.Nullable{System.Int32})">
            <summary>
            Gets all log scopes for the specified execution.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Executions_GetExecutionLogScopesAsync(System.Nullable{System.Int32})">
            <summary>
            Gets all log scopes for the specified execution.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Executions_GetExecutions(System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Gets all executions in the system.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Executions_GetExecutionsAsync(System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Gets all executions in the system.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Executions_GetLogEntries(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets execution log entries that match the specified criteria.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Executions_GetLogEntriesAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets execution log entries that match the specified criteria.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Executions_ServiceStartCleanup">
            <summary>
            Fault running jobs, complete any incomplete executions, and complete log scopes with no end date.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Executions_ServiceStartCleanupAsync">
            <summary>
            Fault running jobs, complete any incomplete executions, and complete log scopes with no end date.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Executions_StartExecution(System.Nullable{System.DateTime},System.String,System.Nullable{Inedo.Data.YNIndicator},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Starts an execution.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Executions_StartExecutionAsync(System.Nullable{System.DateTime},System.String,System.Nullable{Inedo.Data.YNIndicator},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Starts an execution.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Executions_UpdateJobState(System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime})">
            <summary>
            Updates the state of the specified job.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Executions_UpdateJobStateAsync(System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime})">
            <summary>
            Updates the state of the specified job.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Hosts_CreateOrUpdateHost(System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Creates a new server host, or updates an existing one.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Hosts_CreateOrUpdateHostAsync(System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Creates a new server host, or updates an existing one.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Hosts_DeleteHost(System.Nullable{System.Int32})">
            <summary>
            Deletes the specified host.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Hosts_DeleteHostAsync(System.Nullable{System.Int32})">
            <summary>
            Deletes the specified host.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Hosts_GetHost(System.Nullable{System.Int32})">
            <summary>
            Gets the specified server hosts in the system.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Hosts_GetHostAsync(System.Nullable{System.Int32})">
            <summary>
            Gets the specified server hosts in the system.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Hosts_GetHosts">
            <summary>
            Gets all the server hosts in the system.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Hosts_GetHostsAsync">
            <summary>
            Gets all the server hosts in the system.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Infrastructure_GetInfrastructure">
            <summary>
            Gets all of the infrastructure; this includes servers, environments, and roles.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Infrastructure_GetInfrastructureAsync">
            <summary>
            Gets all of the infrastructure; this includes servers, environments, and roles.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Jobs_CreateJob(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{Inedo.Data.YNIndicator},System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Creates a new job.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Jobs_CreateJobAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{Inedo.Data.YNIndicator},System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Creates a new job.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Jobs_DeleteJob(System.Nullable{System.Int32})">
            <summary>
            Deletes the specified job.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Jobs_DeleteJobAsync(System.Nullable{System.Int32})">
            <summary>
            Deletes the specified job.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Jobs_GetJob(System.Nullable{System.Int32})">
            <summary>
            Gets the specified job.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Jobs_GetJobAsync(System.Nullable{System.Int32})">
            <summary>
            Gets the specified job.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Jobs_GetJobHistory(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Gets the specified jobs in the system.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Jobs_GetJobHistoryAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Gets the specified jobs in the system.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Jobs_GetJobs(System.String,System.String)">
            <summary>
            Gets the specified jobs in the system.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Jobs_GetJobsAsync(System.String,System.String)">
            <summary>
            Gets the specified jobs in the system.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Jobs_GetServersForExecution(System.Nullable{System.Int32})">
            <summary>
            Gets the servers that should execute for a Job, based on the job's associated servers, roles, and environments.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Jobs_GetServersForExecutionAsync(System.Nullable{System.Int32})">
            <summary>
            Gets the servers that should execute for a Job, based on the job's associated servers, roles, and environments.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Jobs_UpdateRecurringJob(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Updates the specified recurring job.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Jobs_UpdateRecurringJobAsync(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Updates the specified recurring job.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.JobTemplates_CreateOrUpdateJobTemplate(System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Creates a new job template or updates an existing template configuration.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.JobTemplates_CreateOrUpdateJobTemplateAsync(System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Creates a new job template or updates an existing template configuration.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.JobTemplates_DeleteJobTemplate(System.Nullable{System.Int32})">
            <summary>
            Deletes a job template.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.JobTemplates_DeleteJobTemplateAsync(System.Nullable{System.Int32})">
            <summary>
            Deletes a job template.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.JobTemplates_GetJobTemplates(System.Nullable{System.Int32},System.String)">
            <summary>
            Gets one or more job templates.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.JobTemplates_GetJobTemplatesAsync(System.Nullable{System.Int32},System.String)">
            <summary>
            Gets one or more job templates.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.LogMessages_AddMessage(System.String,System.Nullable{System.Int32},System.String,System.Byte[],System.Nullable{Inedo.Data.YNIndicator},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Stored procedure for internal use only.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.LogMessages_AddMessageAsync(System.String,System.Nullable{System.Int32},System.String,System.Byte[],System.Nullable{Inedo.Data.YNIndicator},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Stored procedure for internal use only.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.LogMessages_DeleteMessages(System.Nullable{System.Int32})">
            <summary>
            Deletes one or all message from the error log.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.LogMessages_DeleteMessagesAsync(System.Nullable{System.Int32})">
            <summary>
            Deletes one or all message from the error log.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.LogMessages_GetCategories">
            <summary>
            Gets all of the distinct category names in the log messages table.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.LogMessages_GetCategoriesAsync">
            <summary>
            Gets all of the distinct category names in the log messages table.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.LogMessages_GetMessage(System.Nullable{System.Int32})">
            <summary>
            Gets a specified message from the error log.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.LogMessages_GetMessageAsync(System.Nullable{System.Int32})">
            <summary>
            Gets a specified message from the error log.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.LogMessages_GetMessages(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets the messages from the error log that match the specified criteria.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.LogMessages_GetMessagesAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets the messages from the error log that match the specified criteria.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Rafts_CreateOrUpdateRaft(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Creates a new server Raft, or updates an existing one.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Rafts_CreateOrUpdateRaftAsync(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Creates a new server Raft, or updates an existing one.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Rafts_DeleteRaft(System.Nullable{System.Int32})">
            <summary>
            Deletes the specified Raft.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Rafts_DeleteRaftAsync(System.Nullable{System.Int32})">
            <summary>
            Deletes the specified Raft.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Rafts_GetOrSetContent(System.Nullable{System.Int32},System.Byte[])">
            <summary>
            Depending on the Content_Bytes paramter, either sets or gets the bytes for a database raft.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Rafts_GetOrSetContentAsync(System.Nullable{System.Int32},System.Byte[])">
            <summary>
            Depending on the Content_Bytes paramter, either sets or gets the bytes for a database raft.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Rafts_GetRaft(System.Nullable{System.Int32})">
            <summary>
            Gets the specified raft in the system.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Rafts_GetRaftAsync(System.Nullable{System.Int32})">
            <summary>
            Gets the specified raft in the system.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Rafts_GetRafts">
            <summary>
            Gets all the Rafts in the system.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Rafts_GetRaftsAsync">
            <summary>
            Gets all the Rafts in the system.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Schedules_CreateOrUpdateSchedule(System.String,System.String,System.Nullable{Inedo.Data.YNIndicator},System.Nullable{System.Int32})">
            <summary>
            Creates a new schedule, or updates an existing one.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Schedules_CreateOrUpdateScheduleAsync(System.String,System.String,System.Nullable{Inedo.Data.YNIndicator},System.Nullable{System.Int32})">
            <summary>
            Creates a new schedule, or updates an existing one.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Schedules_DeleteSchedule(System.Nullable{System.Int32})">
            <summary>
            Deletes the specified schedule and all jobs associated with it.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Schedules_DeleteScheduleAsync(System.Nullable{System.Int32})">
            <summary>
            Deletes the specified schedule and all jobs associated with it.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Schedules_GetSchedule(System.Nullable{System.Int32})">
            <summary>
            Gets the specified schedule.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Schedules_GetScheduleAsync(System.Nullable{System.Int32})">
            <summary>
            Gets the specified schedule.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Schedules_GetSchedules(System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Gets all schedules in the system.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Schedules_GetSchedulesAsync(System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Gets all schedules in the system.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Security_AddPrivilege(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Grants or denies the specified principal the ability to perform a certain role
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Security_AddPrivilegeAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Grants or denies the specified principal the ability to perform a certain role
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Security_CreateOrUpdateRole(System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Creates a new role defined by the specified tasks
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Security_CreateOrUpdateRoleAsync(System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Creates a new role defined by the specified tasks
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Security_DeleteRole(System.Nullable{System.Int32})">
            <summary>
            Deletes the specified role from the system
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Security_DeleteRoleAsync(System.Nullable{System.Int32})">
            <summary>
            Deletes the specified role from the system
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Security_GetOrAddAnonymousRole(System.String,System.Nullable{System.Int32})">
            <summary>
            Gets an anonymous role containing the specified tasks, creating one if necessary.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Security_GetOrAddAnonymousRoleAsync(System.String,System.Nullable{System.Int32})">
            <summary>
            Gets an anonymous role containing the specified tasks, creating one if necessary.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Security_GetPrivileges(System.Nullable{System.Int32},System.String)">
            <summary>
            Gets a list of privileges assigned in the system
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Security_GetPrivilegesAsync(System.Nullable{System.Int32},System.String)">
            <summary>
            Gets a list of privileges assigned in the system
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Security_GetRole(System.Nullable{System.Int32})">
            <summary>
            Gets the specified role, along with all the tasks that comprise the role.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Security_GetRoleAsync(System.Nullable{System.Int32})">
            <summary>
            Gets the specified role, along with all the tasks that comprise the role.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Security_GetRoles(System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Gets all the roles in the system, along with all the tasks comprising each role.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Security_GetRolesAsync(System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Gets all the roles in the system, along with all the tasks comprising each role.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Security_GetTasks">
            <summary>
            Gets all of the tasks in the system.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Security_GetTasksAsync">
            <summary>
            Gets all of the tasks in the system.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Security_GetUserPrivileges(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Gets the list of privileges specifically assigned to a user or any specified groups
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Security_GetUserPrivilegesAsync(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Gets the list of privileges specifically assigned to a user or any specified groups
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Security_RemovePrivilege(System.Nullable{System.Int32})">
            <summary>
            Deletes a privilege from the system.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Security_RemovePrivilegeAsync(System.Nullable{System.Int32})">
            <summary>
            Deletes a privilege from the system.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.ServerConfigurations_GetConfiguration(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Gets server configuration for the specified server configuration type and name.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.ServerConfigurations_GetConfigurationAsync(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Gets server configuration for the specified server configuration type and name.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.ServerRoles_CreateOrUpdateServerRole(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Creates or updates a server role.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.ServerRoles_CreateOrUpdateServerRoleAsync(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Creates or updates a server role.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.ServerRoles_DeleteServerRole(System.Nullable{System.Int32})">
            <summary>
            Deletes the specified server and its configurations.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.ServerRoles_DeleteServerRoleAsync(System.Nullable{System.Int32})">
            <summary>
            Deletes the specified server and its configurations.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.ServerRoles_GetServerRole(System.Nullable{System.Int32})">
            <summary>
            Gets the specified server role.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.ServerRoles_GetServerRoleAsync(System.Nullable{System.Int32})">
            <summary>
            Gets the specified server role.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.ServerRoles_GetServerRoles">
            <summary>
            Gets all the servers roles in the system.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.ServerRoles_GetServerRolesAsync">
            <summary>
            Gets all the servers roles in the system.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.ServerRoles_GetServerRolesEnvironments(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets all the server role and environment relations that match the specified criteria.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.ServerRoles_GetServerRolesEnvironmentsAsync(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets all the server role and environment relations that match the specified criteria.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.ServerRoles_SearchServerRoles(System.Nullable{System.Int32},System.String)">
            <summary>
            Searches servers roles in the system.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.ServerRoles_SearchServerRolesAsync(System.Nullable{System.Int32},System.String)">
            <summary>
            Searches servers roles in the system.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Servers_CreateOrUpdateConfiguration(System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Creates a new server configuration, or updates an existing one.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Servers_CreateOrUpdateConfigurationAsync(System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Creates a new server configuration, or updates an existing one.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Servers_CreateOrUpdateServer(System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{Inedo.Data.YNIndicator},System.Nullable{System.Int32})">
            <summary>
            Creates a new server, or updates an existing one. If the Roles or Environments are not passed in as a parameter, then they will not be changed; however, passing in an empty string will remove the server from the corresponding groups.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Servers_CreateOrUpdateServerAsync(System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{Inedo.Data.YNIndicator},System.Nullable{System.Int32})">
            <summary>
            Creates a new server, or updates an existing one. If the Roles or Environments are not passed in as a parameter, then they will not be changed; however, passing in an empty string will remove the server from the corresponding groups.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Servers_DeleteServer(System.Nullable{System.Int32})">
            <summary>
            Deletes the specified server and its configurations.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Servers_DeleteServerAsync(System.Nullable{System.Int32})">
            <summary>
            Deletes the specified server and its configurations.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Servers_GetServer(System.Nullable{System.Int32})">
            <summary>
            Gets the specified server, with its associated configurations and environments.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Servers_GetServerAsync(System.Nullable{System.Int32})">
            <summary>
            Gets the specified server, with its associated configurations and environments.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Servers_GetServerByName(System.String)">
            <summary>
            Gets the specified server, with its associated configurations and environments.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Servers_GetServerByNameAsync(System.String)">
            <summary>
            Gets the specified server, with its associated configurations and environments.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Servers_GetServers(System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Gets all the servers in the system.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Servers_GetServersAsync(System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Gets all the servers in the system.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Servers_SearchServers(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets all the servers specified by the filter, as well as their associated environments and roles.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Servers_SearchServersAsync(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets all the servers specified by the filter, as well as their associated environments and roles.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Servers_SetConfigurationStatus(System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Updates the status of a configuration item on a server.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Servers_SetConfigurationStatusAsync(System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Updates the status of a configuration item on a server.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Servers_SetUnknownConfiguration(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Updates all configuration on a server that wasn't set on a specified execution.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Servers_SetUnknownConfigurationAsync(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Updates all configuration on a server that wasn't set on a specified execution.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Servers_UpdateServerStatus(System.Nullable{System.Int32},System.String)">
            <summary>
            Updates a server's agent's status.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Servers_UpdateServerStatusAsync(System.Nullable{System.Int32},System.String)">
            <summary>
            Updates a server's agent's status.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.UserDirectories_CreateOrUpdateDirectory(System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Creates a new user directory or updates an existing one.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.UserDirectories_CreateOrUpdateDirectoryAsync(System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Creates a new user directory or updates an existing one.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.UserDirectories_GetDirectories">
            <summary>
            Gets all of the user directories.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.UserDirectories_GetDirectoriesAsync">
            <summary>
            Gets all of the user directories.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Users_CreateOrUpdateGroup(System.String,System.String)">
            <summary>
            Creates a new user group in the system
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Users_CreateOrUpdateGroupAsync(System.String,System.String)">
            <summary>
            Creates a new user group in the system
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Users_CreateOrUpdateUser(System.String,System.String,System.String,System.String,System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Creates a new user in the system or updates an existing one.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Users_CreateOrUpdateUserAsync(System.String,System.String,System.String,System.String,System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Creates a new user in the system or updates an existing one.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Users_DeleteGroup(System.String)">
            <summary>
            Deletes a user group from the system, but does not delete the users who belong to the group
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Users_DeleteGroupAsync(System.String)">
            <summary>
            Deletes a user group from the system, but does not delete the users who belong to the group
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Users_DeleteUser(System.String)">
            <summary>
            Deletes a user from the system
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Users_DeleteUserAsync(System.String)">
            <summary>
            Deletes a user from the system
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Users_GetGroups">
            <summary>
            Gets a list of user groups in the system
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Users_GetGroupsAsync">
            <summary>
            Gets a list of user groups in the system
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Users_GetUser(System.String)">
            <summary>
            Gets the details of the specified user, and a list of all the groups the user belongs to
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Users_GetUserAsync(System.String)">
            <summary>
            Gets the details of the specified user, and a list of all the groups the user belongs to
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Users_GetUsers">
            <summary>
            Gets all the users in the system, along with all group membership information.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Users_GetUsersAsync">
            <summary>
            Gets all the users in the system, along with all group membership information.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Users_GetUsersInGroup(System.String)">
            <summary>
            Gets a list of users in the specified group
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Users_GetUsersInGroupAsync(System.String)">
            <summary>
            Gets a list of users in the specified group
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Users_SearchGroups(System.String,System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Gets a specific group by name, or if a wildcard search is performed, a group whose name starts with the specified name
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Users_SearchGroupsAsync(System.String,System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Gets a specific group by name, or if a wildcard search is performed, a group whose name starts with the specified name
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Users_SearchUsers(System.String,System.String,System.String,System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Gets the specified user, or searchs for a user whose name starts with any of the specified criteria
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Users_SearchUsersAsync(System.String,System.String,System.String,System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Gets the specified user, or searchs for a user whose name starts with any of the specified criteria
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Users_SetPassword(System.String,System.Byte[],System.Byte[],System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Stored procedure for internal use only.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Users_SetPasswordAsync(System.String,System.Byte[],System.Byte[],System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Stored procedure for internal use only.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Variables_CreateOrUpdateVariable(System.String,System.String,System.Byte[],System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Creates a new variable or sets an existing variable's value.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Variables_CreateOrUpdateVariableAsync(System.String,System.String,System.Byte[],System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Creates a new variable or sets an existing variable's value.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Variables_DeleteVariable(System.Nullable{System.Int32})">
            <summary>
            Deletes a variable.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Variables_DeleteVariableAsync(System.Nullable{System.Int32})">
            <summary>
            Deletes a variable.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Variables_GetVariable(System.Nullable{System.Int32})">
            <summary>
            Gets a variable from a specified id.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Variables_GetVariableAsync(System.Nullable{System.Int32})">
            <summary>
            Gets a variable from a specified id.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Variables_GetVariables(System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Gets all variables.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Variables_GetVariablesAsync(System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Gets all variables.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Variables_GetVariablesAccessibleFromScope(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Gets the variables that are defined in any of the specified scopes.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Variables_GetVariablesAccessibleFromScopeAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{Inedo.Data.YNIndicator})">
            <summary>
            Gets the variables that are defined in any of the specified scopes.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Variables_GetVariablesForScope(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets the variables that are defined only in the specified scope.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Data.DB.Context.Variables_GetVariablesForScopeAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets the variables that are defined only in the specified scope.
            </summary>
        </member>
        <member name="T:Inedo.Otter.Data.Domains">
            <summary>
            Descriptions of character codes used primarily in the database.
            </summary>
        </member>
        <member name="T:Inedo.Otter.Data.Domains.ExecutionRunState">
            <summary>
            Represents the running state of an execution.
            </summary>
        </member>
        <member name="T:Inedo.Otter.Data.Domains.ExecutionStatus">
            <summary>
            Represents the status of an execution; that is, whether it's currently successful or not.
            </summary>
        </member>
        <member name="T:Inedo.Otter.Data.Domains.ExecutionMode">
            <summary>
            Represents the mode of execution, and what phases will be performed.
            </summary>
        </member>
        <member name="T:Inedo.Otter.Data.Domains.ServerRoutineExecutionType">
            <summary>
            Represents the type of routine executions; ths is refered to as "drift remediation" in the UI.
            </summary>
        </member>
        <member name="F:Inedo.Otter.Data.Domains.ServerRoutineExecutionType.CollectOnly">
            <summary>
            Report Only
            </summary>
        </member>
        <member name="F:Inedo.Otter.Data.Domains.ServerRoutineExecutionType.CollectAndExecute">
            <summary>
            Automatically Remediate
            </summary>
        </member>
        <member name="F:Inedo.Otter.Data.Domains.ServerRoutineExecutionType.None">
            <summary>
            Do not Collect
            </summary>
        </member>
        <member name="T:Inedo.Otter.Data.Domains.ServerStatusCode">
            <summary>
            The status of a server.
            </summary>
        </member>
        <member name="T:Inedo.Otter.Data.Domains.VariableValueType">
            <summary>
            The type of a external variable.
            </summary>
        </member>
        <member name="T:Inedo.Otter.Data.Domains.ServerConfigurationStatus">
            <summary>
            Actual server configuration status, returned by the database.
            </summary>
        </member>
        <member name="T:Inedo.Otter.Data.Domains.ServerConflatedStatus">
            <summary>
            Displayed server configuration status, conflated in the UI.
            </summary>
        </member>
        <member name="T:Inedo.Otter.Data.Domains.JobTypeCode">
            <summary>
            Job type.
            </summary>
        </member>
        <member name="T:Inedo.Otter.Data.Domains.JobTargetCode">
            <summary>
            How a job targets servers.
            </summary>
        </member>
        <member name="T:Inedo.Otter.Data.Domains.JobStateCode">
            <summary>
            The state of a job.
            </summary>
        </member>
        <member name="T:Inedo.Otter.Diagnostics.DatabaseMessenger">
            <summary>
            Implementation of <see cref="T:Inedo.Diagnostics.IMessenger"/> that writes to the Otter log messages table.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Diagnostics.DatabaseMessenger.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Otter.Diagnostics.DatabaseMessenger"/> class.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Diagnostics.DatabaseMessenger.#ctor(Inedo.Diagnostics.MessageLevel)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Otter.Diagnostics.DatabaseMessenger"/> class.
            </summary>
            <param name="minimumLevelToLog">The minimum level to log.</param>
        </member>
        <member name="P:Inedo.Otter.Diagnostics.DatabaseMessenger.MinimumLevelToLog">
            <summary>
            Gets the minimum level to log.
            </summary>
        </member>
        <member name="T:Inedo.Otter.Diagnostics.IOtterLogContext">
            <summary>
            Represents context information for Otter log messages.
            </summary>
        </member>
        <member name="P:Inedo.Otter.Diagnostics.IOtterLogContext.ShowHeaderNotification">
            <summary>
            Gets a value indicating whether a message should appear in the application header.
            </summary>
        </member>
        <member name="T:Inedo.Otter.Extensibility.Agents.OtterAgent">
            <summary>
            The base class for all agents.
            </summary>
            <remarks>
            An agent brokers communication between Otter and servers.
            </remarks>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Agents.OtterAgent.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Otter.Extensibility.Agents.OtterAgent"/> class.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Agents.OtterAgent.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Otter.Extensibility.Agents.OtterAgent"/> class.
            </summary>
            <param name="simulated">Value indicating whether to use simulation mode.</param>
        </member>
        <member name="P:Inedo.Otter.Extensibility.Agents.OtterAgent.Simulated">
            <summary>
            Gets a value indicating whether the agent is running in simulated mode.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Agents.OtterAgent.GetDescription">
            <summary>
            Returns a description of the agent and its current configuration.
            </summary>
            <returns>Description of the agent and its current configuration.</returns>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Agents.OtterAgent.TryGetService``1">
            <summary>
            Returns the requested agent service interface if it is supported; otherwise returns null.
            </summary>
            <typeparam name="TService">Type of the requested interface.</typeparam>
            <returns>Requested agent service if it is supported; otherwise null.</returns>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Agents.OtterAgent.TryGetServiceAsync``1">
            <summary>
            Returns the requested agent service interface if it is supported; otherwise returns null.
            </summary>
            <typeparam name="TService">Type of the requested interface.</typeparam>
            <returns>Requested agent service if it is supported; otherwise null.</returns>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Agents.OtterAgent.GetService``1">
            <summary>
            Returns the requested agent service or throws an exception if it is not available.
            </summary>
            <typeparam name="TService">Type of the requested interface.</typeparam>
            <returns>Requested agent service.</returns>
            <exception cref="T:System.NotSupportedException">The requested interface is not supported.</exception>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Agents.OtterAgent.GetServiceAsync``1">
            <summary>
            Returns the requested agent service or throws an exception if it is not available.
            </summary>
            <typeparam name="TService">Type of the requested interface.</typeparam>
            <returns>Requested agent service.</returns>
            <exception cref="T:System.NotSupportedException">The requested interface is not supported.</exception>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Agents.OtterAgent.Dispose">
            <summary>
            Releases resources used by the agent and closes open connections.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Agents.OtterAgent.GetAgent(System.Int32)">
            <summary>
            Returns the agent with the specified server ID.
            </summary>
            <param name="serverId">The server ID.</param>
            <returns>Agent for the specified server ID.</returns>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Agents.OtterAgent.GetAgent(System.Int32,System.Boolean)">
            <summary>
            Returns the agent with the specified server ID.
            </summary>
            <param name="serverId">The server ID.</param>
            <param name="simulated">Value indicating whether to enable simulation mode.</param>
            <returns>Agent for the specified server ID.</returns>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Agents.OtterAgent.GetAgent(System.String,System.Boolean)">
            <summary>
            Returns the agent with the specified server name.
            </summary>
            <param name="serverName">The name of the server.</param>
            <param name="simulated">Value indicating whether to enable simulation mode.</param>
            <returns>Agent for the specified server name.</returns>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Agents.OtterAgent.Dispose(System.Boolean)">
            <summary>
            Releases resources used by the agent.
            </summary>
            <param name="disposing">Value indicating whether to dispose of managed resources.</param>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Agents.OtterAgent.GetAgentServiceInternal``1">
            <summary>
            Returns an instance of the requested agent service if it is supported;
            otherwise returns null.
            </summary>
            <typeparam name="TService">The type of the service.</typeparam>
            <returns>Instance of the requested service if supported; otherwise null.</returns>
        </member>
        <member name="T:Inedo.Otter.Extensibility.Configurations.ComparisonResult">
            <summary>
            The result of comparing two <see cref="T:Inedo.Otter.Extensibility.Configurations.PersistedConfiguration"/> instances.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Configurations.ComparisonResult.#ctor(System.Collections.Generic.IEnumerable{Inedo.Otter.Extensibility.Configurations.Difference})">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Otter.Extensibility.Configurations.ComparisonResult"/> class.
            </summary>
        </member>
        <member name="P:Inedo.Otter.Extensibility.Configurations.ComparisonResult.AreEqual">
            <summary>
            Gets a value indicating whether the configurations are equal.
            </summary>
        </member>
        <member name="P:Inedo.Otter.Extensibility.Configurations.ComparisonResult.Differences">
            <summary>
            Gets the differences.
            </summary>
        </member>
        <member name="P:Inedo.Otter.Extensibility.Configurations.ComparisonResult.Identical">
            <summary>
            Represents an identical set of configuration
            </summary>
        </member>
        <member name="T:Inedo.Otter.Extensibility.Configurations.ConfigurationKeyAttribute">
            <summary>
            Marks a persistent property on a <see cref="T:Inedo.Otter.Extensibility.Configurations.PersistedConfiguration"/> whose string value 
            will uniquely identify a configuration item of the same type on the same server.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Configurations.ConfigurationKeyAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Otter.Extensibility.Configurations.ConfigurationKeyAttribute"/> class.
            </summary>
        </member>
        <member name="T:Inedo.Otter.Extensibility.Configurations.ConfigurationPersistenceContext">
            <summary>
            Represents the context for persisting a configuration.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Configurations.ConfigurationPersistenceContext.#ctor(Inedo.Otter.Data.DB.Context,System.Nullable{System.Int32},System.Int32,System.Nullable{System.Int32},Inedo.Diagnostics.ILogger)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Otter.Extensibility.Configurations.ConfigurationPersistenceContext"/> class.
            </summary>
            <param name="dbContext">The current <see cref="T:Inedo.Otter.Data.DB.Context"/>.</param>
            <param name="serverId">The current server ID.</param>
            <param name="executionId">The current execution ID.</param>
            <param name="serverRoleId">The current server role ID.</param>
            <param name="logger">The current logger.</param>
        </member>
        <member name="P:Inedo.Otter.Extensibility.Configurations.ConfigurationPersistenceContext.DbContext">
            <summary>
            Gets the current <see cref="T:Inedo.Otter.Data.DB.Context"/>.
            </summary>
        </member>
        <member name="P:Inedo.Otter.Extensibility.Configurations.ConfigurationPersistenceContext.ServerId">
            <summary>
            Gets the current server ID.
            </summary>
        </member>
        <member name="P:Inedo.Otter.Extensibility.Configurations.ConfigurationPersistenceContext.ExecutionId">
            <summary>
            Gets the current execution ID.
            </summary>
        </member>
        <member name="P:Inedo.Otter.Extensibility.Configurations.ConfigurationPersistenceContext.ServerRoleId">
            <summary>
            Gets the current server role ID.
            </summary>
        </member>
        <member name="P:Inedo.Otter.Extensibility.Configurations.ConfigurationPersistenceContext.Logger">
            <summary>
            Gets the current logger.
            </summary>
        </member>
        <member name="T:Inedo.Otter.Extensibility.Configurations.Difference">
            <summary>
            Represents a difference between two configuration values.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Configurations.Difference.#ctor(System.String,System.Object,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Otter.Extensibility.Configurations.Difference"/> class.
            </summary>
            <param name="name">The name of the value being compared.</param>
            <param name="templateValue">The desired value.</param>
            <param name="objectValue">The action value.</param>
        </member>
        <member name="P:Inedo.Otter.Extensibility.Configurations.Difference.Name">
            <summary>
            Gets the name.
            </summary>
        </member>
        <member name="P:Inedo.Otter.Extensibility.Configurations.Difference.TemplateValue">
            <summary>
            Gets the template value.
            </summary>
        </member>
        <member name="P:Inedo.Otter.Extensibility.Configurations.Difference.ActualValue">
            <summary>
            Gets the actual value.
            </summary>
        </member>
        <member name="T:Inedo.Otter.Extensibility.Configurations.IExistential">
            <summary>
            A <see cref="T:Inedo.Otter.Extensibility.Configurations.PersistedConfiguration"/> that can either exist or not exist on a server.
            </summary>
            <remarks>
            When a configuration is considered to not exist on a server, only properties marked with <see cref="T:Inedo.Otter.Extensibility.Configurations.ConfigurationKeyAttribute"/>
            will be used to make this determination; all other properties should be disregarded.
            </remarks>
        </member>
        <member name="P:Inedo.Otter.Extensibility.Configurations.IExistential.Exists">
            <summary>
            Gets a value indicating whether the configuration exists.
            </summary>
        </member>
        <member name="T:Inedo.Otter.Extensibility.Configurations.IgnoreConfigurationDriftAttribute">
            <summary>
            Indicates to the default drift comparison algorithm that a specified property of a
            <see cref="T:Inedo.Otter.Extensibility.Configurations.PersistedConfiguration"/> should be ignored when determining configuration drift.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Configurations.IgnoreConfigurationDriftAttribute.#ctor">
            <summary>
            Initializes an new instance of the <see cref="T:Inedo.Otter.Extensibility.Configurations.IgnoreConfigurationDriftAttribute"/> class.
            </summary>
        </member>
        <member name="T:Inedo.Otter.Extensibility.Configurations.PersistedConfiguration">
            <summary>
            Represents configuration information that can be discovered on a server and/or persisted in the database.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Configurations.PersistedConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Otter.Extensibility.Configurations.PersistedConfiguration"/> class.
            </summary>
        </member>
        <member name="P:Inedo.Otter.Extensibility.Configurations.PersistedConfiguration.ConfigurationTypeName">
            <summary>
            Gets the name of the configuration type.
            </summary>
        </member>
        <member name="P:Inedo.Otter.Extensibility.Configurations.PersistedConfiguration.ConfigurationKey">
            <summary>
            Get the unique key for the configuration.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Configurations.PersistedConfiguration.GetProperties">
            <summary>
            Gets a dictionary of properties for this configuration.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Configurations.PersistedConfiguration.Compare(Inedo.Otter.Extensibility.Configurations.PersistedConfiguration)">
            <summary>
            Compares this configuration with a configuration of the same type.
            </summary>
            <param name="other">The other configuration.</param>
            <returns>
            A comparison result
            </returns>
            <exception cref="T:System.ArgumentNullException">other</exception>
            <exception cref="T:System.InvalidOperationException">Cannot compare configurations of different types</exception>
            <remarks>
            This compares the persistent properties of the this and the other configuration
            </remarks>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Configurations.PersistedConfiguration.Persist(Inedo.Otter.Extensibility.Configurations.ConfigurationPersistenceContext)">
            <summary>
            Persists this configuration information in the database given the specified context.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Configurations.PersistedConfiguration.Describe(Inedo.Otter.Data.Tables.ServerConfigurations_Extended)">
            <summary>
            Returns a formatted rich description for the configuration.
            </summary>
            <param name="data">The configuration data.</param>
            <returns>Formatted rich description.</returns>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Configurations.PersistedConfiguration.DeepCopy">
            <summary>
            Returns a deep copy of the current instance.
            </summary>
            <returns>Deep copy of the current instance.</returns>
        </member>
        <member name="T:Inedo.Otter.Extensibility.ConfigurationTestResult">
            <summary>
            Contains information about testing a configuration.
            </summary>
        </member>
        <member name="F:Inedo.Otter.Extensibility.ConfigurationTestResult.Success">
            <summary>
            Gets a test result indicating success.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensibility.ConfigurationTestResult.Failure(System.String)">
            <summary>
            Returns a <see cref="T:Inedo.Otter.Extensibility.ConfigurationTestResult"/> instance with the specified error message.
            </summary>
            <param name="errorMessage">The error message.</param>
            <returns><see cref="T:Inedo.Otter.Extensibility.ConfigurationTestResult"/> instance with the specified error message.</returns>
        </member>
        <member name="M:Inedo.Otter.Extensibility.ConfigurationTestResult.Failure(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Returns a <see cref="T:Inedo.Otter.Extensibility.ConfigurationTestResult"/> instance with the specified error messages.
            </summary>
            <param name="errorMessages">The error messages.</param>
            <returns><see cref="T:Inedo.Otter.Extensibility.ConfigurationTestResult"/> instance with the specified error messages.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="errorMessages"/> is null.</exception>
        </member>
        <member name="M:Inedo.Otter.Extensibility.ConfigurationTestResult.Failure(System.String[])">
            <summary>
            Returns a <see cref="T:Inedo.Otter.Extensibility.ConfigurationTestResult"/> instance with the specified error messages.
            </summary>
            <param name="errorMessages">The error messages.</param>
            <returns><see cref="T:Inedo.Otter.Extensibility.ConfigurationTestResult"/> instance with the specified error messages.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="errorMessages"/> is null.</exception>
        </member>
        <member name="M:Inedo.Otter.Extensibility.ConfigurationTestResult.ToString">
            <summary>
            Returns a newline separated list of the error messages.
            </summary>
            <returns>Newline separated list of the error messages.</returns>
        </member>
        <member name="T:Inedo.Otter.Extensibility.Credentials.CredentialExtensions">
            <summary>
            Extension methods for credentials.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Credentials.CredentialExtensions.Deserialize(Inedo.Otter.Data.Tables.Credentials_Extended)">
            <summary>
            Deserializes the resource credential data. This is only needed for credentials created in Otter 1.0.
            </summary>
            <param name="credentials">The credentials.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="credentials"/> is null.</exception>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Credentials.CredentialExtensions.TryGetCredentials``1(Inedo.Otter.Extensibility.Credentials.IHasCredentials{``0})">
            <summary>
            Gets the credentials assigned to an <see cref="T:Inedo.Otter.Extensibility.Credentials.IHasCredentials`1"/> operation.
            </summary>
            <typeparam name="TCredential">The type of the credential.</typeparam>
            <param name="obj">The object that has the credentials.</param>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Credentials.CredentialExtensions.TryGetCredentials(Inedo.Otter.Extensibility.Credentials.IHasCredentials)">
            <summary>
            Gets the credentials assigned to an <see cref="T:Inedo.Otter.Extensibility.Credentials.IHasCredentials"/> operation.
            </summary>
            <param name="obj">The object that has the credentials.</param>
        </member>
        <member name="T:Inedo.Otter.Extensibility.Credentials.CredentialName">
            <summary>
            Represents the name of a credential in a plan.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Credentials.CredentialName.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Otter.Extensibility.Credentials.CredentialName"/> class.
            </summary>
            <param name="typeName">Name of the type.</param>
            <param name="name">The name.</param>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Credentials.CredentialName.TryParse(System.String)">
            <summary>
            Parses a string into a credential name, or null if the name is an invalid credential name;
            </summary>
            <param name="s">The s.</param>
        </member>
        <member name="P:Inedo.Otter.Extensibility.Credentials.CredentialName.TypeName">
            <summary>
            Gets the type name of the credential.
            </summary>
            <remarks>This value is the same as the <see cref="T:System.ComponentModel.DisplayNameAttribute"/> on the
            <see cref="T:Inedo.Otter.Extensibility.Credentials.ResourceCredentials"/> subclass implementation.
            </remarks>
        </member>
        <member name="P:Inedo.Otter.Extensibility.Credentials.CredentialName.Name">
            <summary>
            Gets the name of the credential.
            </summary>
        </member>
        <member name="P:Inedo.Otter.Extensibility.Credentials.CredentialName.FullName">
            <summary>
            Gets the fully-qualified credential name.
            </summary>
        </member>
        <member name="T:Inedo.Otter.Extensibility.Credentials.IHasCredentials`1">
            <summary>
            Indicates that an operation uses a <see cref="T:Inedo.Otter.Extensibility.Credentials.ResourceCredentials"/> of the
            type <typeparamref name="TCredentials"/>
            </summary>
            <typeparam name="TCredentials">The type of the credentials.</typeparam>
        </member>
        <member name="T:Inedo.Otter.Extensibility.Credentials.IHasCredentials">
            <summary>
            Indicates that an operation uses a <see cref="T:Inedo.Otter.Extensibility.Credentials.ResourceCredentials"/>
            </summary>
            <remarks>This interface is not intended to be implemented directly, use 
            the generic <see cref="T:Inedo.Otter.Extensibility.Credentials.IHasCredentials`1"/> instead.</remarks>
        </member>
        <member name="P:Inedo.Otter.Extensibility.Credentials.IHasCredentials.CredentialName">
            <summary>
            Gets or sets the name of the credential, which may be fully qualified with the scope resolution operator.
            </summary>
        </member>
        <member name="T:Inedo.Otter.Extensibility.Credentials.MappedCredentialAttribute">
            <summary>
            Indicates that a property is mapped to a credential.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Credentials.MappedCredentialAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Otter.Extensibility.Credentials.MappedCredentialAttribute"/> class.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="P:Inedo.Otter.Extensibility.Credentials.MappedCredentialAttribute.PropertyName">
            <summary>
            Gets the name of the property.
            </summary>
        </member>
        <member name="T:Inedo.Otter.Extensibility.Credentials.ResourceCredentials">
            <summary>
            Represents a set of credentials used for a specific resource.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Credentials.ResourceCredentials.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Otter.Extensibility.Credentials.ResourceCredentials"/> class.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Credentials.ResourceCredentials.GetDescription">
            <summary>
            Gets the description.
            </summary>
        </member>
        <member name="T:Inedo.Otter.Extensibility.DisableVariableExpansionAttribute">
            <summary>
            Indicates that a property should not have its variables automatically expanded.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensibility.DisableVariableExpansionAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Otter.Extensibility.DisableVariableExpansionAttribute"/> class.
            </summary>
        </member>
        <member name="T:Inedo.Otter.Extensibility.ITemplateContainer`1">
            <summary>
            Indicates that a type has special handling for enumerating properties.
            </summary>
            <typeparam name="TTemplate">The type of the template.</typeparam>
        </member>
        <member name="P:Inedo.Otter.Extensibility.ITemplateContainer`1.Template">
            <summary>
            Gets the template instance used by the type.
            </summary>
        </member>
        <member name="T:Inedo.Otter.Extensibility.Operations.CollectOperation">
            <summary>
            An operation that will collect configuration from a server.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Operations.CollectOperation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Otter.Extensibility.Operations.CollectOperation"/> class.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Operations.CollectOperation.CollectAsync(Inedo.Otter.Extensibility.Operations.IOperationExecutionContext)">
            <summary>
            Collects the configuration from a server.
            </summary>
            <returns>Discovered configuration that was collected from the server.</returns>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Operations.CollectOperation.Store(Inedo.Otter.Extensibility.Configurations.PersistedConfiguration,Inedo.Otter.Extensibility.Configurations.ConfigurationPersistenceContext)">
            <summary>
            Stores the specified configuration.
            </summary>
            <param name="config">The configuration to store.</param>
            <param name="context">The current context.</param>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Operations.CollectOperation.Complete(Inedo.Otter.Extensibility.Configurations.PersistedConfiguration)">
            <summary>
            Returns a <see cref="T:System.Threading.Tasks.Task`1"/> that can be returned from the
            <see cref="M:Inedo.Otter.Extensibility.Operations.CollectOperation.CollectAsync(Inedo.Otter.Extensibility.Operations.IOperationExecutionContext)"/> method to indicate that the
            operation completed synchronously.
            </summary>
            <param name="config">The configuration to return.</param>
            <returns>Completed task.</returns>
        </member>
        <member name="T:Inedo.Otter.Extensibility.Operations.CollectOperation`1">
            <summary>
            An operation that will collect configuration from a server.
            </summary>
            <remarks>
            This effectively just wrapps <see cref="T:Inedo.Otter.Extensibility.Operations.CollectOperation"/> to put strength into it
            </remarks>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Operations.CollectOperation`1.CollectConfigAsync(Inedo.Otter.Extensibility.Operations.IOperationExecutionContext)">
            <summary>
            Collects the configuration.
            </summary>
            <param name="context">The context.</param>
            <returns></returns>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Operations.CollectOperation`1.StoreConfig(Inedo.Otter.Extensibility.Configurations.PersistedConfiguration,Inedo.Otter.Extensibility.Configurations.ConfigurationPersistenceContext)">
            <summary>
            Stores the configuration.
            </summary>
            <param name="config">The configuration.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Operations.CollectOperation`1.Complete(`0)">
            <summary>
            Returns a <see cref="T:System.Threading.Tasks.Task`1"/> that can be returned from the
            <see cref="M:Inedo.Otter.Extensibility.Operations.CollectOperation`1.CollectAsync(Inedo.Otter.Extensibility.Operations.IOperationExecutionContext)"/> method to indicate that the
            operation completed synchronously.
            </summary>
            <param name="config">The configuration to return.</param>
            <returns>Completed task.</returns>
        </member>
        <member name="T:Inedo.Otter.Extensibility.Operations.EnsureOperation">
            <summary>
            An operation that will collect information and configure a server
            based on a template configuration.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Operations.EnsureOperation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Otter.Extensibility.Operations.EnsureOperation"/> class.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Operations.EnsureOperation.CollectAsync(Inedo.Otter.Extensibility.Operations.IOperationExecutionContext)">
            <summary>
            Collects configuration from a server.
            </summary>
            <param name="context">The current context.</param>
            <returns>The collected configuration.</returns>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Operations.EnsureOperation.GetConfigurationTemplate">
            <summary>
            Gets the desired state of a configuration.
            </summary>
            <returns>The desired state.</returns>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Operations.EnsureOperation.Compare(Inedo.Otter.Extensibility.Configurations.PersistedConfiguration)">
            <summary>
            Compares collected configuration from a server against the operation's current configuration.
            </summary>
            <param name="other">The other instance to compare against.</param>
            <returns><see cref="T:Inedo.Otter.Extensibility.Configurations.ComparisonResult"/> instance which represents the differences.</returns>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Operations.EnsureOperation.Store(Inedo.Otter.Extensibility.Configurations.PersistedConfiguration,Inedo.Otter.Extensibility.Configurations.ConfigurationPersistenceContext)">
            <summary>
            Stores the specified configuration.
            </summary>
            <param name="config">The configuration to store.</param>
            <param name="context">The current context.</param>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Operations.EnsureOperation.StoreConfigurationStatus(Inedo.Otter.Extensibility.Configurations.PersistedConfiguration,Inedo.Otter.Extensibility.Configurations.ComparisonResult,Inedo.Otter.Extensibility.Configurations.ConfigurationPersistenceContext)">
            <summary>
            Stores the configuration status based on a comparison of the operation's template configuration.
            </summary>
            <param name="actual">The actual configuration collected.</param>
            <param name="results">Results of the comparison.</param>
            <param name="context">The current context.</param>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Operations.EnsureOperation.ConfigureAsync(Inedo.Otter.Extensibility.Operations.IOperationExecutionContext)">
            <summary>
            Configures a server.
            </summary>
            <param name="context">The current context.</param>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Operations.EnsureOperation.Complete">
            <summary>
            Returns a <see cref="T:System.Threading.Tasks.Task"/> that can be returned from the <see cref="M:Inedo.Otter.Extensibility.Operations.EnsureOperation.ConfigureAsync(Inedo.Otter.Extensibility.Operations.IOperationExecutionContext)"/>
            method to indicate that the operation completed synchronously.
            </summary>
            <returns>Completed task.</returns>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Operations.EnsureOperation.Complete(Inedo.Otter.Extensibility.Configurations.PersistedConfiguration)">
            <summary>
            Returns a <see cref="T:System.Threading.Tasks.Task`1"/> that can be returned from the
            <see cref="M:Inedo.Otter.Extensibility.Operations.EnsureOperation.CollectAsync(Inedo.Otter.Extensibility.Operations.IOperationExecutionContext)"/> method to indicate that the
            operation completed synchronously.
            </summary>
            <param name="config">The configuration to return.</param>
            <returns>Completed task.</returns>
        </member>
        <member name="T:Inedo.Otter.Extensibility.Operations.EnsureOperation`1">
            <summary>
            An <see cref="T:Inedo.Otter.Extensibility.Operations.EnsureOperation"/> with a well-known configuration template.
            </summary>
            <typeparam name="TConfig">The type of the configuration.</typeparam>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Operations.EnsureOperation`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Otter.Extensibility.Operations.EnsureOperation"/> class.
            </summary>
        </member>
        <member name="P:Inedo.Otter.Extensibility.Operations.EnsureOperation`1.Template">
            <summary>
            Gets or sets the configuration template.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Operations.EnsureOperation`1.GetConfigurationTemplate">
            <summary>
            Gets the desired state of a configuration.
            </summary>
            <returns>The desired state.</returns>
        </member>
        <member name="T:Inedo.Otter.Extensibility.Operations.ExecuteOperation">
            <summary>
            An operation that will execute commands and configuration against a server.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Operations.ExecuteOperation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Otter.Extensibility.Operations.ExecuteOperation"/> class.
            </summary>
        </member>
        <member name="P:Inedo.Otter.Extensibility.Operations.ExecuteOperation.Complete">
            <summary>
            The <see cref="T:System.Threading.Tasks.Task"/> that can be returned from the <see cref="M:Inedo.Otter.Extensibility.Operations.ExecuteOperation.ExecuteAsync(Inedo.Otter.Extensibility.Operations.IOperationExecutionContext)"/>
            method to indicate that the operation completed synchronously.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Operations.ExecuteOperation.ExecuteAsync(Inedo.Otter.Extensibility.Operations.IOperationExecutionContext)">
            <summary>
            Performs the operation.
            </summary>
            <param name="context">The current context.</param>
        </member>
        <member name="T:Inedo.Otter.Extensibility.Operations.ICollectingOperation">
            <summary>
            Represents an operation that collects a <see cref="T:Inedo.Otter.Extensibility.Configurations.PersistedConfiguration"/> from a server.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Operations.ICollectingOperation.CollectAsync(Inedo.Otter.Extensibility.Operations.IOperationExecutionContext)">
            <summary>
            Collects the configuration from a server.
            </summary>
            <returns>Discovered configuration that was collected from the server.</returns>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Operations.ICollectingOperation.Store(Inedo.Otter.Extensibility.Configurations.PersistedConfiguration,Inedo.Otter.Extensibility.Configurations.ConfigurationPersistenceContext)">
            <summary>
            Stores the specified configuration.
            </summary>
            <param name="config">The configuration to store.</param>
            <param name="context">The current context.</param>
        </member>
        <member name="T:Inedo.Otter.Extensibility.Operations.IComparingOperation">
            <summary>
            Represents an operation that utilizes a <see cref="T:Inedo.Otter.Extensibility.Configurations.PersistedConfiguration"/> as a template and
            compares its template against actual configuration.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Operations.IComparingOperation.Compare(Inedo.Otter.Extensibility.Configurations.PersistedConfiguration)">
            <summary>
            Compares actual configuration from a server against the operation's template configuration.
            </summary>
            <param name="actual">The actual configuration collected.</param>
            <returns>
            Result of the comparison.
            </returns>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Operations.IComparingOperation.GetConfigurationTemplate">
            <summary>
            Returns the desired state of a configuration.
            </summary>
            <returns>Desired state of the configuration.</returns>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Operations.IComparingOperation.StoreConfigurationStatus(Inedo.Otter.Extensibility.Configurations.PersistedConfiguration,Inedo.Otter.Extensibility.Configurations.ComparisonResult,Inedo.Otter.Extensibility.Configurations.ConfigurationPersistenceContext)">
            <summary>
            Stores the configuration status based on a comparison of the operation's template configuration.
            </summary>
            <param name="actual">The actual configuration collected.</param>
            <param name="results">Results of the comparison.</param>
            <param name="context">The current context.</param>
            <seealso cref="M:Inedo.Otter.Extensibility.Operations.IComparingOperation.Compare(Inedo.Otter.Extensibility.Configurations.PersistedConfiguration)"/>
        </member>
        <member name="T:Inedo.Otter.Extensibility.Operations.ICustomArgumentMapper">
            <summary>
            Implemented by operations that provide their own script argument mapping.
            </summary>
        </member>
        <member name="P:Inedo.Otter.Extensibility.Operations.ICustomArgumentMapper.DefaultArgument">
            <summary>
            Gets the value of the default argument.
            </summary>
        </member>
        <member name="P:Inedo.Otter.Extensibility.Operations.ICustomArgumentMapper.NamedArguments">
            <summary>
            Sets the values of the named arguments.
            </summary>
        </member>
        <member name="P:Inedo.Otter.Extensibility.Operations.ICustomArgumentMapper.OutArguments">
            <summary>
            Gets or sets the dictionary containing out arguments.
            </summary>
        </member>
        <member name="T:Inedo.Otter.Extensibility.Operations.IExecutingOperation">
            <summary>
            Represents an operation that executes.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Operations.IExecutingOperation.ExecuteAsync(Inedo.Otter.Extensibility.Operations.IOperationExecutionContext)">
            <summary>
            Performs the operation.
            </summary>
            <param name="context">The current context.</param>
        </member>
        <member name="T:Inedo.Otter.Extensibility.Operations.IntrinsicOperationAttribute">
            <summary>
            Indicates that an execution operation is intrinsic, meaning that it will
            execute even during a collection phase.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Operations.IntrinsicOperationAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Otter.Extensibility.Operations.IntrinsicOperationAttribute"/> class.
            </summary>
        </member>
        <member name="T:Inedo.Otter.Extensibility.Operations.IOperationConfiguration">
            <summary>
            Contains the stored configuration of an operation.
            </summary>
        </member>
        <member name="P:Inedo.Otter.Extensibility.Operations.IOperationConfiguration.Item(System.String)">
            <summary>
            Gets the value of the item with the specified property name.
            </summary>
            <param name="propertyName">The name of the property on the operation.</param>
            <returns>Value of the property if found; otherwise an empty string.</returns>
        </member>
        <member name="P:Inedo.Otter.Extensibility.Operations.IOperationConfiguration.DefaultArgument">
            <summary>
            Gets the value of the default argument.
            </summary>
        </member>
        <member name="P:Inedo.Otter.Extensibility.Operations.IOperationConfiguration.NamedArguments">
            <summary>
            Gets the named arguments.
            </summary>
        </member>
        <member name="P:Inedo.Otter.Extensibility.Operations.IOperationConfiguration.OutArguments">
            <summary>
            Gets the named out arguments.
            </summary>
        </member>
        <member name="T:Inedo.Otter.Extensibility.Operations.IOperationExecutionContext">
            <summary>
            Represents the context for an execution.
            </summary>
        </member>
        <member name="P:Inedo.Otter.Extensibility.Operations.IOperationExecutionContext.Agent">
            <summary>
            Gets the current agent.
            </summary>
        </member>
        <member name="P:Inedo.Otter.Extensibility.Operations.IOperationExecutionContext.WorkingDirectory">
            <summary>
            Gets the default working directory used for operations.
            </summary>
        </member>
        <member name="P:Inedo.Otter.Extensibility.Operations.IOperationExecutionContext.ServerName">
            <summary>
            Gets the name of the current server used for operations.
            </summary>
        </member>
        <member name="P:Inedo.Otter.Extensibility.Operations.IOperationExecutionContext.Simulation">
            <summary>
            Gets a value indicating whether state-modifying actions should be simulated.
            </summary>
        </member>
        <member name="P:Inedo.Otter.Extensibility.Operations.IOperationExecutionContext.CancellationToken">
            <summary>
            Gets the current <see cref="T:System.Threading.CancellationToken"/> for the operation.
            </summary>
        </member>
        <member name="P:Inedo.Otter.Extensibility.Operations.IOperationExecutionContext.ExecutionStatus">
            <summary>
            Gets the current execution status.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Operations.IOperationExecutionContext.TryGetVariableValue(System.String)">
            <summary>
            Returns the value of the specified variable or null if the variable is not defined.
            </summary>
            <param name="variableName">The name of the variable.</param>
            <returns>The value of the variable if it is defined; otherwise null.</returns>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Operations.IOperationExecutionContext.TryGetVariableValue(Inedo.ExecutionEngine.RuntimeVariableName)">
            <summary>
            Returns the value of the specified variable or null if the variable is not defined.
            </summary>
            <param name="variableName">The name of the variable.</param>
            <returns>The value of the variable if it is defined; otherwise null.</returns>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Operations.IOperationExecutionContext.TryGetFunctionValue(System.String,Inedo.ExecutionEngine.RuntimeValue[])">
            <summary>
            Returns the value of the specified function or null if the function is not defined.
            </summary>
            <param name="functionName">The name of the function.</param>
            <param name="args">Arguments to pass to the function.</param>
            <returns>The value of the function if it is defined; otherwise null.</returns>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Operations.IOperationExecutionContext.SetVariableValue(System.String,Inedo.ExecutionEngine.RuntimeValue)">
            <summary>
            Sets the value of the specified execution variable, or creates a new one in the current scope.
            </summary>
            <param name="variableName">The name of the variable.</param>
            <param name="variableValue">The value to assign to the variable.</param>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Operations.IOperationExecutionContext.SetVariableValue(Inedo.ExecutionEngine.RuntimeVariableName,Inedo.ExecutionEngine.RuntimeValue)">
            <summary>
            Sets the value of the specified execution variable, or creates a new one in the current scope.
            </summary>
            <param name="variableName">The name of the variable.</param>
            <param name="variableValue">The value to assign to the variable.</param>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Operations.IOperationExecutionContext.GetAgent(System.String)">
            <summary>
            Returns the agent with the specified server name and associates it with the current execution.
            </summary>
            <param name="serverName">The name of the server.</param>
            <returns>Agent with the specified server name.</returns>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Operations.IOperationExecutionContext.GetAgentAsync(System.String)">
            <summary>
            Returns the agent with the specified server name and associates it with the current execution.
            </summary>
            <param name="serverName">The name of the server.</param>
            <returns>Agent with the specified server name.</returns>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Operations.IOperationExecutionContext.ExpandVariables(System.String)">
            <summary>
            Expands variables in the specified string using the current execution context.
            </summary>
            <param name="text">Text containing variables to expand.</param>
            <returns>Expanded values.</returns>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Operations.IOperationExecutionContext.ExpandVariablesAsync(System.String)">
            <summary>
            Expands variables in the specified string using the current execution context.
            </summary>
            <param name="text">Text containing variables to expand.</param>
            <returns>Expanded values.</returns>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Operations.IOperationExecutionContext.ResolvePath(System.String)">
            <summary>
            Returns a fully-resolved absolute path of the specified file or directory.
            </summary>
            <param name="path">The path to resolve.</param>
            <returns>Fully-resolved absolute path.</returns>
        </member>
        <member name="T:Inedo.Otter.Extensibility.Operations.IRemoteOperationExecutionContext">
            <summary>
            Represents the context available to a remote operation.
            </summary>
        </member>
        <member name="P:Inedo.Otter.Extensibility.Operations.IRemoteOperationExecutionContext.WorkingDirectory">
            <summary>
            Gets the default working directory used for operations.
            </summary>
        </member>
        <member name="P:Inedo.Otter.Extensibility.Operations.IRemoteOperationExecutionContext.Simulation">
            <summary>
            Gets a value indicating whether state-modifying actions should be simulated.
            </summary>
        </member>
        <member name="P:Inedo.Otter.Extensibility.Operations.IRemoteOperationExecutionContext.CancellationToken">
            <summary>
            Gets the current <see cref="T:System.Threading.CancellationToken"/> for the operation.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Operations.IRemoteOperationExecutionContext.ResolvePath(System.String)">
            <summary>
            Returns a fully-resolved absolute path of the specified file or directory.
            </summary>
            <param name="path">The path to resolve.</param>
            <returns>Fully-resolved absolute path.</returns>
        </member>
        <member name="T:Inedo.Otter.Extensibility.Operations.Operation">
            <summary>
            The common base class for all types of operations.
            </summary>
            <remarks>
            This class cannot be inherited directly. Instead, see <see cref="T:Inedo.Otter.Extensibility.Operations.CollectOperation"/>, <see cref="T:Inedo.Otter.Extensibility.Operations.EnsureOperation"/>, and <see cref="T:Inedo.Otter.Extensibility.Operations.ExecuteOperation"/>.
            </remarks>
            <seealso cref="T:Inedo.Otter.Extensibility.Operations.CollectOperation"/>    
            <seealso cref="T:Inedo.Otter.Extensibility.Operations.EnsureOperation"/>    
            <seealso cref="T:Inedo.Otter.Extensibility.Operations.ExecuteOperation"/>
        </member>
        <member name="E:Inedo.Otter.Extensibility.Operations.Operation.MessageLogged">
            <summary>
            Occurs when a message is logged.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Operations.Operation.GetDescription(Inedo.Otter.Extensibility.Operations.IOperationConfiguration)">
            <summary>
            Returns a friendly description of this operation and its current configuration.
            </summary>
            <param name="config">The operation configuration.</param>
            <returns>Friendly description of this operation and its current configuration.</returns>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Operations.Operation.GetProgress">
            <summary>
            Returns the current progress of the action as a percentage if it is executing.
            </summary>
            <returns>Current progress of the action.</returns>
            <remarks>
            If the action is not executing or does not support reporting progress,
            this method should return null.
            </remarks>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Operations.Operation.Log(Inedo.Diagnostics.MessageLevel,System.String)">
            <summary>
            Writes the specified message to the corresponding log.
            </summary>
            <param name="logLevel">Log level of the message.</param>
            <param name="message">Message to log.</param>
            <seealso cref="T:Inedo.Diagnostics.LoggerExtensions" />
        </member>
        <member name="M:Inedo.Otter.Extensibility.Operations.Operation.GetDescription(System.Type,Inedo.ExecutionEngine.ActionStatement)">
            <summary>
            Returns a friendly description of the operation.
            </summary>
            <param name="operationType">The operation type.</param>
            <param name="statement">The statement.</param>
            <returns>Friendtly description.</returns>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Operations.Operation.ExecuteCommandLineAsync(Inedo.Otter.Extensibility.Operations.IOperationExecutionContext,Inedo.Agents.RemoteProcessStartInfo)">
            <summary>
            Executes the specified process asychronously and writes process output to the operation's log.
            </summary>
            <param name="context">The execution context.</param>
            <param name="startInfo">The process start info.</param>
            <returns>Exit code of the process.</returns>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Operations.Operation.LogProcessOutput(System.String)">
            <summary>
            Invoked when process output data is received after calling ExecuteCommandLine.
            </summary>
            <param name="text">The text to log.</param>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Operations.Operation.LogProcessError(System.String)">
            <summary>
            Invoked when process error data is received after calling ExecuteCommandLine.
            </summary>
            <param name="text">The text to log.</param>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Operations.Operation.OnMessageLogged(Inedo.Diagnostics.LogMessageEventArgs)">
            <summary>
            Raises the <see cref="E:Inedo.Otter.Extensibility.Operations.Operation.MessageLogged"/> event.
            </summary>
            <param name="e">The event args.</param>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Operations.Operation.ExecuteCommandLineLocalAsync(Inedo.Otter.Extensibility.Operations.IRemoteOperationExecutionContext,Inedo.Agents.RemoteProcessStartInfo)">
            <summary>
            Executes the specified process asychronously and writes process output to the operation's log.
            </summary>
            <param name="context">The execution context.</param>
            <param name="startInfo">The process start info.</param>
            <returns>Exit code of the process.</returns>
        </member>
        <member name="T:Inedo.Otter.Extensibility.Operations.OperationConfigurationValue">
            <summary>
            Represents a stored configuration value of an operation.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Operations.OperationConfigurationValue.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Otter.Extensibility.Operations.OperationConfigurationValue"/> struct.
            </summary>
            <param name="rawValue">The string value.</param>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Operations.OperationConfigurationValue.op_Implicit(Inedo.Otter.Extensibility.Operations.OperationConfigurationValue)~System.String">
            <summary>
            Returns a string representation of the value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Operations.OperationConfigurationValue.op_Implicit(Inedo.Otter.Extensibility.Operations.OperationConfigurationValue)~System.String[]">
            <summary>
            Returns an array representation of the value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Operations.OperationConfigurationValue.AsEnumerable">
            <summary>
            Returns an enumeration if possible.
            </summary>
            <returns>An enumeration.</returns>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Operations.OperationConfigurationValue.ToString">
            <summary>
            Returns a string representation of the value.
            </summary>
            <returns>String representation of the value.</returns>
        </member>
        <member name="T:Inedo.Otter.Extensibility.Operations.OperationProgress">
            <summary>
            Contains information about a currently executing operation.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Operations.OperationProgress.#ctor(System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Otter.Extensibility.Operations.OperationProgress"/> class.
            </summary>
            <param name="percent">The percent complete.</param>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Operations.OperationProgress.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Otter.Extensibility.Operations.OperationProgress"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Operations.OperationProgress.#ctor(System.Nullable{System.Int32},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Otter.Extensibility.Operations.OperationProgress"/> class.
            </summary>
            <param name="percent">The percent complete.</param>
            <param name="message">The message.</param>
        </member>
        <member name="P:Inedo.Otter.Extensibility.Operations.OperationProgress.Percent">
            <summary>
            Gets the percent complete.
            </summary>
        </member>
        <member name="P:Inedo.Otter.Extensibility.Operations.OperationProgress.Message">
            <summary>
            Gets the message.
            </summary>
        </member>
        <member name="T:Inedo.Otter.Extensibility.Operations.RemoteCollectOperation">
            <summary>
            A collect operation that runs entirely on a remote server.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Operations.RemoteCollectOperation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Otter.Extensibility.Operations.RemoteCollectOperation"/> class.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Operations.RemoteCollectOperation.RemoteCollectAsync(Inedo.Otter.Extensibility.Operations.IRemoteOperationExecutionContext)">
            <summary>
            Collects the configuration on the remote server.
            </summary>
            <param name="context">The remote execution context.</param>
            <returns>Collected configuration.</returns>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Operations.RemoteCollectOperation.ExecuteCommandLineAsync(Inedo.Otter.Extensibility.Operations.IRemoteOperationExecutionContext,Inedo.Agents.RemoteProcessStartInfo)">
            <summary>
            Executes the specified process asychronously and writes process output to the operation's log.
            </summary>
            <param name="context">The execution context.</param>
            <param name="startInfo">The process start info.</param>
            <returns>Exit code of the process.</returns>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Operations.RemoteCollectOperation.ExecuteCommandLineAsync(Inedo.Otter.Extensibility.Operations.IOperationExecutionContext,Inedo.Agents.RemoteProcessStartInfo)">
            <summary>
            Executes the specified process asychronously and writes process output to the operation's log.
            </summary>
            <param name="context">The execution context.</param>
            <param name="startInfo">The process start info.</param>
            <returns>Exit code of the process.</returns>
        </member>
        <member name="T:Inedo.Otter.Extensibility.Operations.RemoteCollectOperation`1">
            <summary>
            A collect operation that runs entirely on a remote server.
            </summary>
            <typeparam name="TConfig">The type of the collected configuration.</typeparam>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Operations.RemoteCollectOperation`1.StoreConfig(Inedo.Otter.Extensibility.Configurations.PersistedConfiguration,Inedo.Otter.Extensibility.Configurations.ConfigurationPersistenceContext)">
            <summary>
            Stores the configuration.
            </summary>
            <param name="config">The configuration.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Operations.RemoteCollectOperation`1.RemoteCollectConfigAsync(Inedo.Otter.Extensibility.Operations.IRemoteOperationExecutionContext)">
            <summary>
            Collects the configuration remotely.
            </summary>
            <param name="context">The remote execution context.</param>
            <returns>The collected configuration.</returns>
        </member>
        <member name="T:Inedo.Otter.Extensibility.Operations.RemoteEnsureOperation">
            <summary>
            An ensure operation that runs remotely.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Operations.RemoteEnsureOperation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Otter.Extensibility.Operations.RemoteEnsureOperation"/> class.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Operations.RemoteEnsureOperation.RemoteCollectAsync(Inedo.Otter.Extensibility.Operations.IRemoteOperationExecutionContext)">
            <summary>
            Performs the collection remotely.
            </summary>
            <param name="context">The remote execution context.</param>
            <returns>The collected configuration.</returns>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Operations.RemoteEnsureOperation.RemoteConfigureAsync(Inedo.Otter.Extensibility.Operations.IRemoteOperationExecutionContext)">
            <summary>
            Performs the configuration remotely.
            </summary>
            <param name="context">The remote execution context.</param>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Operations.RemoteEnsureOperation.ExecuteCommandLineAsync(Inedo.Otter.Extensibility.Operations.IRemoteOperationExecutionContext,Inedo.Agents.RemoteProcessStartInfo)">
            <summary>
            Executes the specified process asychronously and writes process output to the operation's log.
            </summary>
            <param name="context">The execution context.</param>
            <param name="startInfo">The process start info.</param>
            <returns>Exit code of the process.</returns>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Operations.RemoteEnsureOperation.ExecuteCommandLineAsync(Inedo.Otter.Extensibility.Operations.IOperationExecutionContext,Inedo.Agents.RemoteProcessStartInfo)">
            <summary>
            Executes the specified process asychronously and writes process output to the operation's log.
            </summary>
            <param name="context">The execution context.</param>
            <param name="startInfo">The process start info.</param>
            <returns>Exit code of the process.</returns>
        </member>
        <member name="T:Inedo.Otter.Extensibility.Operations.RemoteEnsureOperation`1">
            <summary>
            An ensure operation that runs remotely.
            </summary>
            <typeparam name="TConfig"></typeparam>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Operations.RemoteEnsureOperation`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Otter.Extensibility.Operations.RemoteEnsureOperation"/> class.
            </summary>
        </member>
        <member name="P:Inedo.Otter.Extensibility.Operations.RemoteEnsureOperation`1.Template">
            <summary>
            Gets or sets the configuration template.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Operations.RemoteEnsureOperation`1.GetConfigurationTemplate">
            <summary>
            Gets the desired state of a configuration.
            </summary>
            <returns>The desired state.</returns>
        </member>
        <member name="T:Inedo.Otter.Extensibility.Operations.RemoteExecuteOperation">
            <summary>
            An execute operation that runs remotely.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Operations.RemoteExecuteOperation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Otter.Extensibility.Operations.RemoteExecuteOperation"/> class.
            </summary>
        </member>
        <member name="P:Inedo.Otter.Extensibility.Operations.RemoteExecuteOperation.Complete">
            <summary>
            Gets a completed <see cref="T:System.Threading.Tasks.Task"/> which can be returned from the <see cref="M:Inedo.Otter.Extensibility.Operations.RemoteExecuteOperation.ExecuteAsync(Inedo.Otter.Extensibility.Operations.IOperationExecutionContext)"/> method.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Operations.RemoteExecuteOperation.ExecuteAsync(Inedo.Otter.Extensibility.Operations.IOperationExecutionContext)">
            <summary>
            Executes the operation.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Operations.RemoteExecuteOperation.RemoteExecuteAsync(Inedo.Otter.Extensibility.Operations.IRemoteOperationExecutionContext)">
            <summary>
            Runs the operation remotely.
            </summary>
            <param name="context">The remote execution context.</param>
            <returns>User-supplied return value. This may be null and will only be used if the <see cref="M:Inedo.Otter.Extensibility.Operations.RemoteExecuteOperation.AfterRemoteExecuteAsync(System.Object)"/> method is implemented.</returns>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Operations.RemoteExecuteOperation.BeforeRemoteExecuteAsync(Inedo.Otter.Extensibility.Operations.IOperationExecutionContext)">
            <summary>
            Invoked on the Otter server before <see cref="M:Inedo.Otter.Extensibility.Operations.RemoteExecuteOperation.RemoteExecuteAsync(Inedo.Otter.Extensibility.Operations.IRemoteOperationExecutionContext)"/> is called remotely.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Operations.RemoteExecuteOperation.AfterRemoteExecuteAsync(System.Object)">
            <summary>
            Invoked on the Otter server after <see cref="M:Inedo.Otter.Extensibility.Operations.RemoteExecuteOperation.RemoteExecuteAsync(Inedo.Otter.Extensibility.Operations.IRemoteOperationExecutionContext)"/> is called remotely.
            </summary>
            <param name="result">The value returned from <see cref="M:Inedo.Otter.Extensibility.Operations.RemoteExecuteOperation.RemoteExecuteAsync(Inedo.Otter.Extensibility.Operations.IRemoteOperationExecutionContext)"/>.</param>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Operations.RemoteExecuteOperation.ExecuteCommandLineAsync(Inedo.Otter.Extensibility.Operations.IRemoteOperationExecutionContext,Inedo.Agents.RemoteProcessStartInfo)">
            <summary>
            Executes the specified process asychronously and writes process output to the operation's log.
            </summary>
            <param name="context">The execution context.</param>
            <param name="startInfo">The process start info.</param>
            <returns>Exit code of the process.</returns>
        </member>
        <member name="M:Inedo.Otter.Extensibility.Operations.RemoteExecuteOperation.ExecuteCommandLineAsync(Inedo.Otter.Extensibility.Operations.IOperationExecutionContext,Inedo.Agents.RemoteProcessStartInfo)">
            <summary>
            Executes the specified process asychronously and writes process output to the operation's log.
            </summary>
            <param name="context">The execution context.</param>
            <param name="startInfo">The process start info.</param>
            <returns>Exit code of the process.</returns>
        </member>
        <member name="T:Inedo.Otter.Extensibility.OutputAttribute">
            <summary>
            Indicates that a property acts as a named return value.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensibility.OutputAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Otter.Extensibility.OutputAttribute"/> class.
            </summary>
        </member>
        <member name="T:Inedo.Otter.Extensibility.RaftRepositories.RaftItem">
            <summary>
            Represents an item contained in a raft.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensibility.RaftRepositories.RaftItem.#ctor(Inedo.Otter.Extensibility.RaftRepositories.RaftItemType,System.String,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Otter.Extensibility.RaftRepositories.RaftItem"/> class.
            </summary>
            <param name="type">The type.</param>
            <param name="name">The name.</param>
            <param name="lastWriteTime">The last write time in UTC.</param>
        </member>
        <member name="P:Inedo.Otter.Extensibility.RaftRepositories.RaftItem.ItemType">
            <summary>
            Gets the type of the item.
            </summary>
        </member>
        <member name="P:Inedo.Otter.Extensibility.RaftRepositories.RaftItem.ItemName">
            <summary>
            Gets the name of the item.
            </summary>
        </member>
        <member name="P:Inedo.Otter.Extensibility.RaftRepositories.RaftItem.LastWriteTime">
            <summary>
            Gets the last write.
            </summary>
        </member>
        <member name="T:Inedo.Otter.Extensibility.RaftRepositories.RaftItemType">
            <summary>
            Type of item contained in a raft repository.
            </summary>
        </member>
        <member name="F:Inedo.Otter.Extensibility.RaftRepositories.RaftItemType.ServerConfigurationPlan">
            <summary>
            A server configuration plan.
            </summary>
        </member>
        <member name="F:Inedo.Otter.Extensibility.RaftRepositories.RaftItemType.RoleConfigurationPlan">
            <summary>
            A role configuration plan.
            </summary>
        </member>
        <member name="F:Inedo.Otter.Extensibility.RaftRepositories.RaftItemType.OrchestrationPlan">
            <summary>
            An orchestration plan.
            </summary>
        </member>
        <member name="F:Inedo.Otter.Extensibility.RaftRepositories.RaftItemType.TemplatePlan">
            <summary>
            A template plan.
            </summary>
        </member>
        <member name="F:Inedo.Otter.Extensibility.RaftRepositories.RaftItemType.Script">
            <summary>
            A script.
            </summary>
        </member>
        <member name="F:Inedo.Otter.Extensibility.RaftRepositories.RaftItemType.File">
            <summary>
            An unclassified arbitrary file.
            </summary>
        </member>
        <member name="T:Inedo.Otter.Extensibility.RaftRepositories.RaftRepository">
            <summary>
            A repository for a raft.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensibility.RaftRepositories.RaftRepository.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Otter.Extensibility.RaftRepositories.RaftRepository"/> class.
            </summary>
        </member>
        <member name="P:Inedo.Otter.Extensibility.RaftRepositories.RaftRepository.RaftName">
            <summary>
            Gets the name of the raft as defined by the user
            </summary>
        </member>
        <member name="P:Inedo.Otter.Extensibility.RaftRepositories.RaftRepository.DefaultName">
            <summary>
            Gets the name of the default raft.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensibility.RaftRepositories.RaftRepository.Commit(Inedo.Otter.Extensibility.UserDirectories.IUserDirectoryUser)">
            <summary>
            Closes any external connections and commits any changes made that were not immediately saved.
            </summary>
            <param name="user">The user performing the commit.</param>
            <remarks>
            This method should be called explicitly if any changes to the raft items were made;
            otherwise, changes are not guaranteed to be saved to raft items.
            </remarks>
        </member>
        <member name="M:Inedo.Otter.Extensibility.RaftRepositories.RaftRepository.GetDescription">
            <summary>
            Gets a description of the raft's configuration.
            </summary>
            <returns>A user friendly description of the raft's configuration.</returns>
        </member>
        <member name="P:Inedo.Otter.Extensibility.RaftRepositories.RaftRepository.IsReadOnly">
            <summary>
            Gets a value indicating whether the items in the raft are read only.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensibility.RaftRepositories.RaftRepository.SaveToZip(System.IO.Stream)">
            <summary>
            Saves a copy of the raft to the specified <see cref="T:System.IO.Stream"/> in zip format.
            </summary>
            <param name="stream">The stream to write the zip file to.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="stream"/> is null.</exception>
        </member>
        <member name="M:Inedo.Otter.Extensibility.RaftRepositories.RaftRepository.GetVariables">
            <summary>
            Returns a dictionary containing all of the variables and their values in the raft.
            </summary>
            <returns>Dictionary containing all of the variables and their values in the raft.</returns>
        </member>
        <member name="M:Inedo.Otter.Extensibility.RaftRepositories.RaftRepository.SetVariable(Inedo.ExecutionEngine.RuntimeVariableName,System.String)">
            <summary>
            Sets the value of the specified variable.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">The value to assign to the variable.</param>
            <exception cref="T:System.InvalidOperationException">The raft is read only.</exception>
        </member>
        <member name="M:Inedo.Otter.Extensibility.RaftRepositories.RaftRepository.DeleteVariable(Inedo.ExecutionEngine.RuntimeVariableName)">
            <summary>
            Deletes the specified variable if it exists.
            </summary>
            <param name="name">The name of the variable.</param>
            <returns>True if the variable was deleted; false if the variable did not exist.</returns>
            <exception cref="T:System.InvalidOperationException">The raft is read only.</exception>
        </member>
        <member name="M:Inedo.Otter.Extensibility.RaftRepositories.RaftRepository.GetRaftItems">
            <summary>
            Returns all of the items contained in the raft.
            </summary>
            <returns>All of the items contained in the raft.</returns>
        </member>
        <member name="M:Inedo.Otter.Extensibility.RaftRepositories.RaftRepository.GetRaftItems(Inedo.Otter.Extensibility.RaftRepositories.RaftItemType)">
            <summary>
            Returns all of the items of the specified type contained in the raft.
            </summary>
            <param name="type">The type of item to return.</param>
            <returns>All of the items of the specified type that are contained in the raft.</returns>
            <remarks>
            The default implementation of this method calls <see cref="M:Inedo.Otter.Extensibility.RaftRepositories.RaftRepository.GetRaftItems"/> and filters the
            results. Implementers may override this method as a performance optimization.
            </remarks>
        </member>
        <member name="M:Inedo.Otter.Extensibility.RaftRepositories.RaftRepository.GetRaftItem(Inedo.Otter.Extensibility.RaftRepositories.RaftItemType,System.String)">
            <summary>
            Returns the specified item in a raft.
            </summary>
            <param name="type">The type of item to return.</param>
            <param name="name">The name of the item.</param>
            <returns>The item of the specified type and name, or <c>null</c> if there is no matching item in the raft.</returns>
            <remarks>
            The default implementation of this method calls <see cref="M:Inedo.Otter.Extensibility.RaftRepositories.RaftRepository.GetRaftItems"/> and filters the
            results. Implementers may override this method as a performance optimization.
            </remarks>
        </member>
        <member name="M:Inedo.Otter.Extensibility.RaftRepositories.RaftRepository.OpenRaftItem(Inedo.Otter.Extensibility.RaftRepositories.RaftItemType,System.String,System.IO.FileMode,System.IO.FileAccess)">
            <summary>
            Opens an item contained in the raft.
            </summary>
            <param name="type">The type of the item.</param>
            <param name="name">The name of the item.</param>
            <param name="fileMode">The desired mode of file access.</param>
            <param name="fileAccess">The desired file access.</param>
            <returns>Stream backed by the specified raft item.</returns>
        </member>
        <member name="M:Inedo.Otter.Extensibility.RaftRepositories.RaftRepository.DeleteRaftItem(Inedo.Otter.Extensibility.RaftRepositories.RaftItemType,System.String)">
            <summary>
            Deletes the raft item.
            </summary>
            <param name="type">The type.</param>
            <param name="name">The name.</param>
        </member>
        <member name="M:Inedo.Otter.Extensibility.RaftRepositories.RaftRepository.TestConfiguration">
            <summary>
            Attempts to test the validating of the raft's configuration.
            </summary>
            <returns>Result of the test. A successful test should return <see cref="F:Inedo.Otter.Extensibility.ConfigurationTestResult.Success"/>.</returns>
            <remarks>
            This method should not throw exceptions, but should instead provide a list of individual friendly messages.
            </remarks>
        </member>
        <member name="M:Inedo.Otter.Extensibility.RaftRepositories.RaftRepository.Dispose">
            <summary>
            Releases resources used by the raft repository.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensibility.RaftRepositories.RaftRepository.OpenRaft(System.Int32)">
            <summary>
            Opens the raft.
            </summary>
            <param name="raftId">The raft ID.</param>
            <returns></returns>
        </member>
        <member name="M:Inedo.Otter.Extensibility.RaftRepositories.RaftRepository.OpenRaft(System.String)">
            <summary>
            Opens the raft.
            </summary>
            <param name="raftName">The name of the raft.</param>
            <returns></returns>
        </member>
        <member name="M:Inedo.Otter.Extensibility.RaftRepositories.RaftRepository.IsDefaultRaft(System.String)">
            <summary>
            Performs a case-insensitive search against <see cref="P:Inedo.Otter.Extensibility.RaftRepositories.RaftRepository.DefaultName"/>
            </summary>
            <param name="raftName">Name of the raft.</param>
            <returns>true if the name matches the default name</returns>
        </member>
        <member name="M:Inedo.Otter.Extensibility.RaftRepositories.RaftRepository.IsDefaultRaft(Inedo.Otter.Data.Tables.Rafts)">
            <summary>
            Performs a case-insensitive search against the raft name of the specified data
            </summary>
            <param name="raftData">The raft data.</param>
            <returns></returns>
        </member>
        <member name="M:Inedo.Otter.Extensibility.RaftRepositories.RaftRepository.GetDefaultRaftId">
            <summary>
            Gets the id of the default raft, or null if there is no default raft
            </summary>
            <returns></returns>
        </member>
        <member name="M:Inedo.Otter.Extensibility.RaftRepositories.RaftRepository.Dispose(System.Boolean)">
            <summary>
            Releases resources used by the raft repository.
            </summary>
            <param name="disposing">Value indicating whether manage resources should be disposed.</param>
        </member>
        <member name="M:Inedo.Otter.Extensibility.RaftRepositories.RaftRepository.GetStandardTypeName(Inedo.Otter.Extensibility.RaftRepositories.RaftItemType)">
            <summary>
            Returns the name of an item type that acts as a directory name
            for the specified type when stored in a file system.
            </summary>
            <param name="type">The item type.</param>
            <returns>The name of the type.</returns>
        </member>
        <member name="M:Inedo.Otter.Extensibility.RaftRepositories.RaftRepository.TryParseStandardTypeName(System.String)">
            <summary>
            Returns tne <see cref="T:Inedo.Otter.Extensibility.RaftRepositories.RaftItemType"/> which corresponds to the
            specified name.
            </summary>
            <param name="name">The item name.</param>
            <returns>The corresponding <see cref="T:Inedo.Otter.Extensibility.RaftRepositories.RaftItemType"/> if valid; otherwise null.</returns>
        </member>
        <member name="M:Inedo.Otter.Extensibility.RaftRepositories.RaftRepository.ReadStandardVariableData(System.IO.TextReader)">
            <summary>
            Returns a dictionary of variable values parsed from the specified <see cref="T:System.IO.TextReader"/>.
            </summary>
            <param name="textReader"><see cref="T:System.IO.TextReader"/> backed by a standard variable script file.</param>
            <returns>Dictionary of variable values.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="textReader"/> is null.</exception>
        </member>
        <member name="M:Inedo.Otter.Extensibility.RaftRepositories.RaftRepository.WriteStandardVariableData(System.Collections.Generic.IReadOnlyDictionary{Inedo.ExecutionEngine.RuntimeVariableName,System.String},System.IO.TextWriter)">
            <summary>
            Writes a dictionary of variasbles values to the specified <see cref="T:System.IO.TextWriter"/>.
            </summary>
            <param name="variables">The variables to write.</param>
            <param name="textWriter">The <see cref="T:System.IO.TextWriter"/> to write to.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="textWriter"/> is null.</exception>
        </member>
        <member name="T:Inedo.Otter.Extensibility.ScriptAliasAttribute">
            <summary>
            Provides an alias for both classes and properties of operations and configurations when used in a script.
            </summary>
            <remarks>
            If multiple aliases are specified, the first alias will be considered default, and will be used when
            exporting to a configuration.
            </remarks>
        </member>
        <member name="M:Inedo.Otter.Extensibility.ScriptAliasAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Otter.Extensibility.ScriptAliasAttribute"/> class.
            </summary>
            <param name="alias">The script alias.</param>
        </member>
        <member name="P:Inedo.Otter.Extensibility.ScriptAliasAttribute.Alias">
            <summary>
            Gets the script alias.
            </summary>
        </member>
        <member name="T:Inedo.Otter.Extensibility.ScriptNamespaceAttribute">
            <summary>
            Specifies the default OtterScript namespace for a class or an assembly.
            </summary>
            <remarks>
            If no attribute is present on the class, the assembly's attribute will be used; if no assembly attribute is 
            specified, the assembly's name will be used.
            </remarks>
        </member>
        <member name="M:Inedo.Otter.Extensibility.ScriptNamespaceAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Otter.Extensibility.ScriptNamespaceAttribute"/> class.
            </summary>
            <param name="namespaceName">The namespace.</param>
        </member>
        <member name="P:Inedo.Otter.Extensibility.ScriptNamespaceAttribute.Namespace">
            <summary>
            Gets the namespace for scripting.
            </summary>
        </member>
        <member name="P:Inedo.Otter.Extensibility.ScriptNamespaceAttribute.PreferUnqualified">
            <summary>
            Gets a value indicating whether the namespace is usually needed.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensibility.ScriptNamespaceAttribute.GetScriptNamespace(System.Type)">
            <summary>
            Returns the namespace fo the specified type.
            </summary>
            <param name="type">The type.</param>
            <returns>The namespace.</returns>
        </member>
        <member name="M:Inedo.Otter.Extensibility.ScriptNamespaceAttribute.GetScriptNamespace(System.Type,System.Boolean)">
            <summary>
            Returns the namespace fo rthe specified type.
            </summary>
            <param name="type">The type.</param>
            <param name="returnNullIfPreferUnqualified">Value indicating whether to return null if an unqualified namespace is preferred.</param>
            <returns>The namespace.</returns>
        </member>
        <member name="T:Inedo.Otter.Extensibility.TimeSpanUnitAttribute">
            <summary>
            Specifies the default unit to use for a <see cref="T:System.TimeSpan"/> property.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensibility.TimeSpanUnitAttribute.#ctor(Inedo.Otter.Extensibility.TimeSpanUnit)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Otter.Extensibility.TimeSpanUnitAttribute"/> class.
            </summary>
            <param name="unit">The desired unit.</param>
        </member>
        <member name="P:Inedo.Otter.Extensibility.TimeSpanUnitAttribute.Unit">
            <summary>
            Gets the unit.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensibility.TimeSpanUnitAttribute.GetTimeSpan(System.Double)">
            <summary>
            Gets the timespan from the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns>The timespan.</returns>
        </member>
        <member name="T:Inedo.Otter.Extensibility.TimeSpanUnit">
            <summary>
            Indicates how a value should be converted to a timespan.
            </summary>
        </member>
        <member name="F:Inedo.Otter.Extensibility.TimeSpanUnit.Seconds">
            <summary>
            The unit should be displayed in seconds.
            </summary>
        </member>
        <member name="F:Inedo.Otter.Extensibility.TimeSpanUnit.Minutes">
            <summary>
            The unit should be displayed in minutes.
            </summary>
        </member>
        <member name="T:Inedo.Otter.Extensibility.UserDirectories.BasicGroupInfo">
            <summary>
            Represents a standard group in a directory.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensibility.UserDirectories.BasicGroupInfo.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Otter.Extensibility.UserDirectories.BasicGroupInfo"/> class.
            </summary>
            <param name="name">The unique name of the group.</param>
        </member>
        <member name="M:Inedo.Otter.Extensibility.UserDirectories.BasicGroupInfo.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Otter.Extensibility.UserDirectories.BasicGroupInfo"/> class.
            </summary>
            <param name="name">The unique name of the group.</param>
            <param name="displayName">The friendly name of the group.</param>
        </member>
        <member name="P:Inedo.Otter.Extensibility.UserDirectories.BasicGroupInfo.Name">
            <summary>
            Gets the unique name of the group.
            </summary>
        </member>
        <member name="P:Inedo.Otter.Extensibility.UserDirectories.BasicGroupInfo.DisplayName">
            <summary>
            Gets the friendly display name of the group.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensibility.UserDirectories.BasicGroupInfo.IsMemberOfGroup(System.String)">
            <summary>
            Returns a value indicating whether this group is a member of the specified group.
            </summary>
            <param name="groupName">The group to test for membership in.</param>
            <returns>True if the group is a member of the group; otherwise false.</returns>
        </member>
        <member name="M:Inedo.Otter.Extensibility.UserDirectories.BasicGroupInfo.Equals(Inedo.Otter.Extensibility.UserDirectories.BasicGroupInfo)">
            <summary>
            Returns a value indicating whether this group is equivalent to the specified other group.
            </summary>
            <param name="other">The other group.</param>
            <returns>True if both instances represent the same group; otherwise false.</returns>
        </member>
        <member name="M:Inedo.Otter.Extensibility.UserDirectories.BasicGroupInfo.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this group is equivalent to the specified other group.
            </summary>
            <param name="obj">The other group.</param>
            <returns>True if both instances represent the same user; otherwise false.</returns>
        </member>
        <member name="M:Inedo.Otter.Extensibility.UserDirectories.BasicGroupInfo.GetHashCode">
            <summary>
            Returns the hash code for the instance.
            </summary>
            <returns>Hash code for the instance.</returns>
        </member>
        <member name="M:Inedo.Otter.Extensibility.UserDirectories.BasicGroupInfo.ToString">
            <summary>
            Returns the group name.
            </summary>
            <returns>Group name.</returns>
        </member>
        <member name="T:Inedo.Otter.Extensibility.UserDirectories.BasicUserInfo">
            <summary>
            Represents a standard user in a directory.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensibility.UserDirectories.BasicUserInfo.#ctor(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Otter.Extensibility.UserDirectories.BasicUserInfo"/> class.
            </summary>
            <param name="name">The user name of the user.</param>
            <param name="displayName">The display name of the user.</param>
            <param name="emailAddress">The user's email address.</param>
            <param name="groupNames">Groups to which the user belongs.</param>
        </member>
        <member name="M:Inedo.Otter.Extensibility.UserDirectories.BasicUserInfo.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Otter.Extensibility.UserDirectories.BasicUserInfo"/> class.
            </summary>
            <param name="name">The user name of the user.</param>
            <param name="displayName">The display name of the user.</param>
            <param name="emailAddress">The user's email address.</param>
        </member>
        <member name="M:Inedo.Otter.Extensibility.UserDirectories.BasicUserInfo.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Otter.Extensibility.UserDirectories.BasicUserInfo"/> class.
            </summary>
            <param name="name">The user name of the user.</param>
            <param name="displayName">The display name of the user.</param>
        </member>
        <member name="M:Inedo.Otter.Extensibility.UserDirectories.BasicUserInfo.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Otter.Extensibility.UserDirectories.BasicUserInfo"/> class.
            </summary>
            <param name="name">The user name of the user.</param>
        </member>
        <member name="P:Inedo.Otter.Extensibility.UserDirectories.BasicUserInfo.Name">
            <summary>
            Gets the login name of the user.
            </summary>
        </member>
        <member name="P:Inedo.Otter.Extensibility.UserDirectories.BasicUserInfo.DisplayName">
            <summary>
            Gets the friendly display name of the user.
            </summary>
        </member>
        <member name="P:Inedo.Otter.Extensibility.UserDirectories.BasicUserInfo.EmailAddress">
            <summary>
            Gets the user's email address.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensibility.UserDirectories.BasicUserInfo.IsMemberOfGroup(System.String)">
            <summary>
            Returns a value indicating whether this user is a member of the specified group.
            </summary>
            <param name="groupName">The group to test for membership in.</param>
            <returns>True if the user is a member of the group; otherwise false.</returns>
        </member>
        <member name="M:Inedo.Otter.Extensibility.UserDirectories.BasicUserInfo.Equals(Inedo.Otter.Extensibility.UserDirectories.BasicUserInfo)">
            <summary>
            Returns a value indicating whether this user is equivalent to the specified other user.
            </summary>
            <param name="other">The other user.</param>
            <returns>True if both instances represent the same user; otherwise false.</returns>
        </member>
        <member name="M:Inedo.Otter.Extensibility.UserDirectories.BasicUserInfo.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this user is equivalent to the specified other user.
            </summary>
            <param name="obj">The other user.</param>
            <returns>True if both instances represent the same user; otherwise false.</returns>
        </member>
        <member name="M:Inedo.Otter.Extensibility.UserDirectories.BasicUserInfo.GetHashCode">
            <summary>
            Returns the hash code for the instance.
            </summary>
            <returns>Hash code for the instance.</returns>
        </member>
        <member name="M:Inedo.Otter.Extensibility.UserDirectories.BasicUserInfo.ToString">
            <summary>
            Returns the user name.
            </summary>
            <returns>User name.</returns>
        </member>
        <member name="T:Inedo.Otter.Extensibility.UserDirectories.IUserDirectoryGroup">
            <summary>
            Represents a group in a user directory.
            </summary>
        </member>
        <member name="T:Inedo.Otter.Extensibility.UserDirectories.IUserDirectoryPrincipal">
            <summary>
            Represents a principal in a user directory.
            </summary>
        </member>
        <member name="P:Inedo.Otter.Extensibility.UserDirectories.IUserDirectoryPrincipal.Name">
            <summary>
            Gets the login name of the principal.
            </summary>
        </member>
        <member name="P:Inedo.Otter.Extensibility.UserDirectories.IUserDirectoryPrincipal.DisplayName">
            <summary>
            Gets the friendly display name of the principal.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensibility.UserDirectories.IUserDirectoryPrincipal.IsMemberOfGroup(System.String)">
            <summary>
            Returns a value indicating whether this principal is a member of the specified group.
            </summary>
            <param name="groupName">The group to test for membership in.</param>
            <returns>True if the principal is a member of the group; otherwise false.</returns>
        </member>
        <member name="T:Inedo.Otter.Extensibility.UserDirectories.IUserDirectoryUser">
            <summary>
            Represents a user in a user directory.
            </summary>
        </member>
        <member name="P:Inedo.Otter.Extensibility.UserDirectories.IUserDirectoryUser.EmailAddress">
            <summary>
            Gets the user's email address.
            </summary>
        </member>
        <member name="T:Inedo.Otter.Extensibility.UserDirectories.UserDirectory">
            <summary>
            Base class for Otter user directories.
            </summary>
        </member>
        <member name="P:Inedo.Otter.Extensibility.UserDirectories.UserDirectory.AnonymousUser">
            <summary>
            Gets the anonymous user.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensibility.UserDirectories.UserDirectory.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Otter.Extensibility.UserDirectories.UserDirectory"/> class.
            </summary>
        </member>
        <member name="E:Inedo.Otter.Extensibility.UserDirectories.UserDirectory.MessageLogged">
            <summary>
            Occurs when a message is logged.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensibility.UserDirectories.UserDirectory.Log(Inedo.Diagnostics.MessageLevel,System.String)">
            <summary>
            Writes the specified message to the corresponding log.
            </summary>
            <param name="logLevel">The log level.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:Inedo.Otter.Extensibility.UserDirectories.UserDirectory.GetDescription">
            <summary>
            Returns a friendly description of this directory and its configuration.
            </summary>
            <returns>Friendly description of this directory and its configuration.</returns>
        </member>
        <member name="M:Inedo.Otter.Extensibility.UserDirectories.UserDirectory.TryGetUser(System.String)">
            <summary>
            Returns a <see cref="T:Inedo.Otter.Extensibility.UserDirectories.IUserDirectoryUser"/> for the user with the specified user name.
            </summary>
            <param name="userName">The user name of the user to look up.</param>
            <returns>
            A corresponding <see cref="T:Inedo.Otter.Extensibility.UserDirectories.IUserDirectoryUser"/> for the specified user name,
            if the user was found in the directory; otherwise null.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="userName"/> is null or empty.</exception>
        </member>
        <member name="M:Inedo.Otter.Extensibility.UserDirectories.UserDirectory.TryGetAndValidateUser(System.String,System.String)">
            <summary>
            Returns a <see cref="T:Inedo.Otter.Extensibility.UserDirectories.IUserDirectoryUser"/> for the user with the specified user name and password.
            </summary>
            <param name="userName">The user name of the user to look up.</param>
            <param name="password">The password of the user.</param>
            <returns>
            A corresponding <see cref="T:Inedo.Otter.Extensibility.UserDirectories.IUserDirectoryUser"/> for the specified user name,
            if the user was found in the directory and the specified password is correct; otherwise null.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="userName"/> is null or empty or <paramref name="password"/> is null.</exception>
        </member>
        <member name="M:Inedo.Otter.Extensibility.UserDirectories.UserDirectory.TryGetGroup(System.String)">
            <summary>
            Returns a <see cref="T:Inedo.Otter.Extensibility.UserDirectories.IUserDirectoryGroup"/> for the group with the specified name.
            </summary>
            <param name="groupName">The name of the group to look up.</param>
            <returns>
            A corresponding <see cref="T:Inedo.Otter.Extensibility.UserDirectories.IUserDirectoryGroup"/> for the specified group,
            if the group was found in the directory; otherwise null.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="groupName"/> is null or empty.</exception>
        </member>
        <member name="M:Inedo.Otter.Extensibility.UserDirectories.UserDirectory.TryGetPrincipal(System.String)">
            <summary>
            Returns a <see cref="T:Inedo.Otter.Extensibility.UserDirectories.IUserDirectoryPrincipal"/> for the user or group with the specified name.
            </summary>
            <param name="principalName">The name of the principal to look up.</param>
            <returns>
            A corresponding <see cref="T:Inedo.Otter.Extensibility.UserDirectories.IUserDirectoryPrincipal"/> for the specified name,
            if the principal was found in the directory; otherwise null.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="principalName"/> is null or empty.</exception>
        </member>
        <member name="M:Inedo.Otter.Extensibility.UserDirectories.UserDirectory.FindUsers(System.String)">
            <summary>
            Searches the directory for users related to the specified search term.
            </summary>
            <param name="searchTerm">The search term.</param>
            <returns>Sequence of users which are related to the specified search term.</returns>
        </member>
        <member name="M:Inedo.Otter.Extensibility.UserDirectories.UserDirectory.FindGroups(System.String)">
            <summary>
            Searches the directory for groups related to the specified search term.
            </summary>
            <param name="searchTerm">The search term.</param>
            <returns>Sequence of groups which are related to the specified search term.</returns>
        </member>
        <member name="M:Inedo.Otter.Extensibility.UserDirectories.UserDirectory.FindPrincipals(System.String)">
            <summary>
            Searches the directory for users or groups related to the specified search term.
            </summary>
            <param name="searchTerm">The search term.</param>
            <returns>Sequence of principals which are related to the specified search term.</returns>
        </member>
        <member name="M:Inedo.Otter.Extensibility.UserDirectories.UserDirectory.GetGroupMembers(System.String)">
            <summary>
            Enumerates members of the specified group name.
            </summary>
            <param name="groupName">The name of the group.</param>
            <returns>
            A corresponding <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing the members
            of the group. The result can empty if there are no group members or the group does not exist.
            </returns>
        </member>
        <member name="M:Inedo.Otter.Extensibility.UserDirectories.UserDirectory.TryParseLogonUser(System.String)">
            <summary>
            Returns a <see cref="T:Inedo.Otter.Extensibility.UserDirectories.IUserDirectoryUser"/> for the user with the specified LOGON_USER string.
            </summary>
            <param name="logonUser">The LOGON_USER server variable value.</param>
            <returns>
            A corresponding <see cref="T:Inedo.Otter.Extensibility.UserDirectories.IUserDirectoryUser"/> for the specified user name,
            if the user was found in the directory and this directory supports integrated authentication; otherwise null.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="logonUser"/> is null or empty.</exception>
        </member>
        <member name="M:Inedo.Otter.Extensibility.UserDirectories.UserDirectory.GetUserDirectory(System.Int32)">
            <summary>
            Gets an instance of the specified user directory
            </summary>
            <param name="userDirectoryId">The user directory identifier.</param>
            <returns>an instance of the specified user <see cref="T:Inedo.Otter.Extensibility.UserDirectories.UserDirectory"/> or null if the directory does not exist</returns>
        </member>
        <member name="T:Inedo.Otter.Extensibility.VariableFunctions.IAsyncVariableFunction">
            <summary>
            Implemented by variable functions that can be evaluated asynchronously.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensibility.VariableFunctions.IAsyncVariableFunction.EvaluateAsync(Inedo.Otter.IOtterContext)">
            <summary>
            Evaluates the function asynchronously and returns the result.
            </summary>
            <param name="context">The current execution context if applicable.</param>
            <returns>Result of the function.</returns>
        </member>
        <member name="T:Inedo.Otter.Extensibility.VariableFunctions.ScalarVariableFunction">
            <summary>
            Base class for scalar variable functions.
            </summary>
            <seealso cref="T:Inedo.Otter.Extensibility.VariableFunctions.VectorVariableFunction"/>
        </member>
        <member name="M:Inedo.Otter.Extensibility.VariableFunctions.ScalarVariableFunction.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Otter.Extensibility.VariableFunctions.ScalarVariableFunction"/> class.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensibility.VariableFunctions.ScalarVariableFunction.Evaluate(Inedo.Otter.IOtterContext)">
            <summary>
            Evaluates the function and returns the result.
            </summary>
            <param name="context">The current execution context if applicable.</param>
            <returns>Result of the function.</returns>
        </member>
        <member name="M:Inedo.Otter.Extensibility.VariableFunctions.ScalarVariableFunction.EvaluateScalar(Inedo.Otter.IOtterContext)">
            <summary>
            Evaluates the function and returns the result.
            </summary>
            <param name="context">The current execution context if applicable.</param>
            <returns>Result of the function.</returns>
        </member>
        <member name="T:Inedo.Otter.Extensibility.VariableFunctions.VariableFunction">
            <summary>
            Base class for all variable functions.
            </summary>
            <remarks>
            This class should not normally be inherited directly; instead use
            <see cref="T:Inedo.Otter.Extensibility.VariableFunctions.ScalarVariableFunction"/> or <see cref="T:Inedo.Otter.Extensibility.VariableFunctions.VectorVariableFunction"/>.
            </remarks>
            <seealso cref="T:Inedo.Otter.Extensibility.VariableFunctions.ScalarVariableFunction"/>
            <seealso cref="T:Inedo.Otter.Extensibility.VariableFunctions.VectorVariableFunction"/>
        </member>
        <member name="M:Inedo.Otter.Extensibility.VariableFunctions.VariableFunction.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Otter.Extensibility.VariableFunctions.VariableFunction"/> class.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensibility.VariableFunctions.VariableFunction.Evaluate(Inedo.Otter.IOtterContext)">
            <summary>
            Evaluates the function and returns the result.
            </summary>
            <param name="context">The current execution context if applicable.</param>
            <returns>Result of the function.</returns>
        </member>
        <member name="T:Inedo.Otter.Extensibility.VariableFunctions.VariableFunctionArgumentException">
            <summary>
            Represents errors due to invalid variable function arguments.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensibility.VariableFunctions.VariableFunctionArgumentException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Otter.Extensibility.VariableFunctions.VariableFunctionArgumentException"/> class.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensibility.VariableFunctions.VariableFunctionArgumentException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Otter.Extensibility.VariableFunctions.VariableFunctionArgumentException"/> class.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:Inedo.Otter.Extensibility.VariableFunctions.VariableFunctionArgumentException.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Otter.Extensibility.VariableFunctions.VariableFunctionArgumentException"/> class.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="argumentName">The name of the argument which was invalid.</param>
        </member>
        <member name="M:Inedo.Otter.Extensibility.VariableFunctions.VariableFunctionArgumentException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Otter.Extensibility.VariableFunctions.VariableFunctionArgumentException"/> class.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="inner">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:Inedo.Otter.Extensibility.VariableFunctions.VariableFunctionArgumentException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Otter.Extensibility.VariableFunctions.VariableFunctionArgumentException"/> class.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Inedo.Otter.Extensibility.VariableFunctions.VariableFunctionArgumentMissingException">
            <summary>
            Represents errors due to missing variable function arguments.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensibility.VariableFunctions.VariableFunctionArgumentMissingException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Otter.Extensibility.VariableFunctions.VariableFunctionArgumentMissingException"/> class.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensibility.VariableFunctions.VariableFunctionArgumentMissingException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Otter.Extensibility.VariableFunctions.VariableFunctionArgumentMissingException"/> class.
            </summary>
            <param name="argumentName">The name of the missing argument.</param>
        </member>
        <member name="M:Inedo.Otter.Extensibility.VariableFunctions.VariableFunctionArgumentMissingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Otter.Extensibility.VariableFunctions.VariableFunctionArgumentMissingException"/> class.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Inedo.Otter.Extensibility.VariableFunctions.VariableFunctionException">
            <summary>
            Represents errors which occur during variable function evaluation.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensibility.VariableFunctions.VariableFunctionException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Otter.Extensibility.VariableFunctions.VariableFunctionException"/> class.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensibility.VariableFunctions.VariableFunctionException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Otter.Extensibility.VariableFunctions.VariableFunctionException"/> class.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:Inedo.Otter.Extensibility.VariableFunctions.VariableFunctionException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Otter.Extensibility.VariableFunctions.VariableFunctionException"/> class.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="inner">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:Inedo.Otter.Extensibility.VariableFunctions.VariableFunctionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Otter.Extensibility.VariableFunctions.VariableFunctionException"/> class.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Inedo.Otter.Extensibility.VariableFunctions.VariableFunctionParameterAttribute">
            <summary>
            Indicates that a property of a variable function implementation is a parameter.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensibility.VariableFunctions.VariableFunctionParameterAttribute.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Otter.Extensibility.VariableFunctions.VariableFunctionParameterAttribute"/> class.
            </summary>
            <param name="index">The parameter index.</param>
        </member>
        <member name="P:Inedo.Otter.Extensibility.VariableFunctions.VariableFunctionParameterAttribute.Index">
            <summary>
            Gets the positional parameter index.
            </summary>
        </member>
        <member name="P:Inedo.Otter.Extensibility.VariableFunctions.VariableFunctionParameterAttribute.Optional">
            <summary>
            Gets or sets a value indicating whether this parameter is optional.
            </summary>
        </member>
        <member name="T:Inedo.Otter.Extensibility.VariableFunctions.VariadicVariableFunctionAttribute">
            <summary>
            Indicates that a variable function is variadic.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensibility.VariableFunctions.VariadicVariableFunctionAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Otter.Extensibility.VariableFunctions.VariadicVariableFunctionAttribute"/> class.
            </summary>
            <param name="variadicPropertyName">The name of the property on the variable function class that represents variadic arguments.</param>
        </member>
        <member name="P:Inedo.Otter.Extensibility.VariableFunctions.VariadicVariableFunctionAttribute.VariadicPropertyName">
            <summary>
            Gets the name of the property on the variable function class that represents variadic arguments.
            </summary>
        </member>
        <member name="T:Inedo.Otter.Extensibility.VariableFunctions.VectorVariableFunction">
            <summary>
            Base class for vector variable functions.
            </summary>
            <seealso cref="T:Inedo.Otter.Extensibility.VariableFunctions.ScalarVariableFunction"/>
        </member>
        <member name="M:Inedo.Otter.Extensibility.VariableFunctions.VectorVariableFunction.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Otter.Extensibility.VariableFunctions.VectorVariableFunction"/> class.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensibility.VariableFunctions.VectorVariableFunction.Evaluate(Inedo.Otter.IOtterContext)">
            <summary>
            Evaluates the function and returns the result.
            </summary>
            <param name="context">The current execution context if applicable.</param>
            <returns>Result of the function.</returns>
        </member>
        <member name="M:Inedo.Otter.Extensibility.VariableFunctions.VectorVariableFunction.EvaluateVector(Inedo.Otter.IOtterContext)">
            <summary>
            Evaluates the function and returns the result.
            </summary>
            <param name="context">The current execution context if applicable.</param>
            <returns>Result of the function.</returns>
        </member>
        <member name="T:Inedo.Otter.Extensions.Configurations.DictionaryConfiguration">
            <summary>
            Represents a simple key/value pair configuration.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensions.Configurations.DictionaryConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Otter.Extensions.Configurations.DictionaryConfiguration"/> class.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensions.Configurations.DictionaryConfiguration.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Otter.Extensions.Configurations.DictionaryConfiguration"/> class.
            </summary>
            <param name="dictionary">Dictionary to copy.</param>
        </member>
        <member name="P:Inedo.Otter.Extensions.Configurations.DictionaryConfiguration.Items">
            <summary>
            Gets or sets the items.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensions.Configurations.DictionaryConfiguration.GetProperties">
            <summary>
            Returns the properties.
            </summary>
            <returns>The properties.</returns>
        </member>
        <member name="M:Inedo.Otter.Extensions.Configurations.DictionaryConfiguration.ToDictionary">
            <summary>
            Returns a copy as a dictionary.
            </summary>
            <returns>Copy as a dictionary.</returns>
        </member>
        <member name="T:Inedo.Otter.Extensions.Configurations.DictionaryConfigurationEntry">
            <summary>
            Represents a dictionary configuration entry.
            </summary>
        </member>
        <member name="P:Inedo.Otter.Extensions.Configurations.DictionaryConfigurationEntry.Key">
            <summary>
            Gets or sets the key.
            </summary>
        </member>
        <member name="P:Inedo.Otter.Extensions.Configurations.DictionaryConfigurationEntry.Value">
            <summary>
            Gets or sets the value.
            </summary>
        </member>
        <member name="T:Inedo.Otter.Extensions.Configurations.KeyValueConfiguration">
            <summary>
            A configuration that describes any aspect of a server as a key/value pair, primarily designed for use by scripts.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensions.Configurations.KeyValueConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Otter.Extensions.Configurations.KeyValueConfiguration"/> class.
            </summary>
        </member>
        <member name="P:Inedo.Otter.Extensions.Configurations.KeyValueConfiguration.Type">
            <summary>
            Gets or sets the type.
            </summary>
        </member>
        <member name="P:Inedo.Otter.Extensions.Configurations.KeyValueConfiguration.Key">
            <summary>
            Gets or sets the key.
            </summary>
        </member>
        <member name="P:Inedo.Otter.Extensions.Configurations.KeyValueConfiguration.Value">
            <summary>
            Gets or sets the value.
            </summary>
        </member>
        <member name="P:Inedo.Otter.Extensions.Configurations.KeyValueConfiguration.ConfigurationTypeName">
            <summary>
            Gets the configuration type name.
            </summary>
        </member>
        <member name="P:Inedo.Otter.Extensions.Configurations.KeyValueConfiguration.ConfigurationKey">
            <summary>
            Gets the configuration key.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensions.Configurations.KeyValueConfiguration.Persist(Inedo.Otter.Extensibility.Configurations.ConfigurationPersistenceContext)">
            <summary>
            Persists the configuration.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="T:Inedo.Otter.Extensions.Credentials.BuildMasterCredentials">
            <summary>
            Represents BuildMaster credentials.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensions.Credentials.BuildMasterCredentials.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Otter.Extensions.Credentials.BuildMasterCredentials"/> class.
            </summary>
        </member>
        <member name="P:Inedo.Otter.Extensions.Credentials.BuildMasterCredentials.Host">
            <summary>
            Gets or sets the host name.
            </summary>
        </member>
        <member name="P:Inedo.Otter.Extensions.Credentials.BuildMasterCredentials.ApiKey">
            <summary>
            Gets or sets the API key.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensions.Credentials.BuildMasterCredentials.GetDescription">
            <summary>
            Gets the description.
            </summary>
        </member>
        <member name="T:Inedo.Otter.Extensions.Credentials.IInedoProductCredentials">
            <summary>
            Implemented by resource credentials which are used for connecting
            to another Inedo product.
            </summary>
        </member>
        <member name="P:Inedo.Otter.Extensions.Credentials.IInedoProductCredentials.Host">
            <summary>
            Gets the host name.
            </summary>
        </member>
        <member name="P:Inedo.Otter.Extensions.Credentials.IInedoProductCredentials.ApiKey">
            <summary>
            Gets the API key.
            </summary>
        </member>
        <member name="T:Inedo.Otter.Extensions.Credentials.OtterCredentials">
            <summary>
            Represents Otter credentials.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensions.Credentials.OtterCredentials.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Otter.Extensions.Credentials.OtterCredentials"/> class.
            </summary>
        </member>
        <member name="P:Inedo.Otter.Extensions.Credentials.OtterCredentials.Host">
            <summary>
            Gets the host name.
            </summary>
        </member>
        <member name="P:Inedo.Otter.Extensions.Credentials.OtterCredentials.ApiKey">
            <summary>
            Gets the API key.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensions.Credentials.OtterCredentials.GetDescription">
            <summary>
            Gets the description.
            </summary>
        </member>
        <member name="T:Inedo.Otter.Extensions.Credentials.PrivateKeyCredentials">
            <summary>
            Represents a private key with an optional user name and passphrase.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensions.Credentials.PrivateKeyCredentials.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Otter.Extensions.Credentials.PrivateKeyCredentials"/> class.
            </summary>
        </member>
        <member name="P:Inedo.Otter.Extensions.Credentials.PrivateKeyCredentials.UserName">
            <summary>
            Gets or sets the user name.
            </summary>
        </member>
        <member name="P:Inedo.Otter.Extensions.Credentials.PrivateKeyCredentials.PrivateKey">
            <summary>
            Gets or sets the private key.
            </summary>
        </member>
        <member name="P:Inedo.Otter.Extensions.Credentials.PrivateKeyCredentials.Passphrase">
            <summary>
            Gets or sets the passphrase.
            </summary>
        </member>
        <member name="P:Inedo.Otter.Extensions.Credentials.PrivateKeyCredentials.PublicKey">
            <summary>
            Gets or sets the public key.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensions.Credentials.PrivateKeyCredentials.GetDescription">
            <summary>
            Returns the description.
            </summary>
        </member>
        <member name="T:Inedo.Otter.Extensions.Credentials.ProGetCredentials">
            <summary>
            Represents ProGet credentials.
            </summary>
        </member>
        <member name="P:Inedo.Otter.Extensions.Credentials.ProGetCredentials.Url">
            <summary>
            Gets or sets the server URL.
            </summary>
        </member>
        <member name="P:Inedo.Otter.Extensions.Credentials.ProGetCredentials.UserName">
            <summary>
            Gets or sets the user name.
            </summary>
        </member>
        <member name="P:Inedo.Otter.Extensions.Credentials.ProGetCredentials.Password">
            <summary>
            Gets or sets the password.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensions.Credentials.ProGetCredentials.GetDescription">
            <summary>
            Returns the description.
            </summary>
        </member>
        <member name="T:Inedo.Otter.Extensions.Credentials.UsernamePasswordCredentials">
            <summary>
            Represents a user name and password.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensions.Credentials.UsernamePasswordCredentials.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Otter.Extensions.Credentials.UsernamePasswordCredentials"/> class.
            </summary>
        </member>
        <member name="P:Inedo.Otter.Extensions.Credentials.UsernamePasswordCredentials.UserName">
            <summary>
            Gets or sets the user name.
            </summary>
        </member>
        <member name="P:Inedo.Otter.Extensions.Credentials.UsernamePasswordCredentials.Password">
            <summary>
            Gets or sets the password.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensions.Credentials.UsernamePasswordCredentials.GetDescription">
            <summary>
            Gets the description.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensions.Credentials.UsernamePasswordCredentials.Equals(Inedo.Otter.Extensions.Credentials.UsernamePasswordCredentials)">
            <summary>
            Returns a value indicating whether this instance is equivalent to another.
            </summary>
            <param name="other">The other instance.</param>
            <returns>True if objects are equivalent; otherwise false.</returns>
        </member>
        <member name="M:Inedo.Otter.Extensions.Credentials.UsernamePasswordCredentials.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equivalent to another.
            </summary>
            <param name="obj">The other instance.</param>
            <returns>True if objects are equivalent; otherwise false.</returns>
        </member>
        <member name="M:Inedo.Otter.Extensions.Credentials.UsernamePasswordCredentials.GetHashCode">
            <summary>
            Returns a hash code.
            </summary>
            <returns>Hash code.</returns>
        </member>
        <member name="T:Inedo.Otter.Extensions.FieldEditMode">
            <summary>
            Indicates how a field is to be edited.
            </summary>
            <remarks>
            This is only applicable to string-based fields.
            </remarks>
        </member>
        <member name="F:Inedo.Otter.Extensions.FieldEditMode.Singleline">
            <summary>
            Display a single line textbox.
            </summary>
        </member>
        <member name="F:Inedo.Otter.Extensions.FieldEditMode.SingleLine">
            <summary>
            Display a single line textbox.
            </summary>
        </member>
        <member name="F:Inedo.Otter.Extensions.FieldEditMode.Multiline">
            <summary>
            Display as a multiline (3 row) textarea.
            </summary>
        </member>
        <member name="F:Inedo.Otter.Extensions.FieldEditMode.MultiLine">
            <summary>
            Display as a multiline (3 row) textarea.
            </summary>
        </member>
        <member name="F:Inedo.Otter.Extensions.FieldEditMode.Password">
            <summary>
            Display as a password text box.
            </summary>
        </member>
        <member name="T:Inedo.Otter.Extensions.FieldEditModeAttribute">
            <summary>
            Indicates how a property should be edited as a text value in generic action editors.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensions.FieldEditModeAttribute.#ctor(Inedo.Otter.Extensions.FieldEditMode)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Otter.Extensions.FieldEditModeAttribute"/> class.
            </summary>
            <param name="fieldEditMode">The field edit mode.</param>
        </member>
        <member name="P:Inedo.Otter.Extensions.FieldEditModeAttribute.EditMode">
            <summary>
            Gets or sets the edit mode.
            </summary>
        </member>
        <member name="T:Inedo.Otter.Extensions.RaftRepositories.DatabaseRaftRepository">
            <summary>
            The default raft repository that is stored in the Otter database.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Extensions.RaftRepositories.DatabaseRaftRepository.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Otter.Extensions.RaftRepositories.DatabaseRaftRepository"/> class.
            </summary>
        </member>
        <member name="P:Inedo.Otter.Extensions.RaftRepositories.DatabaseRaftRepository.ReadOnly">
            <summary>
            Gets or sets a value indicating whether the repository should be treated as read only.
            </summary>
        </member>
        <member name="T:Inedo.Otter.Extensions.RaftRepositories.DirectoryRaftRepository">
            <summary>
            A simple disk-based repository.
            </summary>
            <remarks>
            This is the base class of the built-in disk repository, and is provided
            as a convenience to implementors of additional repository types.
            </remarks>
        </member>
        <member name="P:Inedo.Otter.Extensions.RaftRepositories.DirectoryRaftRepository.RepositoryPath">
            <summary>
            Gets or sets the disk path.
            </summary>
        </member>
        <member name="P:Inedo.Otter.Extensions.RaftRepositories.DirectoryRaftRepository.ReadOnly">
            <summary>
            Gets or sets a value indicating whether the repository should be treated as read only.
            </summary>
        </member>
        <member name="T:Inedo.Otter.OtterConfig">
            <summary>
            Contains global Otter configuration settings.
            </summary>
            <summary>
            Contains global Otter configuration settings.
            </summary>
            <summary>
            Contains global Otter configuration settings.
            </summary>
        </member>
        <member name="T:Inedo.Otter.OtterConfig.Extensions">
            <summary>
            Contains configuration for the extensions manager.
            </summary>
        </member>
        <member name="P:Inedo.Otter.OtterConfig.Extensions.ExtensionsPath">
            <summary>
            Gets or sets the path of the extensions library.
            </summary>
        </member>
        <member name="P:Inedo.Otter.OtterConfig.Extensions.ServiceTempPath">
            <summary>
            Gets or sets the temporary path used by the extensions manager in the service.
            </summary>
        </member>
        <member name="P:Inedo.Otter.OtterConfig.Extensions.WebTempPath">
            <summary>
            Gets or sets the temporary path used by the extensions manager in the web application.
            </summary>
        </member>
        <member name="P:Inedo.Otter.OtterConfig.Extensions.UpdateFeedUrl">
            <summary>
            Gets or sets the URL of the universal feed where extensions are published.
            </summary>
        </member>
        <member name="T:Inedo.Otter.OtterConfig.Execution">
            <summary>
            Contains configuration related to execution from the Otter service.
            </summary>
        </member>
        <member name="P:Inedo.Otter.OtterConfig.Execution.RoutineConfigurationExecutionThrottle">
            <summary>
            Gets or sets the routine configuration executer throttle.
            </summary>
        </member>
        <member name="P:Inedo.Otter.OtterConfig.Execution.DefaultWorkingDirectory">
            <summary>
            Gets or sets the default temporary directory for executions on the Otter server.
            </summary>
        </member>
        <member name="T:Inedo.Otter.OtterConfig.InfrastructureSync">
            <summary>
            Contains configuration for the the infrastructure synchronization feature.
            </summary>
        </member>
        <member name="P:Inedo.Otter.OtterConfig.InfrastructureSync.Enabled">
            <summary>
            Gets or sets whether automatic infrastructure synchronization is enabled.
            </summary>
        </member>
        <member name="P:Inedo.Otter.OtterConfig.InfrastructureSync.CredentialName">
            <summary>
            Gets or sets the credential name used to connect to the synchronization source.
            </summary>
        </member>
        <member name="M:Inedo.Otter.OtterConfig.InfrastructureSync.GetCredentialName">
            <summary>
            Gets the name of the credential.
            </summary>
        </member>
        <member name="P:Inedo.Otter.OtterConfig.InfrastructureSync.Frequency">
            <summary>
            Gets or sets the frequency (in seconds) of polling when a synchronization source is specified.
            </summary>
        </member>
        <member name="P:Inedo.Otter.OtterConfig.InfrastructureSync.DryRun">
            <summary>
            Gets or sets dry run mode.
            </summary>
        </member>
        <member name="P:Inedo.Otter.OtterConfig.InfrastructureSync.ShowBanner">
            <summary>
            Gets or sets whether automatic infrastructure synchronization banners should be shown on servers, roles, and environments pages.
            </summary>
        </member>
        <member name="T:Inedo.Otter.OtterConfig.Licensing">
            <summary>
            Contains licensing configuration.
            </summary>
        </member>
        <member name="P:Inedo.Otter.OtterConfig.Licensing.Key">
            <summary>
            Gets or sets the license key.
            </summary>
        </member>
        <member name="P:Inedo.Otter.OtterConfig.Licensing.ActivationCode">
            <summary>
            Gets or sets the activation code.
            </summary>
        </member>
        <member name="P:Inedo.Otter.OtterConfig.Licensing.ShowExpressEditionNotices">
            <summary>
            Gets or sets whether Express Edition information panels should be displayed in the UI.
            </summary>
        </member>
        <member name="T:Inedo.Otter.OtterConfig.Updates">
            <summary>
            Contains configuration for Otter software and extension updates.
            </summary>
        </member>
        <member name="P:Inedo.Otter.OtterConfig.Updates.PerformUpdateChecks">
            <summary>
            Gets or sets whether update checks should occur from the Otter service.
            </summary>
        </member>
        <member name="P:Inedo.Otter.OtterConfig.Updates.IncludeBeta">
            <summary>
            Gets or sets whether update checks should show a notification when a newer beta version has been released.
            </summary>
        </member>
        <member name="P:Inedo.Otter.OtterConfig.Updates.SkipVersion">
            <summary>
            Gets or sets the version number that, when equal to the most recently released version, is hidden from the UI.
            </summary>
        </member>
        <member name="P:Inedo.Otter.OtterConfig.Updates.HideUntil">
            <summary>
            Gets or sets the time (UTC) that the update notification should not be shown in the UI.
            </summary>
        </member>
        <member name="P:Inedo.Otter.OtterConfig.Updates.LatestUpdates">
            <summary>
            Gets or sets the latest updates information, which is base-64 encoded and gzipped.
            </summary>
        </member>
        <member name="P:Inedo.Otter.OtterConfig.Updates.LastUpdateCheck">
            <summary>
            Gets or sets the last time (UTC) Otter checked for an update.
            </summary>
        </member>
        <member name="T:Inedo.Otter.OtterConfig.Smtp">
            <summary>
            Contains SMTP configuration.
            </summary>
        </member>
        <member name="P:Inedo.Otter.OtterConfig.Smtp.Host">
            <summary>
            Gets or sets the host name or IP address of the SMTP server.
            </summary>
        </member>
        <member name="P:Inedo.Otter.OtterConfig.Smtp.Port">
            <summary>
            Gets or sets the port number used to connect to the SMTP server.
            </summary>
        </member>
        <member name="P:Inedo.Otter.OtterConfig.Smtp.UserName">
            <summary>
            Gets or sets the username used to authenticate with the SMTP server.
            </summary>
        </member>
        <member name="P:Inedo.Otter.OtterConfig.Smtp.Password">
            <summary>
            Gets or sets the password used to authenticate with the SMTP server.
            </summary>
        </member>
        <member name="P:Inedo.Otter.OtterConfig.Smtp.EnableSSL">
            <summary>
            Gets or sets a value indicating whether SSL should be used.
            </summary>
        </member>
        <member name="P:Inedo.Otter.OtterConfig.Smtp.FromAddress">
            <summary>
            Gets or sets the "from" address of any emails sent from the system.
            </summary>
        </member>
        <member name="P:Inedo.Otter.OtterConfig.Smtp.FromName">
            <summary>
            Gets or sets the "from" name of any emails sent from the system.
            </summary>
        </member>
        <member name="P:Inedo.Otter.OtterConfig.Smtp.Timeout">
            <summary>
            Gets or sets the number of seconds before the SMTP client should timeout.
            </summary>
        </member>
        <member name="M:Inedo.Otter.OtterConfig.Smtp.CreateClient">
            <summary>
            Returns a new <see cref="T:System.Net.Mail.SmtpClient"/> instance initialized with the appropriate settings.
            </summary>
            <returns>New <see cref="T:System.Net.Mail.SmtpClient"/> instance.</returns>
        </member>
        <member name="M:Inedo.Otter.OtterConfig.Smtp.CreateMessage">
            <summary>
            Returns a new <see cref="T:System.Net.Mail.MailMessage"/> instance initialized with the appropriate settings.
            </summary>
            <returns>New <see cref="T:System.Net.Mail.MailMessage"/> instance.</returns>
        </member>
        <member name="T:Inedo.Otter.OtterConfig.Proxy">
            <summary>
            Contains proxy configuration settings.
            </summary>
        </member>
        <member name="P:Inedo.Otter.OtterConfig.Proxy.Enabled">
            <summary>
            Gets or sets a value indicating whether to use a web proxy.
            </summary>
        </member>
        <member name="P:Inedo.Otter.OtterConfig.Proxy.UseDefault">
            <summary>
            Gets or sets a value indicating whether Otter should use the system default web proxy.
            </summary>
        </member>
        <member name="P:Inedo.Otter.OtterConfig.Proxy.BypassOnLocal">
            <summary>
            Gets or sets a value that determines whether Otter should bypass the web proxy for local addresses.
            </summary>
        </member>
        <member name="P:Inedo.Otter.OtterConfig.Proxy.Host">
            <summary>
            Gets or sets the host name or IP address of the proxy server.
            </summary>
        </member>
        <member name="P:Inedo.Otter.OtterConfig.Proxy.Port">
            <summary>
            Gets or sets the port number used to connect to the proxy server.
            </summary>
        </member>
        <member name="P:Inedo.Otter.OtterConfig.Proxy.UserName">
            <summary>
            Gets or sets the username used to authenticate with the proxy server.
            </summary>
        </member>
        <member name="P:Inedo.Otter.OtterConfig.Proxy.Password">
            <summary>
            Gets or sets the password used to authenticate with the proxy server.
            </summary>
        </member>
        <member name="P:Inedo.Otter.OtterConfig.Proxy.BypassUrls">
            <summary>
            Gets or sets a list of URLs that will bypass the proxy server.
            </summary>
        </member>
        <member name="M:Inedo.Otter.OtterConfig.Proxy.CreateFromConfig">
            <summary>
            Creates an instance of <see cref="T:System.Net.IWebProxy"/> with the appropriate settings.
            </summary>
            <returns>New <see cref="T:System.Net.IWebProxy"/> instance.</returns>
        </member>
        <member name="P:Inedo.Otter.OtterConfig.IntegrationUrl">
            <summary>
            Gets or sets the base URL for online integration with Otter.
            </summary>
        </member>
        <member name="T:Inedo.Otter.OtterConfig.Web">
            <summary>
            Contains configuration for the Otter web application.
            </summary>
        </member>
        <member name="P:Inedo.Otter.OtterConfig.Web.IntegratedAuthenticationEnabled">
            <summary>
            Gets or sets a value indicating whether integrated authentication is enabled.
            </summary>
        </member>
        <member name="P:Inedo.Otter.OtterConfig.Web.UserDirectoryId">
            <summary>
            Gets or sets the current user directory ID.
            </summary>
        </member>
        <member name="P:Inedo.Otter.OtterConfig.Web.IgnoreServiceWarning">
            <summary>
            Gets or sets a value indicating whether service warnings are ignored.
            </summary>
        </member>
        <member name="T:Inedo.Otter.OtterContext">
            <summary>
            Standard implementation of an <see cref="T:Inedo.Otter.IOtterContext"/>.
            </summary>
        </member>
        <member name="M:Inedo.Otter.OtterContext.#ctor">
            <summary>
            Intitializes a new instance of the <see cref="T:Inedo.Otter.OtterContext"/> class.
            </summary>
        </member>
        <member name="P:Inedo.Otter.OtterContext.EnvironmentId">
            <summary>
            Gets the current environment ID if applicable.
            </summary>
        </member>
        <member name="P:Inedo.Otter.OtterContext.ServerId">
            <summary>
            Gets the current server ID if applicable.
            </summary>
        </member>
        <member name="P:Inedo.Otter.OtterContext.ServerRoleId">
            <summary>
            Gets the current server role ID if applicable.
            </summary>
        </member>
        <member name="P:Inedo.Otter.OtterContext.JobId">
            <summary>
            Gets the current job ID if applicable.
            </summary>
        </member>
        <member name="P:Inedo.Otter.OtterContext.HostId">
            <summary>
            Gets the current server host ID if applicable.
            </summary>
        </member>
        <member name="P:Inedo.Otter.OtterContext.PlanName">
            <summary>
            Gets the current plan name if applicable.
            </summary>
        </member>
        <member name="M:Inedo.Otter.OtterContext.WithEnvironment(System.Nullable{System.Int32})">
            <summary>
            Returns a copied instance of the the current context with the specified environment ID.
            </summary>
            <param name="environmentId">The new environment ID.</param>
            <returns>Copied context.</returns>
        </member>
        <member name="M:Inedo.Otter.OtterContext.WithServer(System.Nullable{System.Int32})">
            <summary>
            Returns a copied instance of the the current context with the specified server ID.
            </summary>
            <param name="serverId">The new server ID.</param>
            <returns>Copied context.</returns>
        </member>
        <member name="M:Inedo.Otter.OtterContext.WithServerRole(System.Nullable{System.Int32})">
            <summary>
            Returns a copied instance of the the current context with the specified server role ID.
            </summary>
            <param name="serverRoleId">The new server role ID.</param>
            <returns>Copied context.</returns>
        </member>
        <member name="M:Inedo.Otter.OtterContext.WithJob(System.Nullable{System.Int32})">
            <summary>
            Returns a copied instance of the the current context with the specified job ID.
            </summary>
            <param name="jobId">The new job ID.</param>
            <returns>Copied context.</returns>
        </member>
        <member name="T:Inedo.Otter.IOtterContext">
            <summary>
            Represents a context within Otter.
            </summary>
        </member>
        <member name="P:Inedo.Otter.IOtterContext.JobId">
            <summary>
            Gets the current job ID if applicable.
            </summary>
        </member>
        <member name="P:Inedo.Otter.IOtterContext.ServerId">
            <summary>
            Gets the current server ID if applicable.
            </summary>
        </member>
        <member name="P:Inedo.Otter.IOtterContext.EnvironmentId">
            <summary>
            Gets the current environment ID if applicable.
            </summary>
        </member>
        <member name="P:Inedo.Otter.IOtterContext.ServerRoleId">
            <summary>
            Gets the current server role ID if applicable.
            </summary>
        </member>
        <member name="T:Inedo.Otter.LazyCached`1">
            <summary>
            Provides a lazily initialized value that remains cached for a period of time.
            </summary>
            <typeparam name="T">Type that is lazily initialized.</typeparam>
        </member>
        <member name="M:Inedo.Otter.LazyCached`1.#ctor(System.Func{`0},System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Otter.LazyCached`1"/> class.
            </summary>
            <param name="valueFactory">Factory method which is used to create a new instance of the <typeparamref name="T"/> type.</param>
            <param name="cacheExpirationPeriod">Absolute timeout period for the cached data.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="valueFactory"/> is null.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="cacheExpirationPeriod"/> is less than one second.</exception>
        </member>
        <member name="M:Inedo.Otter.LazyCached`1.#ctor(System.Func{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Otter.LazyCached`1"/> class with a default expiration period of five minutes.
            </summary>
            <param name="valueFactory">Factory method which is used to create a new instance of the <typeparamref name="T"/> type.</param>
        </member>
        <member name="P:Inedo.Otter.LazyCached`1.CacheExpirationPeriod">
            <summary>
            Gets the cache expiration period.
            </summary>
        </member>
        <member name="P:Inedo.Otter.LazyCached`1.Value">
            <summary>
            Gets the lazily initialized or cached value.
            </summary>
        </member>
        <member name="M:Inedo.Otter.LazyCached`1.Invalidate">
            <summary>
            Invalidates the cached value.
            </summary>
        </member>
        <member name="T:Inedo.Otter.OtterConfig`1">
            <summary>
            Represents the base class of configuration used by other scopes.
            </summary>
            <typeparam name="TConfig">The configuration type. This type should be the subclass itself.</typeparam>
        </member>
        <member name="T:Inedo.Otter.InternalConfig">
            <summary>
            This needs to be in a nongeneric class to prevent multiple
            copies of the cache from being created.
            </summary>
        </member>
        <member name="T:Inedo.Otter.OtterScriptSymbolComparer">
            <summary>
            Represents a string comparison operation that ignores case and also treats
            - and _ characters as identical.
            </summary>
        </member>
        <member name="P:Inedo.Otter.OtterScriptSymbolComparer.Instance">
            <summary>
            Gets the instance of the <see cref="T:Inedo.Otter.OtterScriptSymbolComparer"/> class.
            </summary>
        </member>
        <member name="T:Inedo.Otter.Plans.ExecutionPolicy">
            <summary>
            Represents an execution policy for an Otter operation group.
            </summary>
        </member>
        <member name="F:Inedo.Otter.Plans.ExecutionPolicy.ExecuteOnChange">
            <summary>
            Operations within this group will execute only if an ensure operation in the group indicated
            that configuration changed; this is the default value for configuration plans.
            </summary>
        </member>
        <member name="F:Inedo.Otter.Plans.ExecutionPolicy.AlwaysExecute">
            <summary>
            Operations within this group will always execute.
            </summary>
        </member>
        <member name="T:Inedo.Otter.Plans.StatementExtensions">
            <summary>
            Contains Otter-specific extensions for execution engine statements.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Plans.StatementExtensions.GetExecutionPolicy(Inedo.ExecutionEngine.ExecutionDirectiveStatement)">
            <summary>
            Returns the execution policy defined for the statement if one is explicitly specified.
            </summary>
            <param name="statement">The statement.</param>
            <returns></returns>
        </member>
        <member name="T:Inedo.Otter.Variables.OtterVariable">
            <summary>
            Represents an Otter variable value.
            </summary>
        </member>
        <member name="P:Inedo.Otter.Variables.OtterVariable.Name">
            <summary>
            Gets the name and type of the variable.
            </summary>
        </member>
        <member name="P:Inedo.Otter.Variables.OtterVariable.Value">
            <summary>
            Gets the variable value.
            </summary>
        </member>
        <member name="P:Inedo.Otter.Variables.OtterVariable.Scope">
            <summary>
            Gets the scope of the variable.
            </summary>
        </member>
        <member name="P:Inedo.Otter.Variables.OtterVariable.Id">
            <summary>
            Gets the ID of the variable.
            </summary>
        </member>
        <member name="P:Inedo.Otter.Variables.OtterVariable.ServerId">
            <summary>
            Gets the server ID of the variable scope if applicable.
            </summary>
        </member>
        <member name="P:Inedo.Otter.Variables.OtterVariable.EnvironmentId">
            <summary>
            Gets the environment ID of the variable scope if applicable.
            </summary>
        </member>
        <member name="P:Inedo.Otter.Variables.OtterVariable.ServerRoleId">
            <summary>
            Gets the role ID of the variable scope if applicable.
            </summary>
        </member>
        <member name="P:Inedo.Otter.Variables.OtterVariable.JobId">
            <summary>
            Gets the job ID of the variable scope if applicable.
            </summary>
        </member>
        <member name="P:Inedo.Otter.Variables.OtterVariable.HostId">
            <summary>
            Gets the host ID of the variable scope if applicable.
            </summary>
        </member>
        <member name="P:Inedo.Otter.Variables.OtterVariable.HasMultipleScopes">
            <summary>
            Gets a value indicating whether the variable has more than one scope.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Variables.OtterVariable.GetVariablesForScope(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Returns a sequence of all of the variables that are defined in the specified scope.
            </summary>
            <param name="serverId">The server ID.</param>
            <param name="environmentId">The environment ID.</param>
            <param name="serverRoleId">The role ID.</param>
            <param name="jobId">The job ID.</param>
            <param name="hostId">The host ID.</param>
            <returns>Sequence of all of the variables that are defined in the specified scope.</returns>
        </member>
        <member name="M:Inedo.Otter.Variables.OtterVariable.GetVariablesAccessibleFromScope(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Returns a sequence of all of the variables that are defined in the specified scope, or
            defined in a scope that logically contains the specified scope.
            </summary>
            <param name="serverId">The server ID.</param>
            <param name="environmentId">The environment ID.</param>
            <param name="serverRoleId">The role ID.</param>
            <param name="jobId">The job ID.</param>
            <param name="hostId">The host ID.</param>
            <param name="expandRolesAndEnvironments">Value indicating whether roles and environments should be expanded.</param>
            <param name="variableName">The variable name.</param>
            <returns>Sequence of all of the variables that are accessible.</returns>
        </member>
        <member name="M:Inedo.Otter.Variables.OtterVariable.GetCascadedVariable(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Returns the specified variable or any other matching variable in a containing scope.
            </summary>
            <param name="variableName">The variable name.</param>
            <param name="serverId">The server ID.</param>
            <param name="environmentId">The environment ID.</param>
            <param name="serverRoleId">The role ID.</param>
            <param name="jobId">The job ID.</param>
            <param name="hostId">The host ID.</param>
            <param name="expandRolesAndEnvironments">The expand roles and environments.</param>
            <returns>
            The variable if it was found; otherwise null.
            </returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Inedo.Otter.Variables.OtterVariable.ToString">
            <summary>
            Returns a string representation of the variable and its value.
            </summary>
            <returns>String representation of the variable and its value.</returns>
        </member>
        <member name="T:Inedo.Otter.Variables.OtterVariableScope">
            <summary>
            Specifies the scope of an Otter variable.
            </summary>
        </member>
        <member name="F:Inedo.Otter.Variables.OtterVariableScope.Global">
            <summary>
            Global.
            </summary>
        </member>
        <member name="F:Inedo.Otter.Variables.OtterVariableScope.Environment">
            <summary>
            Environment.
            </summary>
        </member>
        <member name="F:Inedo.Otter.Variables.OtterVariableScope.ServerRole">
            <summary>
            Server role.
            </summary>
        </member>
        <member name="F:Inedo.Otter.Variables.OtterVariableScope.Host">
            <summary>
            Server host.
            </summary>
        </member>
        <member name="F:Inedo.Otter.Variables.OtterVariableScope.Server">
            <summary>
            Server.
            </summary>
        </member>
        <member name="F:Inedo.Otter.Variables.OtterVariableScope.Job">
            <summary>
            Job.
            </summary>
        </member>
        <member name="T:Inedo.Otter.Web.Controls.Extensions.CustomEditorAttribute">
            <summary>
            Indicates that a type or property has a custom editor.
            </summary>
        </member>
        <member name="M:Inedo.Otter.Web.Controls.Extensions.CustomEditorAttribute.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Otter.Web.Controls.Extensions.CustomEditorAttribute"/> class.
            </summary>
            <param name="editorType">Type of the editor.</param>
        </member>
        <member name="M:Inedo.Otter.Web.Controls.Extensions.CustomEditorAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Otter.Web.Controls.Extensions.CustomEditorAttribute"/> class.
            </summary>
            <param name="editorTypeName">Assembly qualified name of the editor's type.</param>
        </member>
        <member name="P:Inedo.Otter.Web.Controls.Extensions.CustomEditorAttribute.EditorType">
            <summary>
            Gets the type of the editor control.
            </summary>
        </member>
        <member name="T:Inedo.Documentation.DirectoryHilite">
            <summary>
            Descriptive text which contains a directory.
            </summary>
        </member>
        <member name="M:Inedo.Documentation.DirectoryHilite.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Documentation.DirectoryHilite"/> class.
            </summary>
            <param name="directory">The directory.</param>
        </member>
        <member name="M:Inedo.Documentation.DirectoryHilite.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Documentation.DirectoryHilite"/> class.
            </summary>
            <param name="rootDirectory">The root directory.</param>
            <param name="relativeDirectory">The relative directory.</param>
        </member>
        <member name="M:Inedo.Documentation.DirectoryHilite.WriteHtml(System.IO.TextWriter)">
            <summary>
            Writes the description as HTML.
            </summary>
            <param name="writer"><see cref="T:System.IO.TextWriter"/> instance to write the description to.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="writer"/> is null.</exception>
        </member>
        <member name="M:Inedo.Documentation.DirectoryHilite.WritePlainText(System.IO.TextWriter)">
            <summary>
            Writes the description as plain text.
            </summary>
            <param name="writer"><see cref="T:System.IO.TextWriter"/> instance to write the description to.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="writer"/> is null.</exception>
        </member>
        <member name="T:Inedo.Documentation.ExtendedRichDescription">
            <summary>
            Provides a short and long description of something.
            </summary>
        </member>
        <member name="M:Inedo.Documentation.ExtendedRichDescription.#ctor(Inedo.Documentation.RichDescription)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Documentation.ExtendedRichDescription"/> class.
            </summary>
            <param name="shortDescription">The short description.</param>
        </member>
        <member name="M:Inedo.Documentation.ExtendedRichDescription.#ctor(Inedo.Documentation.RichDescription,Inedo.Documentation.RichDescription)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Documentation.ExtendedRichDescription"/> class.
            </summary>
            <param name="shortDescription">The short description.</param>
            <param name="longDescription">The long description.</param>
        </member>
        <member name="P:Inedo.Documentation.ExtendedRichDescription.ShortDescription">
            <summary>
            Gets the short description.
            </summary>
        </member>
        <member name="P:Inedo.Documentation.ExtendedRichDescription.LongDescription">
            <summary>
            Gets the long description or null if it is not defined.
            </summary>
        </member>
        <member name="M:Inedo.Documentation.ExtendedRichDescription.ToString">
            <summary>
            Returns an undecorated plaintext string of both the short and long descriptions.
            </summary>
            <returns>String containing the short and long descriptions.</returns>
        </member>
        <member name="T:Inedo.Documentation.Hilite">
            <summary>
            Descriptive text that is emphasized.
            </summary>
        </member>
        <member name="M:Inedo.Documentation.Hilite.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Documentation.Hilite"/> class.
            </summary>
            <param name="text">The text.</param>
        </member>
        <member name="M:Inedo.Documentation.Hilite.WriteHtml(System.IO.TextWriter)">
            <summary>
            Writes the description as HTML.
            </summary>
            <param name="writer"><see cref="T:System.IO.TextWriter"/> instance to write the description to.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="writer"/> is null.</exception>
        </member>
        <member name="M:Inedo.Documentation.Hilite.WritePlainText(System.IO.TextWriter)">
            <summary>
            Writes the description as plain text.
            </summary>
            <param name="writer"><see cref="T:System.IO.TextWriter"/> instance to write the description to.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="writer"/> is null.</exception>
        </member>
        <member name="T:Inedo.Documentation.IRichDescriptionNode">
            <summary>
            Represents a rich description node that can format itself.
            </summary>
        </member>
        <member name="M:Inedo.Documentation.IRichDescriptionNode.WritePlainText(System.IO.TextWriter)">
            <summary>
            Writes the description as plain text.
            </summary>
            <param name="writer"><see cref="T:System.IO.TextWriter"/> instance to write the description to.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="writer"/> is null.</exception>
        </member>
        <member name="M:Inedo.Documentation.IRichDescriptionNode.WriteHtml(System.IO.TextWriter)">
            <summary>
            Writes the description as HTML.
            </summary>
            <param name="writer"><see cref="T:System.IO.TextWriter"/> instance to write the description to.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="writer"/> is null.</exception>
        </member>
        <member name="T:Inedo.Documentation.ListHilite">
            <summary>
            Describes a list of items.
            </summary>
        </member>
        <member name="M:Inedo.Documentation.ListHilite.#ctor(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Documentation.ListHilite"/> class.
            </summary>
            <param name="values">The list values.</param>
        </member>
        <member name="M:Inedo.Documentation.ListHilite.#ctor(System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Documentation.ListHilite"/> class.
            </summary>
            <param name="values">The list values.</param>
        </member>
        <member name="M:Inedo.Documentation.ListHilite.WriteHtml(System.IO.TextWriter)">
            <summary>
            Writes the description as HTML.
            </summary>
            <param name="writer"><see cref="T:System.IO.TextWriter"/> instance to write the description to.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="writer"/> is null.</exception>
        </member>
        <member name="M:Inedo.Documentation.ListHilite.WritePlainText(System.IO.TextWriter)">
            <summary>
            Writes the description as plain text.
            </summary>
            <param name="writer"><see cref="T:System.IO.TextWriter"/> instance to write the description to.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="writer"/> is null.</exception>
        </member>
        <member name="T:Inedo.Documentation.MaskHilite">
            <summary>
            Descriptive text which contains file masks.
            </summary>
        </member>
        <member name="M:Inedo.Documentation.MaskHilite.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Documentation.MaskHilite"/> class.
            </summary>
            <param name="includes">Include masks.</param>
            <param name="excludes">Exclude masks.</param>
        </member>
        <member name="M:Inedo.Documentation.MaskHilite.#ctor(System.String[],System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Documentation.MaskHilite"/> class.
            </summary>
            <param name="includes">Include masks.</param>
            <param name="excludes">Exclude masks.</param>
        </member>
        <member name="M:Inedo.Documentation.MaskHilite.WritePlainText(System.IO.TextWriter)">
            <summary>
            Writes the description as plain text.
            </summary>
            <param name="writer"><see cref="T:System.IO.TextWriter"/> instance to write the description to.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="writer"/> is null.</exception>
        </member>
        <member name="M:Inedo.Documentation.MaskHilite.WriteHtml(System.IO.TextWriter)">
            <summary>
            Writes the description as HTML.
            </summary>
            <param name="writer"><see cref="T:System.IO.TextWriter"/> instance to write the description to.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="writer"/> is null.</exception>
        </member>
        <member name="T:Inedo.Documentation.RichDescription">
            <summary>
            Descriptive text that can be displayed as plain text or highlighted HTML.
            </summary>
        </member>
        <member name="M:Inedo.Documentation.RichDescription.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Documentation.RichDescription"/> class.
            </summary>
        </member>
        <member name="M:Inedo.Documentation.RichDescription.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Documentation.RichDescription"/> class.
            </summary>
            <param name="content">The content.</param>
        </member>
        <member name="M:Inedo.Documentation.RichDescription.#ctor(System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Documentation.RichDescription"/> class.
            </summary>
            <param name="content">The content.</param>
        </member>
        <member name="M:Inedo.Documentation.RichDescription.AppendContent(System.Object)">
            <summary>
            Adds content to the end of the description.
            </summary>
            <param name="content">The content.</param>
        </member>
        <member name="M:Inedo.Documentation.RichDescription.AppendContent(System.Object[])">
            <summary>
            Adds content to the end of the description.
            </summary>
            <param name="content">The content.</param>
        </member>
        <member name="M:Inedo.Documentation.RichDescription.WritePlainText(System.IO.TextWriter)">
            <summary>
            Writes the description as plain text.
            </summary>
            <param name="writer"><see cref="T:System.IO.TextWriter"/> instance to write the description to.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="writer"/> is null.</exception>
        </member>
        <member name="M:Inedo.Documentation.RichDescription.WriteHtml(System.IO.TextWriter)">
            <summary>
            Writes the description as HTML.
            </summary>
            <param name="writer"><see cref="T:System.IO.TextWriter"/> instance to write the description to.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="writer"/> is null.</exception>
        </member>
        <member name="M:Inedo.Documentation.RichDescription.ToString">
            <summary>
            Returns an undecorated plaintext string of the description.
            </summary>
            <returns>String containing the description.</returns>
        </member>
        <member name="M:Inedo.Documentation.RichDescription.ToHtml">
            <summary>
            Returns an HTML formatted string of the description.
            </summary>
            <returns>HTML formatted string containing the description.</returns>
        </member>
        <member name="M:Inedo.Documentation.RichDescription.Unwrap(System.Object)">
            <summary>
            Returns a <see cref="T:Inedo.Web.Controls.ISimpleControl"/> that renders a formatted description.
            </summary>
            <returns>control to render</returns>
        </member>
        <member name="T:Inedo.Documentation.StandardText">
            <summary>
            Descriptive text which may contain variable expressions.
            </summary>
        </member>
        <member name="M:Inedo.Documentation.StandardText.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Documentation.StandardText"/> class.
            </summary>
            <param name="text">The text.</param>
        </member>
        <member name="P:Inedo.Documentation.StandardText.Text">
            <summary>
            Gets the text.
            </summary>
        </member>
        <member name="M:Inedo.Documentation.StandardText.WritePlainText(System.IO.TextWriter)">
            <summary>
            Writes the description as plain text.
            </summary>
            <param name="writer"><see cref="T:System.IO.TextWriter"/> instance to write the description to.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="writer"/> is null.</exception>
        </member>
        <member name="M:Inedo.Documentation.StandardText.WriteHtml(System.IO.TextWriter)">
            <summary>
            Writes the description as HTML.
            </summary>
            <param name="writer"><see cref="T:System.IO.TextWriter"/> instance to write the description to.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="writer"/> is null.</exception>
        </member>
        <member name="M:Inedo.Documentation.StandardText.WriteInnerPlainText(System.IO.TextWriter)">
            <summary>
            Writes the description as plain text.
            </summary>
            <param name="writer"><see cref="T:System.IO.TextWriter"/> instance to write the description to.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="writer"/> is null.</exception>
        </member>
        <member name="M:Inedo.Documentation.StandardText.WriteInnerHtml(System.IO.TextWriter)">
            <summary>
            Writes the description as HTML.
            </summary>
            <param name="writer"><see cref="T:System.IO.TextWriter"/> instance to write the description to.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="writer"/> is null.</exception>
        </member>
        <member name="T:Inedo.Documentation.UnprocessedText">
            <summary>
            Plain unprocessed text with no variable detection.
            </summary>
        </member>
        <member name="M:Inedo.Documentation.UnprocessedText.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Documentation.UnprocessedText"/> class.
            </summary>
            <param name="text">The text.</param>
        </member>
        <member name="M:Inedo.Documentation.UnprocessedText.WritePlainText(System.IO.TextWriter)">
            <summary>
            Writes the description as plain text.
            </summary>
            <param name="writer"><see cref="T:System.IO.TextWriter"/> instance to write the description to.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="writer"/> is null.</exception>
        </member>
        <member name="M:Inedo.Documentation.UnprocessedText.WriteHtml(System.IO.TextWriter)">
            <summary>
            Writes the description as HTML.
            </summary>
            <param name="writer"><see cref="T:System.IO.TextWriter"/> instance to write the description to.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="writer"/> is null.</exception>
        </member>
    </members>
</doc>
